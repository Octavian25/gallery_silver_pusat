{"version":3,"sources":["pages/Laporan/LaporanService/LaporanServiceSelesai/pdf/LaporanServiceSelesaiPdf.jsx","pages/Laporan/LaporanService/LaporanServiceSelesai/exel/LaporanServiceSelesaiExel.jsx","pages/Laporan/LaporanService/LaporanServiceSelesai/HeadServiceSelesai.jsx","pages/Laporan/LaporanService/LaporanServiceSelesai/index.jsx"],"names":["LaporanServiceSelesaiPdf","tableColumn","data","arguments","length","undefined","doc","jsPDF","tableRows","finalY","setFontSize","text","getUserdata","nama_toko","jml_alamat","alamat_toko","slice","setProperties","title","concat","localStoragedecryp","JSON","parse","tgl_awal","tgl_akhir","content","styles","halign","total","forEach","item","index","detail_barang","ongkos","rows","no_faktur_service","tgl_system","nama_customer","alamat_customer","kode_sales","deskripsi","berat","toFixed","parseInt","toLocaleString","push","footer","colSpan","fillColor","textColor","printed","user_id","getToday","fontStyle","autoTable","head","body","startY","theme","rowPageBreak","margin","top","footStyles","fontSize","bodyStyles","headStyles","tableLineColor","tableLineWidth","autoTableEndPosY","pages","internal","getNumberOfPages","pageWidth","pageSize","width","pageHeight","height","j","horizontalPos","verticalPos","setPage","align","save","LaporanServiceSelesaiExel","props","_this","Object","classCallCheck","this","_super","call","state","react_default","a","createElement","Fragment","react_html_table_to_excel_default","id","className","table","filename","sheet","buttonText","style","display","textAlign","backgroundColor","color","map","row","key","Component","HeadServiceSelesai","date","Date","columns","dataField","footerAttrs","cell","num","LaporanServiceSelesai","headerClasses","formatter","setStartDate","bind","assertThisInitialized","setLastDate","setState","_this2","onSubmit","handleSubmit","autoComplete","Field","name","component","InputDate","label","type","selected","onChange","placeholder","value","isLoading","tabel","keyField","export","empty","textEmpty","onClick","exportPdf","exel_LaporanServiceSelesaiExel","loading_default","loading","background","loaderColor","reduxForm","form","enableReinitialize","validate","ValidasiTanggalLaporan","connect","initialValues","getTglSystem","data_post","formatDate","moment","format","postDataNoTImeOut","then","res","ToastNotification","catch","err","_this3","library","to","LaporanServiceSelesai_HeadServiceSelesai","React"],"mappings":"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","file":"static/js/109.7c77f449.chunk.js","sourcesContent":["import jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport {\n  getToday,\n  getUserdata,\n  localStoragedecryp,\n} from \"../../../../../components/helpers/function\";\n// Date Fns is used to format the dates we receive\n\n// define a generatePDF function that accepts a tickets argument\nconst LaporanServiceSelesaiPdf = (\n  data = \"\",\n  username = \"\",\n  tanggal_dari = \"\",\n  tanggal_sampai = \"\"\n) => {\n  // initialize jsPDF\n  const doc = new jsPDF(\"l\", \"mm\", [297, 210]);\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\n  let tableRows = [];\n  // let footRows = [];\n  let tableColumn = [];\n  let finalY = 30;\n\n\n  doc.setFontSize(15);\n  doc.text(\"LAPORAN SERVICE SELESAI\", 14, 15);\n  doc.setFontSize(20);\n  doc.text(getUserdata().nama_toko, 200, 15);\n  doc.setFontSize(8);\n  let jml_alamat = getUserdata().alamat_toko.length;\n  if (jml_alamat > 20) {\n    doc.text(getUserdata().alamat_toko.slice(0,48), 200, 20);\n  }\n  if (jml_alamat > 50) {\n    doc.text(getUserdata().alamat_toko.slice(48,90), 200, 25);\n  }\n  doc.setFontSize(10);\n  doc.setProperties({\n    title: \"LAPORAN SERVICE SELESAI\",\n  });\n  //row 1\n  doc.text(\n    `PERIODE : ${\n      localStoragedecryp(\"tgl_laporan\").length === 0\n        ? null\n        : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\n          \" s/d \" +\n          JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_akhir\n    }`,\n    14,\n    25\n  );\n  tableColumn = [\n    [\n      {\n        content: `NO SERVICE`,\n      },\n      {\n        content: `TGL TRANSAKSI`,\n      },\n      {\n        content: `NAMA CUSTOMER`,\n      },\n      {\n        content: `SALES`,\n      },\n      {\n        content: `DESKRIPSI`,\n      },\n      {\n        content: `BERAT`,\n        styles: {\n          halign: 'right',\n        },\n      },\n      {\n        content: `QTY`,\n        styles: {\n          halign: 'right',\n        },\n      },\n      {\n        content: `ONGKOS`,\n        styles: {\n          halign: 'right',\n        },\n      },\n    ],\n  ];\n  let total = 0;\n  data.forEach((item, index) => {\n    total = total + item.detail_barang.ongkos;\n    let rows = [\n      item.no_faktur_service,\n      item.tgl_system,\n      item.nama_customer,\n      item.alamat_customer,\n      item.kode_sales,\n      item.detail_barang.deskripsi,\n      {\n        content: item.detail_barang.berat.toFixed(3),\n        styles: {\n          halign: 'right',\n        },\n      },\n    \n      {\n        content: parseInt(item.detail_barang.ongkos).toLocaleString(\"kr-KO\"),\n        styles: {\n          halign : \"right\",\n        }\n      },\n      \n\n    ];\n    tableRows.push(rows)\n  })\n  \n  let footer = [\n    {\n      content: `Total Transaksi: ${data.length}`,\n      colSpan: 8,\n      styles: {\n        halign: 'center',\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n      },\n    },\n    {\n      content: parseInt(total).toLocaleString(\"kr-KO\"),\n      styles: {\n        halign: \"right\",\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n      }\n    },\n  ]\n  tableRows.push(footer)\n\n  let printed = [\n    {\n      content: `Printed By ${JSON.parse(localStoragedecryp(\"userdata\")).user_id} / ${getToday()}`,\n      colSpan: 7,\n      styles: {\n        // lineWidth: 0.1,\n        fontStyle: \"italic\",\n        textColor: \"#000\",\n        // fillColor: \"#E8E5E5\"\n      },\n    },\n  ]\n  tableRows.push(printed);\n\n  doc.autoTable({\n    head: tableColumn,\n    body: tableRows,\n    // foot: tbl_barang,\n    startY: finalY,\n    theme: \"plain\",\n    rowPageBreak: \"avoid\",\n    // pageBreak: \"avoid\",\n    margin: { top: 10 },\n    footStyles: {\n      // lineWidth: 0.02,\n      // lineColor: \"#000\",\n      fontSize: 8,\n    },\n    bodyStyles: {\n      // lineWidth: 0.02,\n      // lineColor: \"#000\",\n      fontSize: 8,\n    },\n    headStyles: {\n      fontSize: 8,\n      // lineWidth: 0.02,\n      // lineColor: \"#000\",\n      fillColor: \"#E8E5E5\",\n      textColor: \"#000\",\n    },\n    tableLineColor: [255, 255, 255],\n    tableLineWidth: 1,\n  });\n  finalY = doc.autoTableEndPosY() + 3;\n  tableRows = [];\n  // footRows = [];\n  // tbl_barang = [];\n  // const date = Date().split(\" \");\n  // we use a date string to generate our filename.\n  // const dateStr = date[2] + date[3] + date[4];\n  // ticket title. and margin-top + margin-left\n  // doc.text(\n  //   `User                          : ${\n  //     JSON.parse(localStoragedecryp(\"userdata\")).user_id\n  //   }`,\n  //   14,\n  //   finalY + 10\n  // );\n  // doc.text(`Cetak                        : ${getToday()}`, 14, finalY + 16);\n  const pages = doc.internal.getNumberOfPages();\n  const pageWidth = doc.internal.pageSize.width; //Optional\n  const pageHeight = doc.internal.pageSize.height; //Optional\n  doc.setFontSize(10); //Optional\n  for (let j = 1; j < pages + 1; j++) {\n    let horizontalPos = pageWidth / 2; //Can be fixed number\n    let verticalPos = pageHeight - 10; //Can be fixed number\n    doc.setPage(j);\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\n      align: \"center\",\n    });\n  }\n  // doc.autoPrint();\n  doc.save(`LAPORAN SERVICE SELESAI.pdf`);\n  // var string = doc.output(\"datauristring\");\n  // // var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\n  // var x = window.open();\n  // x.document.open();\n  // x.document.write(\n  //   \"<html><head><title>LAPORAN SERVICE SELESAI</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\n  //     string +\n  //     \"></embed></body></html>\"\n  // );\n  // x.document.write(embed);\n  // setInterval(() => {\n  //   x.close();\n  // }, 1000);\n};\n\nexport default LaporanServiceSelesaiPdf;\n","import React, { Component } from \"react\";\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\nimport {\n  getUserdata,\n  localStoragedecryp,\n} from \"../../../../../components/helpers/function\";\nclass LaporanServiceSelesaiExel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <>\n        <ReactHTMLTableToExcel\n          id=\"test-table-xls-button\"\n          className=\"btn btn-success btn-block\"\n          table=\"table-to-xls\"\n          filename=\"Laporan Service Masuk\"\n          sheet=\"Laporan Service Masuk\"\n          buttonText=\"Export Exel\"\n        />\n        <table id=\"table-to-xls\" style={{ display: \"none\" }}>\n          <thead>\n            <tr>\n              <th colSpan=\"5\" style={{ textAlign: \"center\" }}>\n                {\" \"}\n                LAPORAN SERVICE MASUK{\" \"}\n              </th>\n            </tr>\n            <tr>\n              <th colSpan=\"5\"> Periode </th>\n            </tr>\n            <tr>\n              <th colSpan=\"5\">\n                {\" \"}\n                {localStoragedecryp(\"tgl_laporan\").length === 0\n                  ? null\n                  : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\n                    \" s/d \" +\n                    JSON.parse(localStoragedecryp(\"tgl_laporan\"))\n                      .tgl_akhir}{\" \"}\n              </th>\n            </tr>\n            <tr>\n              <th colSpan=\"5\"> TOKO : {getUserdata().nama_toko} </th>\n            </tr>\n\n            <tr>\n              <th colSpan=\"5\"> ALAMAT : {getUserdata().alamat_toko} </th>\n            </tr>\n            <tr></tr>\n            <tr>\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\n                NO SERVICE\n              </td>\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\n                TGL TRANSAKSI\n              </td>\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\n                NAMA CUSTOME\n              </td>\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                  textAlign: \"right\",\n                }}\n              >\n                ALAMAT\n              </td>\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                  textAlign: \"right\",\n                }}\n              >\n                SALES\n              </td>\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                  textAlign: \"right\",\n                }}\n              >\n                DESKRIPSI\n              </td>\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                  textAlign: \"right\",\n                }}\n              >\n                BERAT\n              </td>\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                  textAlign: \"right\",\n                }}\n              >\n                ONGKOS\n              </td>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.data.map((row, index) => (\n              <>\n                <tr key={index}>\n                  <td>{row.no_faktur_service}</td>\n                  <td>{row.tgl_system}</td>\n                  <td>{row.nama_customer}</td>\n                  <td>{row.alamat_customer}</td>\n                  <td>{row.kode_sales}</td>\n                  <td>{row.detail_barang.deskripsi}</td>\n                  <td>{row.detail_barang.berat.toFixed(2)}</td>\n                  <td>{row.detail_barang.ongkos.toLocaleString(\"kr-KO\")}</td>\n                </tr>\n              </>\n            ))}\n          </tbody>\n          <tfoot>\n            <tr>\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                  textAlign: \"center\",\n                }}\n                colSpan=\"8\"\n              >\n                Total Transaksi {this.props.data.length}\n              </td>\n            </tr>\n          </tfoot>\n        </table>\n      </>\n    );\n  }\n}\nexport default LaporanServiceSelesaiExel;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { InputDate } from \"../../../../components/helpers/field\";\nimport { getTglSystem } from \"../../../../components/helpers/function\";\nimport Tabel from \"../../../../components/helpers/tabel\";\nimport ValidasiTanggalLaporan from \"../../../../Validasi/ValidasiTanggalLaporan\";\nimport Loading from \"react-fullscreen-loading\";\nimport LaporanServiceSelesaiPdf from \"./pdf/LaporanServiceSelesaiPdf\";\nimport LaporanServiceSelesaiExel from \"./exel/LaporanServiceSelesaiExel\";\nclass HeadServiceSelesai extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: new Date(),\n      columns: [\n        {\n          dataField: \"no_faktur_service\",\n          text: \"No Service\",\n          footerAttrs: {\n            colSpan: \"8\",\n          },\n          footer: (cell, row, num, index) => {\n            return (\n              <div>\n                Total Transaksi : {this.props.LaporanServiceSelesai.length}{\" \"}\n              </div>\n            );\n          },\n        },\n        {\n          dataField: \"tgl_system\",\n          text: \"Tgl Transaksi\",\n        },\n        {\n          dataField: \"nama_customer\",\n          text: \"Nama Customer\",\n        },\n\n        {\n          dataField: \"alamat_customer\",\n          text: \"Alamat\",\n        },\n        {\n          dataField: \"kode_sales\",\n          text: \"Sales\",\n        },\n        {\n          dataField: \"detail_barang.deskripsi\",\n          text: \"Deskripsi\",\n        },\n        {\n          dataField: \"detail_barang.berat\",\n          text: \"Berat\",\n          headerClasses: \"text-right\",\n          formatter: (cell) => {\n            return <div className=\"text-right\">{cell.toFixed(2)}</div>;\n          },\n        },\n        {\n          dataField: \"detail_barang.ongkos\",\n          text: \"Ongkos\",\n          headerClasses: \"text-right\",\n          formatter: (cell) => {\n            return (\n              <div className=\"text-right\">{cell.toLocaleString(\"kr-KO\")}</div>\n            );\n          },\n        },\n      ],\n    };\n    this.setStartDate = this.setStartDate.bind(this);\n    this.setLastDate = this.setLastDate.bind(this);\n  }\n\n  exportPdf() {\n    LaporanServiceSelesaiPdf(this.props.LaporanServiceSelesai);\n  }\n  setStartDate(date) {\n    this.setState({\n      tgl_awal: new Date(date),\n    });\n  }\n  setLastDate(date) {\n    this.setState({\n      tgl_akhir: new Date(date),\n    });\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.props.handleSubmit} autoComplete=\"off\">\n        <div className=\"row\">\n          <div className=\"col-lg-4\">\n            <Field\n              name=\"tgl_awal\"\n              component={InputDate}\n              label=\"Tanggal Dari\"\n              type=\"text\"\n              selected={this.state.tgl_awal}\n              onChange={(date) => this.setStartDate(date)}\n              placeholder=\"Masukan Tanggal Dari\"\n            />\n          </div>\n\n          <div className=\"col-lg-4\">\n            <Field\n              name=\"tgl_akhir\"\n              component={InputDate}\n              type=\"text\"\n              selected={this.state.tgl_akhir}\n              onChange={(date) => this.setLastDate(date)}\n              label=\"Tanggal Akhir\"\n              placeholder=\"Masukan Tanggal Akhir\"\n            />\n          </div>\n\n          <div className=\"col-lg-4\">\n            <div className=\"text-right\">\n              <label>&nbsp;</label>\n              <button\n                type=\"submit\"\n                value=\"PDF\"\n                name=\"type_btn\"\n                className=\"btn btn-primary btn-block\"\n              >\n                {this.props.isLoading ? (\n                  <>\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\n                    Mencari\n                  </>\n                ) : (\n                  \"Cari Laporan\"\n                )}\n              </button>\n            </div>\n          </div>\n          <div className=\"col-lg-12\">\n            <Tabel\n              keyField=\"no_faktur_service\"\n              data={this.props.export ? this.props.LaporanServiceSelesai : []}\n              columns={this.state.columns}\n              empty={true}\n              textEmpty=\"Data Laporan Service Selesai Kosong\"\n            />\n          </div>\n          <div className={this.props.export ? \"col-lg-12\" : \"col-lg-12 d-none\"}>\n            {/* <label htmlFor=\"\">&nbsp;</label> */}\n            <div className=\"row\">\n              <div className=\"col-lg-6\">\n                <button\n                  type=\"button\"\n                  onClick={() => this.exportPdf()}\n                  className=\"btn btn-warning btn-block\"\n                >\n                  {\" \"}\n                  Export PDF{\" \"}\n                </button>\n              </div>\n              <div className=\"col-lg-6\">\n                <LaporanServiceSelesaiExel\n                  data={this.props.LaporanServiceSelesai}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        {this.props.isLoading ? (\n          <Loading\n            loading\n            background=\"rgba(0, 0, 0, 0.35)\"\n            loaderColor=\"rgba(94, 147, 117, 1)\"\n          />\n        ) : null}\n      </form>\n    );\n  }\n}\n\nHeadServiceSelesai = reduxForm({\n  form: \"HeadServiceSelesai\",\n  enableReinitialize: true,\n  validate: ValidasiTanggalLaporan,\n})(HeadServiceSelesai);\n// export default connect()(HeadServiceSelesai);\nexport default connect((state) => {\n  return {\n    initialValues: {\n      tgl_awal: getTglSystem(),\n      tgl_akhir: getTglSystem(),\n    },\n  };\n})(HeadServiceSelesai);\n","import {\n  React,\n  connect,\n  Link,\n  reduxForm,\n  Panel,\n  PanelHeader,\n  postDataNoTImeOut,\n  formatDate,\n  moment,\n  ToastNotification,\n  PanelBody,\n} from \"../../../../components/helpers/library\";\nimport HeadServiceSelesai from \"./HeadServiceSelesai\";\n\nclass LaporanServiceSelesai extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      LaporanServiceSelesai: [],\n      export: false,\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(data) {\n    let data_post = {\n      tgl_awal: formatDate(\n        moment(new Date(data.tgl_awal)).format(\"YYYY-MM-DD\")\n      ),\n      tgl_akhir: formatDate(\n        moment(new Date(data.tgl_akhir)).format(\"YYYY-MM-DD\")\n      ),\n    };\n    this.setState({\n      isLoading: true,\n    });\n    postDataNoTImeOut(\"service/get/serviceselesai\", data_post)\n      .then((res) => {\n        // console.log(res);\n        if (res.data.length === 0) {\n          ToastNotification(\"info\", \"Laporan Service Selesai Kosong\");\n          this.setState({\n            export: false,\n            isLoading: false,\n          });\n          return false;\n        }\n        ToastNotification(\"success\", \"Laporan Service Selesai Tersedia\");\n        this.setState({\n          LaporanServiceSelesai: res.data,\n          isLoading: false,\n          export: true,\n        });\n      })\n      .catch((err) => {\n        ToastNotification(\"info\", \"Data Yang Di Cari Tidak Ada !!!\");\n        this.setState({\n          export: false,\n          isLoading: false,\n        });\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <ol className=\"breadcrumb float-xl-right\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"#\">Laporan</Link>\n          </li>\n          <li className=\"breadcrumb-item active\">Laporan Service Selesai</li>\n        </ol>\n        <h1 className=\"page-header\">Laporan Service Selesai </h1>\n        <Panel>\n          <PanelHeader>Laporan Service Selesai</PanelHeader>\n          <br />\n          {/* Blank Page */}\n          <PanelBody>\n            <HeadServiceSelesai\n              export={this.state.export}\n              isLoading={this.state.isLoading}\n              LaporanServiceSelesai={this.state.LaporanServiceSelesai}\n              onSubmit={(data) => this.handleSubmit(data)}\n            />\n          </PanelBody>\n          <br />\n          {/* End Tambah Blank Page  */}\n        </Panel>\n      </div>\n    );\n  }\n}\n\nLaporanServiceSelesai = reduxForm({\n  form: \"LaporanServiceSelesai\",\n  enableReinitialize: true,\n})(LaporanServiceSelesai);\nexport default connect(null)(LaporanServiceSelesai);\n"],"sourceRoot":""}