{"version":3,"sources":["pages/DataMaster/DataKadar/FormModalKadar.jsx","pages/DataMaster/DataKadar/MasterKadar.jsx","Validasi/ValidasiMasterJenis.jsx"],"names":["FormModalKadar","props","_this","Object","classCallCheck","this","_super","call","state","aktif","_this2","react_default","a","createElement","onSubmit","handleSubmit","autoComplete","onKeyPress","e","key","preventDefault","Field","name","type","component","HiidenFiled","id","tabIndex","ReanderField","label","normalize","NumberOnly","onBlur","setState","placeholder","className","onClick","dispatch","hideModal","disabled","isLoading","Fragment","loading_default","loading","background","loaderColor","Component","reduxForm","form","enableReinitialize","validate","ValidasiMasterJenis","connect","datamaster","ShowModalDataKadar","initialValues","kadar_lama","kadar","MasterKadar","hapusDataKadar","params","Swal","fire","html","icon","position","cancelButtonText","showCancelButton","confirmButtonText","showConfirmButton","then","result","isConfirmed","deleteData","ToastNotification","getDataKadar","catch","err","_err$response","response","data","isEdit","modalDialog","columns","dataField","text","csvExport","headerClasses","formatter","rowcontent","row","dataEdit","_id","formEditKadar","bind","assertThisInitialized","data_post","putData","reset","error","_error$response","postData","ErrorHandling","NotifError","showModal","_this3","react_router_dom","to","panel","tabel","keyField","tambahData","handleClick","exportCsv","DataKadar","empty","textEmpty","ModalGlobal","title","size","content","DataKadar_FormModalKadar","React","value","event","errors","kode_group","kode_kategori","kode_jenis","nama_jenis"],"mappings":"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","file":"static/js/38.f094e92e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { hideModal } from \"../../../actions/datamaster_action\";\r\n\r\nimport {\r\n  HiidenFiled,\r\n  ReanderField,\r\n} from \"../../../components/helpers/field\";\r\nimport { NumberOnly } from \"../../../Validasi/normalize\";\r\nimport ValidasiMasterJenis from \"../../../Validasi/ValidasiMasterJenis.jsx\";\r\nimport Loading from \"react-fullscreen-loading\";\r\n\r\nconst maptostate = (state) => {\r\n  if (state.datamaster.ShowModalDataKadar !== null) {\r\n    return {\r\n      initialValues: {\r\n        kadar_lama: state.datamaster.ShowModalDataKadar.kadar,\r\n        kadar: state.datamaster.ShowModalDataKadar.kadar,\r\n      },\r\n    };\r\n  }\r\n};\r\n\r\nclass FormModalKadar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      aktif: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // setTimeout(() => {\r\n    //   document.getElementById(\"type_kadar\").focus();\r\n    // }, 100);\r\n  }\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit}\r\n        autoComplete=\"off\"\r\n        onKeyPress={(e) => {\r\n          e.key === \"Enter\" && e.preventDefault();\r\n        }}\r\n      >\r\n        {/* <div className=\"form-group\">\r\n          <Field\r\n            id=\"type_kadar\"\r\n            label=\"Type Kadar\"\r\n            name=\"type_kadar\"\r\n            options={option}\r\n            value={this.props.type_kadar}\r\n            disabled={this.props.isEdit}\r\n            onBlur={() => this.setState({ aktif: true })}\r\n            placeholder={\"Silahkan Pilih Type Kadar\"}\r\n            component={ReanderSelect}\r\n          />\r\n        </div> */}\r\n        <Field name=\"kadar_lama\" type=\"hidden\" component={HiidenFiled} />\r\n\r\n        \r\n        <Field\r\n          id=\"kadar\"\r\n          tabIndex=\"1\"\r\n          name=\"kadar\"\r\n          component={ReanderField}\r\n          type=\"text\"\r\n          label=\"Kadar\"\r\n          normalize={NumberOnly}\r\n          onBlur={() => this.setState({ aktif: true })}\r\n          placeholder=\"Masukan Kadar\"\r\n        />\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-12 text-right\">\r\n            <button\r\n              className=\"btn btn-white\"\r\n              onClick={() => this.props.dispatch(hideModal())}\r\n              type=\"button\"\r\n              disabled={this.props.isLoading}\r\n            >\r\n              Batal\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              tabIndex=\"2\"\r\n              className={this.state.aktif ? \"btn btn-primary\" : \"btn btn-white\"}\r\n              disabled={this.props.isLoading}\r\n              type=\"submit\"\r\n            >\r\n              {this.props.isLoading ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                  Menyimpan\r\n                </>\r\n              ) : (\r\n                \"Simpan Data\"\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {this.props.isLoading ? (\r\n          <Loading\r\n            loading\r\n            background=\"rgba(0, 0, 0, 0.35)\"\r\n            loaderColor=\"rgba(94, 147, 117, 1)\"\r\n          />\r\n        ) : null}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormModalKadar = reduxForm({\r\n  form: \"ModalKadar\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiMasterJenis,\r\n})(FormModalKadar);\r\nexport default connect(maptostate, null)(FormModalKadar);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Panel, PanelHeader } from \"../../../components/panel/panel.jsx\";\r\nimport {\r\n  ShowModalDataKadar,\r\n  showModal,\r\n  getDataKadar,\r\n  hideModal,\r\n} from \"../../../actions/datamaster_action.jsx\";\r\nimport { connect } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n  NotifError,\r\n  ToastNotification,\r\n} from \"../../../components/helpers/notification.jsx\";\r\nimport { reset } from \"redux-form\";\r\nimport { deleteData, postData, putData } from \"../../../config/axios.jsx\";\r\nimport Tabel from \"../../../components/helpers/tabel.jsx\";\r\nimport FormModalKadar from \"./FormModalKadar.jsx\";\r\nimport ModalGlobal from \"../../../components/helpers/ModalGlobal.jsx\";\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    // DataGroup: state.datamaster.GetDataGroup,\r\n    DataKadar: state.datamaster.getDataKadar,\r\n    hideModal: state.datamaster.modalDialog,\r\n  };\r\n};\r\n\r\nclass MasterKadar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEdit: false,\r\n      modalDialog: false,\r\n      isLoading: false,\r\n      columns: [\r\n        {\r\n          dataField: \"kadar\",\r\n          text: \"Kadar\",\r\n        },\r\n        {\r\n          dataField: \"action\",\r\n          text: \"Action\",\r\n          csvExport: false,\r\n          headerClasses: \"text-center\",\r\n          formatter: (rowcontent, row) => {\r\n            let dataEdit = {\r\n              _id: row._id,\r\n              kadar: row.kadar,\r\n            };\r\n            return (\r\n              <div className=\"row text-center\">\r\n                <div className=\"col-12\">\r\n                  <button\r\n                    onClick={() => this.formEditKadar(dataEdit)}\r\n                    className=\"btn btn-primary mr-3\"\r\n                  >\r\n                    {\" \"}\r\n                    <i className=\"fa fa-edit\"></i>\r\n                  </button>\r\n                  <button\r\n                    onClick={() =>\r\n                      this.hapusDataKadar(\r\n                        row.kadar,\r\n                        this.props.dispatch\r\n                      )\r\n                    }\r\n                    className=\"btn btn-danger\"\r\n                  >\r\n                    <i className=\"fa fa-trash\"></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  hapusDataKadar = (params) => {\r\n    Swal.fire({\r\n      html:\r\n        \"Apakah Anda Yakin Ingin \" +\r\n        \"Menghapus \" +\r\n        \"<h1><b>Kadar \" +\r\n        params +\r\n        \"</b> ?</h1>\",\r\n      icon: \"warning\",\r\n      position: \"top-center\",\r\n      cancelButtonText: \"Tidak\",\r\n      showCancelButton: true,\r\n      confirmButtonText: \"OK\",\r\n      showConfirmButton: true,\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        deleteData(\"masterkadar/delete/by-kadar/\" + params).then(() => {\r\n          ToastNotification(\"success\", \"Data Berhasil Di Hapus\").then(() =>\r\n            this.props.dispatch(getDataKadar())\r\n          );\r\n        }).catch((err) => {\r\n          ToastNotification(\"info\",err.response?.data)\r\n        })\r\n      }\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.props.dispatch(getDataKadar());\r\n  }\r\n  handleSubmit(data) {\r\n    this.setState({ isLoading: true });\r\n    let data_post = {\r\n      kadar: data.kadar,\r\n    };\r\n    this.state.isEdit\r\n      ? putData(\"masterkadar/edit/by-kadar/\" + data.kadar_lama, data_post)\r\n          .then(() => {\r\n            this.props.dispatch(hideModal());\r\n          })\r\n          .then(() => ToastNotification(\"success\", \"Data Berhasil Diedit\"))\r\n          .then(() => {\r\n            this.props.dispatch(getDataKadar());\r\n          })\r\n          .then(() => {\r\n            this.setState({ isLoading: false });\r\n          })\r\n          .then(() => {\r\n            this.props.dispatch(reset(\"ModalKadar\"));\r\n          })\r\n        .catch((error) => {\r\n          ToastNotification(\"info\", error.response?.data)\r\n          this.setState({ isLoading: false });\r\n          })\r\n      : postData(\"masterkadar/add\", data_post)\r\n          .then(() => {\r\n            this.props.dispatch(hideModal());\r\n          })\r\n          .then(() => ToastNotification(\"success\", \"Data Berhasil Disimpan\"))\r\n          .then(() => {\r\n            this.props.dispatch(getDataKadar());\r\n          })\r\n          .then(() => {\r\n            this.props.dispatch(reset(\"ModalKadar\"));\r\n          })\r\n          .then(() => {\r\n            this.setState({ isLoading: false });\r\n          })\r\n          .catch((error) => this.ErrorHandling(error));\r\n  }\r\n  ErrorHandling(err) {\r\n    this.setState({ isLoading: false });\r\n    NotifError(err);\r\n  }\r\n  formEditKadar(dataEdit) {\r\n    this.props.dispatch(showModal());\r\n    this.props.dispatch(ShowModalDataKadar(dataEdit));\r\n    this.setState({\r\n      isEdit: true,\r\n    });\r\n  }\r\n  ShowModalDataKadar() {\r\n    this.props.dispatch(showModal());\r\n    this.props.dispatch(ShowModalDataKadar(false));\r\n    this.setState({\r\n      isEdit: false,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Data Master</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Master Kadar</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Master Kadar </h1>\r\n        <Panel>\r\n          <PanelHeader>Master Kadar</PanelHeader>\r\n          <br />\r\n\r\n          {/* Master Kadar */}\r\n          <div className=\"container\">\r\n            <Tabel\r\n              keyField=\"kondisi\"\r\n              tambahData={true}\r\n              handleClick={() => this.ShowModalDataKadar()}\r\n              exportCsv={true}\r\n              data={this.props.DataKadar}\r\n              columns={this.state.columns}\r\n              empty={this.props.DataKadar}\r\n              textEmpty=\"Data Kadar Kosong\"\r\n            />\r\n          </div>\r\n          <br />\r\n          {/* End Master Kadar */}\r\n\r\n          <ModalGlobal\r\n            title={this.state.isEdit ? \"Edit Data Kadar\" : \"Tambah Data Kadar\"}\r\n            size=\"P\"\r\n            content={\r\n              <FormModalKadar\r\n                isLoading={this.state.isLoading}\r\n                isEdit={this.state.isEdit}\r\n                onSubmit={(data) => this.handleSubmit(data)}\r\n              />\r\n            }\r\n          />\r\n\r\n          {/* End Tambah Master Kadar  */}\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptostate, null)(MasterKadar);\r\n","const ValidasiMasterJenis = (value,event) => {\r\n    const errors = {};\r\n    // console.log(event.charCode==13);\r\n    if (!value.kode_group) {\r\n        errors.kode_kategori = \"Kode Kategori Tidak Boleh Kosong\";\r\n    }\r\n    if (!value.kode_jenis) {\r\n        errors.kode_jenis = \"Kode Jenis Tidak Boleh Kosong\";\r\n    }\r\n    if (!value.nama_jenis) {\r\n        errors.nama_jenis = \"Nama Jenis Tidak Boleh Kosong\";\r\n    }\r\n    // console.log(value.kode_group);\r\n   \r\n    return errors;\r\n}\r\n\r\nexport default ValidasiMasterJenis;"],"sourceRoot":""}