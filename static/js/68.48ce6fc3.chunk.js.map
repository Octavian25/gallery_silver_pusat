{"version":3,"sources":["pages/Laporan/LaporanBarang/FormLaporanDetailBarang/pdf/CetakLaporanDetailBarang.jsx","pages/Laporan/LaporanBarang/FormLaporanDetailBarang/exel/LaporanDetailBarangExel.jsx","pages/Laporan/LaporanBarang/FormLaporanDetailBarang/HeadFilterLaporan.jsx","pages/Laporan/LaporanBarang/FormLaporanDetailBarang/FormDetailBarang.jsx"],"names":["CetakLaporanDetailBarang","tableColumn","data","arguments","length","undefined","doc","jsPDF","tableRows","finalY","total_berat","total_berat_atribut","setFontSize","text","getUserdata","nama_toko","jml_alamat","alamat_toko","slice","setProperties","title","content","styles","halign","forEach","item","index","rows","concat","cellWidth","kode_barcode","kode_group","kode_dept","kode_intern","kode_gudang","nama_barang","formatGram","berat","nama_atribut","berat_atribut","stock_on_hand","push","footer","colSpan","fillColor","textColor","printed","JSON","parse","localStoragedecryp","user_id","getToday","fontStyle","autoTable","head","body","startY","theme","rowPageBreak","margin","top","bodyStyles","fontSize","headStyles","autoTableEndPosY","pages","internal","getNumberOfPages","pageWidth","pageSize","width","pageHeight","height","j","horizontalPos","verticalPos","setPage","align","save","LaporanDetailBarangExel","props","_this","Object","classCallCheck","this","_super","call","state","react_default","a","createElement","Fragment","react_html_table_to_excel_default","id","className","table","filename","sheet","buttonText","rowkey","style","display","textAlign","backgroundColor","color","map","key","list","reduce","b","Component","HeadFilterLaporan","loading","list_baki","value","name","_this2","dispatch","GetDataGroup","getDataJenis","getDataBaki","getDataGudang","setTimeout","change","kode_baki","_this3","databaki","nama_baki","dataGroup","nama_group","dataJenis","nama_dept","dataGudang","nama_gudang","onSubmit","handleSubmit","autoComplete","onKeyPress","e","preventDefault","Field","label","options","placeholder","component","ReanderSelect","field","onChange","getDataBakiByGudang","disabled","submitting","type","isLoading","tabel","keyField","columns","empty","textEmpty","export","onClick","exportPdf","exel_LaporanDetailBarangExel","loading_default","background","loaderColor","reduxForm","form","enableReinitialize","connect","datamaster","FormDetailBarang","isEdit","modalDialog","LaporanBarangDetail","dataField","footerAttrs","cell","row","num","headerClasses","formatter","columnData","acc","bind","assertThisInitialized","setState","username","kode_toko","getDataNoTimeOut","kode_jenis","then","res","ToastNotification","catch","error","errorHandling","err","NotifError","react_router_dom","to","panel","FormLaporanDetailBarang_HeadFilterLaporan","React","hideModal"],"mappings":"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","file":"static/js/68.48ce6fc3.chunk.js","sourcesContent":["import jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport { formatGram, getToday, getUserdata, localStoragedecryp } from \"../../../../../components/helpers/function\";\n// Date Fns is used to format the dates we receive\n\n// define a generatePDF function that accepts a tickets argument\nconst CetakLaporanDetailBarang = (\n  data = \"\",\n  kode_baki = \"\",\n) => {\n  // initialize jsPDF\n  const doc = new jsPDF(\"l\", \"mm\", [297, 210]);\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\n  let tableRows = [];\n  // let footRows = [];\n  let tableColumn = [];\n  let finalY = 30;\n  let total_berat = 0;\n  let total_stock = 0;\n  let total_berat_atribut = 0;\n\n\n  doc.setFontSize(15);\n  doc.text(\"LAPORAN BARANG DETAIL\", 14, 15);\n  doc.setFontSize(20);\n  doc.text(getUserdata().nama_toko, 200, 15);\n  doc.setFontSize(8);\n  let jml_alamat = getUserdata().alamat_toko.length;\n  if (jml_alamat > 20) {\n    doc.text(getUserdata().alamat_toko.slice(0,48), 200, 20);\n  }\n  if (jml_alamat > 50) {\n    doc.text(getUserdata().alamat_toko.slice(48,90), 200, 25);\n  }\n  doc.setFontSize(10);\n  doc.setProperties({\n    title: \"LAPORAN BARANG DETAIL\",\n  });\n  // doc.text(`KODE BAKI : ${kode_baki}`, 14, 25);\n  tableColumn = [\n    [\n      {\n        content: `NO`,\n      },\n      // {\n      //   content: `KODE BARANG`,\n      // },\n      {\n        content: `KODE BARCODE`,\n      },\n      {\n        content: `KODE GROUP`,\n      },\n      {\n        content: `KODE JENIS`,\n      },\n      {\n        content: `KODE INTERN`,\n      },\n      {\n        content: `KODE GUDANG`,\n      },\n      {\n        content: `NAMA BARANG`,\n      },\n      {\n        content: `BERAT`,\n        styles: {\n          halign: 'right'\n        },\n      },\n      {\n        content: `NAMA ATRIBUTE`,\n      },\n      {\n        content: `BERAT ATRIBUTE`,\n        styles: {\n          halign: 'right'\n        },\n      },\n      // {\n      //   content: `JUMLAH`,\n      // },\n    ],\n  ];\n\n  data.forEach((item, index) => {\n    // item.list_barang.forEach((barang, index) => {\n    let rows = [\n      // ++index,\n      {\n        content: `${++index}`,\n        styles: {\n          cellWidth : 10\n        },\n      },\n      // item.kode_barang,\n      item.kode_barcode,\n      item.kode_group,\n      item.kode_dept,\n      item.kode_intern,\n      item.kode_gudang,\n      item.nama_barang,\n      {\n        content: formatGram(item.berat,3),\n        styles: {\n          halign: 'right'\n        },\n      },\n      item.nama_atribut,\n     \n      {\n        content: formatGram(item.berat_atribut,3),\n        styles: {\n          halign: 'right'\n        },\n      }\n      // item.stock_on_hand,\n     \n    ];\n    total_berat = total_berat + item.berat;\n    total_stock = total_stock + item.stock_on_hand;\n    total_berat_atribut = total_berat_atribut + item.berat_atribut;\n    tableRows.push(rows);\n  });\n  \n  // let footer = [\n  //   ``,\n  //   ``,\n  //   ``,\n  //   ``,\n  //   ``,\n  //   ``,\n  //   `${total_berat.toFixed(1)}`,\n  //   ``,\n  //   `${total_berat_atribut.toFixed(1)}`,\n  //   `${total_stock.toLocaleString(\"kr-KO\")}`,\n  // ];\n  let footer = [\n    {\n      content: `Total`,\n      colSpan: 7,\n      styles: {\n        halign: 'center',\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n      },\n    },\n    {\n      content: `${formatGram(total_berat,3)}`,\n      styles: {\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n        halign: 'right'\n      },\n    },\n    {\n      content: ``,\n      styles: {\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n      },\n    },\n    {\n      content: `${formatGram(total_berat_atribut,3)}`,\n      styles: {\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n        halign: 'right'\n      },\n    },\n\n    // `${sub_qty}`,\n  ];\n  tableRows.push(footer);\n  let printed = [\n    {\n      colSpan: 6,\n      content: `Printed By ${JSON.parse(localStoragedecryp(\"userdata\")).user_id} / ${getToday()}`,\n      styles: {\n        // lineWidth: 0.1,\n        fontStyle: \"italic\",\n        textColor: \"#000\",\n        // fillColor: \"#E8E5E5\"\n      },\n    },\n  ]\n  tableRows.push(printed);\n  doc.autoTable({\n    head: tableColumn,\n    body: tableRows,\n    // foot: footRows,\n    startY: finalY,\n    theme: \"plain\",\n    rowPageBreak: \"avoid\",\n    // pageBreak: \"avoid\",\n    margin: { top: 10 },\n    bodyStyles: {\n      // lineWidth: 0.02,\n      // lineColor: \"#000\",\n      fontSize: 8,\n    },\n    headStyles: {\n      fontSize: 8,\n      // lineWidth: 0.02,\n      // lineColor: \"#000\",\n      textColor: \"#000\",\n      fillColor: \"#E8E5E5\",\n    },\n  });\n  finalY = doc.autoTableEndPosY() + 3;\n  tableRows = [];\n  // footRows = [];\n  // total_berat = 0;\n  // const date = Date().split(\" \");\n  // we use a date string to generate our filename.\n  // const dateStr = date[2] + date[3] + date[4];\n  // ticket title. and margin-top + margin-left\n  // doc.text(`Total Berat                    :  ${total_berat.toFixed(1)}`, 14, finalY + 10);\n  // doc.text(`Berat Atribut                  :  ${total_berat_atribut.toFixed(1)}`, 14, finalY + 16);\n  // doc.text(`Stock                             :  ${total_stock.toLocaleString(\"kr-KO\")}`, 14, finalY + 22);\n  // doc.text(`User                              :  ${JSON.parse(localStoragedecryp(\"userdata\")).user_id}`, 14, finalY + 10);\n  // doc.text(`Cetak                            : ${getToday()}`, 14, finalY + 16);\n  const pages = doc.internal.getNumberOfPages();\n  const pageWidth = doc.internal.pageSize.width; //Optional\n  const pageHeight = doc.internal.pageSize.height; //Optional\n  doc.setFontSize(10); //Optional\n  for (let j = 1; j < pages + 1; j++) {\n    let horizontalPos = pageWidth / 2; //Can be fixed number\n    let verticalPos = pageHeight - 10; //Can be fixed number\n    doc.setPage(j);\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\n      align: \"center\",\n    });\n  }\n  // doc.autoPrint();\n  doc.save(`LAPORAN BARANG DETAIL.pdf`);\n  // var string = doc.output(\"datauristring\");\n  // var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\n  // var x = window.open();\n  // x.document.open();\n  // x.document.write(\n  //   \"<html><head><title>LAPORAN BARANG DETAIL</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\n  //     string +\n  //     \"></embed></body></html>\"\n  // );\n  // x.document.write(embed);\n  // setInterval(() => {\n  //   x.close();\n  // }, 1000);\n};\n\nexport default CetakLaporanDetailBarang;\n// import jsPDF from \"jspdf\";\n// import \"jspdf-autotable\";\n// import { getToday } from \"../../../../components/helpers/function\";\n// // Date Fns is used to format the dates we receive\n\n// // define a generatePDF function that accepts a tickets argument\n// const CetakLaporanDetailBarang = (data = \"\", username = \"\", kode_baki = \"\") => {\n//   const doc = new jsPDF(\"l\");\n//   doc.setFontSize(15);\n//   doc.text(\"LAPORAN  BARANG DETAIL\", 14, 15);\n//   doc.setFontSize(10);\n//   doc.setProperties({\n//     title: \"LAPORAN  BARANG DETAIL\",\n//   });\n//   //row 1\n//   doc.text(`Kode Baki : ${kode_baki}`, 14, 23);\n//   let tableRows = [];\n//   let finalY = 10;\n//   let footRows = [];\n//   let total = 0;\n//   let sub_qty = 0;\n//   let sub_brt = 0;\n//   let tableColumn = [\n//     \"NO\",\n//     \"KODE BARANG\",\n//     \"KODE BARCODE\",\n//     \"KODE INTERN\",\n//     \"KODE GUDANG\",\n//     \"NAMA BARANG\",\n//     \"BERAT\",\n//     \"NAMA ATRIBUTE\",\n//     \"BERAT ATRIBUTE\",\n//     \"JUMLAH\",\n//   ];\n\n//   // console.log(JSON.stringify(data));\n//   // localStorage.setItem('hasil',JSON.stringify(data));\n//   data.forEach((item, index) => {\n//     // item.list_barang.forEach((barang, index) => {\n//     let rows = [\n//       ++index,\n//       item.kode_barang,\n//       item.kode_barcode,\n//       item.kode_intern,\n//       item.kode_gudang,\n//       item.nama_barang,\n//       item.berat,\n//       item.nama_atribut,\n//       item.berat_atribut,\n//       item.stock_on_hand,\n//     ];\n//     total = index;\n//     sub_qty = sub_qty + parseFloat(item.stock_on_hand);\n//     sub_brt = sub_brt + parseFloat(item.berat);\n//     tableRows.push(rows);\n//     let footer = [\n//       \"\",\n//       \"\",\n//       \"\",\n//       \"\",\n//       \"Sub Total\",\n//       \"\",\n//       `${sub_brt.toFixed(3)}`,\n//       \"\",\n//       \"\",\n//       `${sub_qty}`,\n//     ];\n//     footRows.push(footer);\n//     doc.autoTable(tableColumn, tableRows, {\n//       startY: index === 0 ? 35 : finalY + 15,\n//         theme: \"plain\",\n//       foot: footRows,\n//       rowPageBreak: \"avoid\",\n//       pageBreak: \"avoid\",\n//       bodyStyles: { lineWidth: 0.02, lineColor: \"#000\" },\n//       headStyles: {\n//         lineWidth: 0.02,\n//         lineColor: \"#000\",\n//         fillColor: [187, 187, 187],\n//       },\n//       // theme: \"\",\n//     });\n//     finalY = doc.lastAutoTable.finalY + 10;\n//     tableRows = [];\n//   });\n//   // let footer = [\n//   //   \"\",\n//   //   \"\",\n//   //   \"\",\n//   //   \"Total Barang : \",\n//   //   \"\" + parseFloat(total).toLocaleString(\"kr-KO\"),\n//   // ];\n//   // tableRows.push(footer);\n\n//   doc.text(`Total Barang\t: ${total}`, 14, finalY + 5);\n//   doc.text(`User\t             : ${username}`, 14, finalY + 10);\n//   doc.text(`Tgl Cetak             : ${getToday()}`, 14, finalY + 16);\n\n//   // doc.autoPrint();\n  // doc.save(`Laporan BARANG DETAIL.pdf`);\n//   var string = doc.output(\"datauristring\");\n//   var x = window.open();\n//   x.document.open();\n//   x.document.write(\n//     \"<html><head><title>LAPORAN  BARANG DETAIL</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\n//       string +\n//       \"></embed></body></html>\"\n//   );\n//   x.document.close();\n// };\n\n// export default CetakLaporanDetailBarang;\n","import React, { Component } from \"react\";\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\nimport { formatGram, getUserdata } from \"../../../../../components/helpers/function\";\n\nclass LaporanDetailBarangExel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n    render() {\n    return (\n      <>\n        <ReactHTMLTableToExcel\n          id=\"test-table-xls-button\"\n          className=\"btn btn-success btn-block\"\n          table=\"table-to-xls\"\n          filename=\"Laporan Barang Detail\"\n          sheet=\"Laporan Barang Detail\"\n          buttonText=\"Export Exel\"\n        />\n        <table rowkey=\"kode_member\" id=\"table-to-xls\" style={{ display: \"none\" }}>\n        <thead>\n              <tr>\n                <th colSpan=\"9\" style={{textAlign : \"center\"}}> LAPORAN BARANG DETAIL </th>\n              </tr>\n              <tr>\n              <th colSpan=\"9\"> TOKO :  {getUserdata().nama_toko} </th>\n            </tr>\n           \n            <tr>\n              <th colSpan=\"9\"> ALAMAT :  {getUserdata().alamat_toko} </th>\n            </tr>\n            <tr></tr>\n              {/* <tr>\n                <th> Kode Baki </th>\n                <th colSpan=\"9\" style={{textAlign : \"left\"}}> {this.props.kode_baki} </th>\n              </tr> */}\n            <tr >\n                <th  style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>NO</th>\n                {/* <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>KODE BARANG</th> */}\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>KODE BARCODE</th>\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>KODE GROUP</th>\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>KODE JENIS</th>\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>KODE INTERN</th>\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>KODE GUDANG</th>\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>NAMA BARANG</th>\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>BERAT</th>\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>NAMA ATRIBUT</th>\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>BERAT ATRIBUT</th>\n                {/* <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>JUMLAH</th> */}\n            </tr>\n        </thead>\n            \n            <tbody>\n            {this.props.data.map((item, index) => (\n                    <tr key={index}>\n                        <td style={{ textAlign : \"center\" }}> {index+1}</td>\n                        {/* <td> {item.kode_barang}</td> */}\n                        <td>&nbsp;{item.kode_barcode}</td>\n                        <td> {item.kode_group}</td>\n                        <td> {item.kode_dept}</td>\n                        <td> {item.kode_intern}</td>\n                        <td> {item.kode_gudang}</td>\n                        <td> {item.nama_barang}</td>\n                        <td> {formatGram(item.berat,3)}</td>\n                        <td> {item.nama_atribut}</td>\n                        <td> {formatGram(item.berat_atribut,3)}</td>\n                        {/* <td style={{ border: \"1px solid #000\" }}> {item.stock_on_hand}</td> */}\n                    </tr>\n             ))}\n            </tbody>\n                    \n            <tfoot>\n                <tr>\n                    <th style={{backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign : \"center\" }} colSpan=\"7\">  </th>    \n                    <th style={{backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign : \"right\" }}> {formatGram(this.props.data.map(list => list.berat).reduce((a,b) => a+b,0),3)}   </th>    \n                    <th style={{backgroundColor: \"#E8E5E5\", color: \"#000\"}}>  </th>    \n                    <th style={{backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign : \"right\"  }}> {formatGram(this.props.data.map(list => list.berat_atribut).reduce((a,b) => a+b,0),3)}  </th>    \n                    {/* <th style={{backgroundColor: \"#E8E5E5\", color: \"#000\"}}> {this.props.data.map(list => list.stock_on_hand).reduce((a,b) => a+b,0)}  </th>     */}\n                </tr>\n            </tfoot>\n        </table>\n      </>\n    );\n  }\n}\nexport default LaporanDetailBarangExel;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport {\n  ReanderSelect,\n  SkeletonLoading,\n} from \"../../../../components/helpers/field\";\nimport { getDataBaki, getDataBakiByGudang, GetDataGroup, getDataGudang, getDataJenis } from \"../../../../actions/datamaster_action\";\nimport CetakLaporanDetailBarang from \"./pdf/CetakLaporanDetailBarang\";\nimport LaporanDetailBarangExel from \"./exel/LaporanDetailBarangExel\";\nimport Tabel from \"../../../../components/helpers/tabel\";\nimport Loading from 'react-fullscreen-loading';\n\nconst maptostate = (state) => {\n  return {\n    databaki: state.datamaster.getDataBaki,\n    dataJenis : state.datamaster.getDataJenis,\n    dataGroup : state.datamaster.GetDataGroup,\n    dataGudang : state.datamaster.getDataGudang\n  };\n};\nclass HeadFilterLaporan extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      list_baki: [\n        {\n          value : \"SEMUA\",\n          name : \"SEMUA\"\n        }\n      ]\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(GetDataGroup());\n    this.props.dispatch(getDataJenis());\n    this.props.dispatch(getDataBaki());\n    this.props.dispatch(getDataGudang());\n\n    setTimeout(() => {\n        this.props.change(\"kode_group\",\"ALL\")\n        this.props.change(\"kode_jenis\",\"ALL\")\n        this.props.change(\"kode_gudang\",\"ALL\")\n        this.props.change(\"kode_baki\",\"ALL\")\n    }, 100);\n  }\n  exportPdf() {\n    CetakLaporanDetailBarang(this.props.data, this.props.kode_baki);\n  }\n  render() {\n    // console.log(this.props.dataJenis);\n    let databaki =  [\n      {\n        value : \"ALL\",\n        name : \"SEMUA\"\n      }\n    ];\n    this.props.databaki.forEach(list => {\n      let data = {\n        value: list.kode_baki,\n        name: list.kode_baki + \" - \" + list.nama_baki,\n      };\n      databaki.push(data)\n    });\n\n    let dataGroup =  [\n      {\n        value : \"ALL\",\n        name : \"SEMUA\"\n      }\n    ];\n    this.props.dataGroup.forEach(list => {\n      let data = {\n        value: list.kode_group,\n        name: list.kode_group + \" - \" + list.nama_group,\n      };\n      dataGroup.push(data)\n    });\n\n    let dataJenis =  [\n      {\n        value : \"ALL\",\n        name : \"SEMUA\"\n      }\n    ];\n    this.props.dataJenis.forEach(list => {\n      let data = {\n        value: list.kode_dept,\n        name: list.kode_dept + \" - \" + list.nama_dept,\n      };\n      dataJenis.push(data)\n    });\n\n    let dataGudang =  [\n      {\n        value : \"ALL\",\n        name : \"SEMUA\"\n      }\n    ];\n    this.props.dataGudang.forEach(list => {\n      let data = {\n        value: list.kode_gudang,\n        name: list.kode_gudang + \" - \" + list.nama_gudang,\n      };\n      dataGudang.push(data)\n    });\n    return (\n      <>\n        <form\n          onSubmit={(data) => this.props.handleSubmit(data)}\n          autoComplete=\"off\"\n          onKeyPress={(e) => {\n            e.key === \"Enter\" && e.preventDefault();\n          }}\n        >\n          <div className=\"row\">\n          <div className=\"col-3\">\n              {this.state.loading === false ? (\n                <Field\n                  label=\"Group\"\n                  name=\"kode_group\"\n                  options={dataGroup}\n                  placeholder={\"Silahkan Pilih Kode Group\"}\n                  component={ReanderSelect}\n                />\n              ) : (\n                <SkeletonLoading label=\"Kode Group\" />\n              )}\n            </div>\n            <div className=\"col-3\">\n              {this.state.loading === false ? (\n                <Field\n                  label=\"Jenis\"\n                  name=\"kode_jenis\"\n                  options={dataJenis}\n                  placeholder={\"Silahkan Pilih Kode Jenis\"}\n                  component={ReanderSelect}\n                />\n              ) : (\n                <SkeletonLoading label=\"Kode Jenis\" />\n              )}\n            </div>\n            <div className=\"col-3\">\n              {this.state.loading === false ? (\n                <Field\n                  label=\"Gudang\"\n                  name=\"kode_gudang\"\n                  options={dataGudang}\n                  placeholder={\"Silahkan Pilih Kode Gudang\"}\n                  onChange={(e) => {\n                      if(e !== \"ALL\"){\n                        this.props.dispatch(getDataBakiByGudang(e))\n                      } else {\n                        this.props.dispatch(getDataBaki())\n                      }\n                  }}\n                  component={ReanderSelect}\n                />\n              ) : (\n                <SkeletonLoading label=\"Kode Gudang\" />\n              )}\n            </div>\n            <div className=\"col-3\">\n              {this.state.loading === false ? (\n                <Field\n                  label=\"Kode Baki\"\n                  name=\"kode_baki\"\n                  options={databaki}\n                  placeholder={\"Silahkan Pilih Kode Baki\"}\n                  component={ReanderSelect}\n                />\n              ) : (\n                <SkeletonLoading label=\"Kode Baki\" />\n              )}\n            </div>\n              <div className=\"col-lg-9\"></div>\n            <div className=\"col-3\">\n              <label> &nbsp; </label>\n              <button\n                className=\"btn btn-primary btn-block\"\n                disabled={this.submitting}\n                type=\"submit\"\n              >\n                {this.props.isLoading ? (\n                  <>\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\n                    Memfilter\n                  </>\n                ) : (\n                  \"Filter Laporan\"\n                )}\n              </button>\n            </div>\n            <div className=\"col-12\">\n              <Tabel\n                keyField=\"kode_barcode\"\n                data={this.props.data}\n                columns={this.props.columns}\n                empty={true}\n                textEmpty=\"Data Laporan Barang Detail Kosong\"\n              />\n            </div>\n            {this.props.export ? (\n              <>\n                <div className=\"col-lg-6\">\n                  <button\n                    type=\"button\"\n                    onClick={() => this.exportPdf()}\n                    className=\"btn btn-warning btn-block\"\n                  >\n                    {\" \"}\n                    Export PDF{\" \"}\n                  </button>\n                </div>\n                <div className=\"col-lg-6\">\n                  <LaporanDetailBarangExel\n                    data={this.props.data}\n                    kode_baki={this.props.kode_baki}\n                  />\n                </div>\n              </>\n            ) : null}\n          </div>\n          {this.props.isLoading ? (\n        <Loading \n        loading\n        background=\"rgba(0, 0, 0, 0.35)\"\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\n      ) : null}\n        </form>\n      </>\n    );\n  }\n}\n\nHeadFilterLaporan = reduxForm({\n  form: \"HeadFilterLaporan\",\n  enableReinitialize: true,\n})(HeadFilterLaporan);\nexport default connect(maptostate, null)(HeadFilterLaporan);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Panel, PanelHeader } from \"../../../../components/panel/panel.jsx\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { formatGram, localStoragedecryp } from \"../../../../components/helpers/function.jsx\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport {\n  NotifError,\n  ToastNotification,\n} from \"../../../../components/helpers/notification.jsx\";\n// import CetakLaporanDetailBarang from \"./CetakLaporanDetailBarang.jsx\";\n// import FormFilter from \"./FormFilter.jsx\";\nimport { getDataNoTimeOut } from \"../../../../config/axios.jsx\";\nimport HeadFilterLaporan from \"./HeadFilterLaporan.jsx\";\n// import LaporanDetailexel from \"./LaporanDetailExel.jsx\";\nconst maptostate = (state) => {\n  return {\n    hideModal: state.datamaster.modalDialog,\n  };\n};\n\nclass FormDetailBarang extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEdit: false,\n      modalDialog: false,\n      isLoading: false,\n      export: false,\n      kode_baki: [],\n      LaporanBarangDetail: false,\n      columns: [\n        // {\n        //   dataField: \"kode_barang\",\n        //   text: \"Kode Barang \",\n        //   sort: true,\n        //   footerAttrs: {\n        //     colSpan: \"5\",\n        //   },\n        //   footer: (cell, row, num, index) => {\n        //     return (\n        //       <div>Total Barang : {this.state.LaporanBarangDetail.length || 0} </div>\n        //     );\n        //   },\n        // },\n        {\n          dataField: \"kode_barcode\",\n          text: \"Kode Barcode\",\n          footerAttrs: {\n            colSpan: \"6\",\n          },\n          footer: (cell, row, num, index) => {\n            return (\n              <div>Total Barang : {this.state.LaporanBarangDetail.length || 0} </div>\n            );\n          },\n        },\n        {\n          dataField: \"kode_group\",\n          text: \"Kode Group\",\n        },\n        {\n          dataField: \"kode_dept\",\n          text: \"Kode Jenis\",\n        },\n        {\n          dataField: \"kode_gudang\",\n          text: \"Kode Gudang\",\n        },\n        {\n          dataField: \"kode_toko\",\n          text: \"Kode Baki\",\n        },\n        {\n          dataField: \"nama_barang\",\n          text: \"Nama Barang\",\n        },\n        {\n          dataField: \"berat\",\n          text: \"Berat\",\n          headerClasses: 'text-right',\n          formatter: (cell) => {\n            return <div className=\"text-right\"> {formatGram(cell, 3)} </div>;\n          },\n          footer: (columnData) => {\n            return <div className=\"text-right\"> {formatGram(columnData.reduce((acc, item) => acc + item, 0), 3)} </div>\n          }\n        },\n        // {\n        //   dataField: \"stock_on_hand\",\n        //   text: \"Jumlah\",\n        //   formatter: (cell) => {\n        //     return cell;\n        //   },\n        //   footer: (columnData) =>\n        //     columnData.reduce((acc, item) => acc + item, 0),\n        // },\n      ],\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  componentDidMount() {\n    let data = JSON.parse(localStoragedecryp(\"userdata\"));\n    this.setState({ username: data.user_id });\n  }\n  handleSubmit(data) {\n    this.setState({ isLoading: true, kode_toko: data.kode_baki });\n    // if (data.kode_baki === undefined) {\n    //   Swal.fire({\n    //     // title: 'Good Job',\n    //     text: \"Kode Baki Tidak Boleh Kosong\",\n    //     icon: \"info\",\n    //     position: \"top-center\",\n    //     timer: 2000,\n    //     width: \"300px\",\n    //     height: \"100px\",\n    //     confirmButtonText: \"OK\",\n    //     showConfirmButton: true,\n    //   });\n    //   //   this.props.dispatch(reset(\"FormFilter\"));\n    //   this.setState({ isLoading: false });\n    //   return false;\n    // }\n    //   console.log(data_post);\n\n    getDataNoTimeOut(`reportbarang/barangdetail?kode_gudang=${data.kode_gudang || \"ALL\"}&kode_toko=${data.kode_baki || \"ALL\"}&kode_jenis=${data.kode_jenis || \"ALL\"}&kode_group=${data.kode_group || \"ALL\"}`)\n      .then((res) => {\n        if (res.data.length === 0) {\n          this.setState({\n            export: false,\n            LaporanBarangDetail: [],\n          });\n          ToastNotification(\"info\", \"Laporan Barang Detail Tidak Tersedia\");\n        } else {\n          ToastNotification(\"success\", \"Laporan Barang Detail Tersedia\");\n          this.setState({\n            export: true,\n            kode_baki: data.kode_baki,\n            LaporanBarangDetail: res.data,\n          });\n        }\n      })\n      .then(() => {\n        this.setState({ isLoading: false });\n      })\n      .catch((error) => this.errorHandling(error));\n  }\n  errorHandling(err) {\n    NotifError(err);\n    this.setState({ isLoading: false });\n  }\n\n  render() {\n    return (\n      <div>\n        <ol className=\"breadcrumb float-xl-right\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"#\">Laporan Barang</Link>\n          </li>\n          <li className=\"breadcrumb-item active\">Laporan Barang Detail</li>\n        </ol>\n        <h1 className=\"page-header\">Laporan Barang Detail</h1>\n        <Panel>\n          <PanelHeader>Filter Laporan</PanelHeader>\n          <br />\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <HeadFilterLaporan\n                  kode_baki={this.state.kode_baki}\n                  export={this.state.export}\n                  columns={this.state.columns}\n                  data={this.state.LaporanBarangDetail}\n                  isLoading={this.state.isLoading}\n                  onSubmit={(data) => this.handleSubmit(data)}\n                />\n              </div>\n        \n            </div>\n          </div>\n          <br />\n        </Panel>\n      </div>\n    );\n  }\n}\n\nFormDetailBarang = reduxForm({\n  form: \"FormDetailBarang\",\n  enableReinitialize: true,\n})(FormDetailBarang);\nexport default connect(maptostate, null)(FormDetailBarang);\n"],"sourceRoot":""}