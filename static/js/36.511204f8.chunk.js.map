{"version":3,"sources":["pages/DataMaster/DataGudang/FormModalMasterGudang.jsx","pages/DataMaster/DataGudang/MasterGudang.jsx","Validasi/ValidasiMasterGudang.jsx"],"names":["FormModalMasterGudang","props","_this","Object","classCallCheck","this","_super","call","state","listgroup","aktif","_this2","setTimeout","isEdit","document","getElementById","focus","_this3","react_default","a","createElement","onSubmit","handleSubmit","onKeyPress","e","key","preventDefault","autoComplete","Fragment","Field","name","component","HiidenFiled","type","readOnly","id","tabIndex","ReanderField","label","placeholder","onBlur","setState","className","onClick","dispatch","hideModal","disabled","isLoading","submitting","loading_default","loading","background","loaderColor","Component","reduxForm","form","enableReinitialize","validate","ValidasiMasterGudang","connect","datamaster","ShowModalGudang","initialValues","kode_gudang","nama_gudang","hapusDataGudang","kode","params","Swal","fire","html","icon","position","cancelButtonText","showCancelButton","confirmButtonText","showConfirmButton","then","result","isConfirmed","deleteData","NotifSucces","getDataGudang","catch","err","ToastNotification","response","data","MasterGudang","modalDialog","columns","dataField","text","sort","csvExport","headerClasses","formatter","rowcontent","row","dataEdit","_id","formEditDataKategori","bind","assertThisInitialized","data_edit","data_post","putData","reset","error","undefined","postData","ErrorHandling","showModal","react_router_dom","to","panel","tabel","keyField","tambahData","handleClick","shoModalGudang","exportCsv","DataGudang","empty","textEmpty","ModalGlobal","size","title","content","DataGudang_FormModalMasterGudang","React","value","event","errors"],"mappings":"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","file":"static/js/36.511204f8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { hideModal } from \"../../../actions/datamaster_action\";\nimport { HiidenFiled, ReanderField } from \"../../../components/helpers/field\";\nimport ValidasiMasterGudang from \"../../../Validasi/ValidasiMasterGudang.jsx\";\nimport Loading from 'react-fullscreen-loading';\n\nconst maptostate = (state) => {\n  if (state.datamaster.ShowModalGudang !== null) {\n    return {\n      initialValues: {\n        id: state.datamaster.ShowModalGudang.id,\n        kode_gudang: state.datamaster.ShowModalGudang.kode_gudang,\n        nama_gudang: state.datamaster.ShowModalGudang.nama_gudang,\n      },\n    };\n  }\n};\nclass FormModalMasterGudang extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listgroup: [],\n      aktif: false,\n    };\n  }\n  componentDidMount() {\n    setTimeout(() => {\n      this.props.isEdit\n      ? document.getElementById(\"nama_gudang\").focus()\n      : document.getElementById(\"kode_gudang\").focus()\n    }, 100);\n  }\n  render() {\n    return (\n      <form\n        onSubmit={this.props.handleSubmit}\n        onKeyPress={(e) => {\n          e.key === \"Enter\" && e.preventDefault();\n        }}\n        autoComplete=\"off\"\n      >\n        {\n          this.props.isEdit ? <>\n             <Field\n              name=\"id\"\n              component={HiidenFiled}\n              type=\"hidden\"\n              readOnly={this.props.isEdit}\n            />\n          </> : null\n        }\n        <Field\n          id=\"kode_gudang\"\n          tabIndex=\"1\"\n          name=\"kode_gudang\"\n          component={ReanderField}\n          type=\"text\"\n          label=\"Kode Gudang\"\n          readOnly={this.props.isEdit}\n          placeholder=\"Masukan Kode Gudang\"\n        />\n        <Field\n          tabIndex=\"2\"\n          id=\"nama_gudang\"\n          name=\"nama_gudang\"\n          component={ReanderField}\n          type=\"text\"\n          label=\"Nama Gudang\"\n          onBlur={() => this.setState({ aktif: true })}\n          placeholder=\"Masukan Nama Gudang\"\n        />\n        <div className=\"row\">\n          <div className=\"col-12 text-right\">\n            <button\n              className=\"btn btn-white\"\n              onClick={() => this.props.dispatch(hideModal())}\n              type=\"button\"\n              disabled={this.props.isLoading}\n            >\n              Batal\n            </button>\n            &nbsp;\n            <button\n              tabIndex=\"3\"\n              className={this.state.aktif ? \"btn btn-primary\" : \"btn btn-white\"}\n              disabled={this.props.submitting}\n              type=\"submit\"\n            >\n              {this.props.isLoading ? (\n                <>\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\n                  Menyimpan\n                </>\n              ) : (\n                \"Simpan Data\"\n              )}\n            </button>\n          </div>\n        </div>\n        {this.props.isLoading ? (\n        <Loading \n        loading\n        background=\"rgba(0, 0, 0, 0.35)\"\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\n      ) : null}\n      </form>\n    );\n  }\n}\n\nFormModalMasterGudang = reduxForm({\n  form: \"ModalMasterGudang\",\n  enableReinitialize: true,\n  validate: ValidasiMasterGudang,\n})(FormModalMasterGudang);\nexport default connect(maptostate, null)(FormModalMasterGudang);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Panel, PanelBody, PanelHeader } from \"../../../components/panel/panel.jsx\";\n\nimport {\n  ShowModalGudang,\n  showModal,\n  getDataGudang,\n  hideModal,\n} from \"../../../actions/datamaster_action.jsx\";\nimport { connect } from \"react-redux\";\nimport Swal from \"sweetalert2\";\nimport {\n  NotifSucces,\n  ToastNotification,\n} from \"../../../components/helpers/notification.jsx\";\nimport { reset } from \"redux-form\";\nimport { deleteData, postData, putData } from \"../../../config/axios.jsx\";\nimport { ErrorHandling } from \"../../../components/helpers/function.jsx\";\nimport Tabel from \"../../../components/helpers/tabel.jsx\";\nimport ModalGlobal from \"../../../components/helpers/ModalGlobal.jsx\";\nimport FormModalMasterGudang from \"./FormModalMasterGudang.jsx\";\n\nconst maptostate = (state) => {\n  return {\n    DataGudang: state.datamaster.getDataGudang,\n    hideModal: state.datamaster.modalDialog,\n  };\n};\n\nconst hapusDataGudang = (kode, params, dispatch) => {\n  Swal.fire({\n    // title: \"Anda Yakin !!\",\n    // text: \"Ingin Menghapus Data Ini ?\",\n    html:\n      \"Apakah Anda Yakin Ingin \" +\n      \"Menghapus \" +\n      \"<h1><b>Kode Gudang \" +\n      kode +\n      \"</b> ?</h1>\",\n    icon: \"warning\",\n    position: \"top-center\",\n    cancelButtonText: \"Tidak\",\n    showCancelButton: true,\n    confirmButtonText: \"OK\",\n    showConfirmButton: true,\n  }).then((result) => {\n    if (result.isConfirmed) {\n      deleteData(\"gudang/delete/by-kode-gudang/\" + params)\n        .then(() => {\n          NotifSucces(\"Data Berhasil Di Hapus\").then(() =>\n            dispatch(getDataGudang())\n          );\n        })\n        .catch((err) => {\n          ToastNotification(\"error\", err.response.data);\n        });\n    }\n  });\n};\nclass MasterGudang extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEdit: false,\n      modalDialog: false,\n      isLoading: false,\n      columns: [\n        {\n          dataField: \"kode_gudang\",\n          text: \"Kode Gudang \",\n          sort: true,\n        },\n        {\n          dataField: \"nama_gudang\",\n          text: \"Nama Gudang \",\n          sort: true,\n        },\n        {\n          dataField: \"action\",\n          text: \"Action\",\n          csvExport: false,\n          headerClasses: \"text-center\",\n          formatter: (rowcontent, row) => {\n            let dataEdit = {\n              id: row._id,\n              kode_gudang: row.kode_gudang,\n              nama_gudang: row.nama_gudang,\n            };\n            return (\n              <div className=\"row text-center\">\n                {row.kode_gudang === \"TOKO\" ||\n                row.kode_gudang === \"SS\" ||\n                row.kode_gudang === \"TS\" ||\n                row.kode_gudang === \"KC\" ||\n                row.kode_gudang === \"KS\" ||\n                row.kode_gudang === \"SP-PBRK\" ||\n                row.kode_gudang === \"SP-BOS\" ||\n                row.kode_gudang === \"SP-LN\" ||\n                row.kode_gudang === \"SP\" ? null : (\n                  <>\n                    <div className=\"col-12\">\n                      <button\n                        onClick={() => this.formEditDataKategori(dataEdit)}\n                        className=\"btn btn-primary mr-3\"\n                      >\n                        <i className=\"fa fa-edit\"></i>\n                      </button>\n                      <button\n                        onClick={() =>\n                          hapusDataGudang(\n                            row.kode_gudang,\n                            row._id,\n                            this.props.dispatch\n                          )\n                        }\n                        className=\"btn btn-danger\"\n                      >\n                        <i className=\"fa fa-trash\"></i>\n                      </button>\n                    </div>\n                  </>\n                )}\n              </div>\n            );\n          },\n        },\n      ],\n      // dataGudang: [\n      //   {\n      //     kode_gudang: \"tk\",\n      //     nama_gudang: \"Toko\",\n      //   },\n      // ],\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  componentDidMount() {\n    this.props.dispatch(getDataGudang(\"master\"));\n  }\n  handleSubmit(data) {\n    this.setState({\n      isLoading: true,\n    });\n    // console.log(data);\n    let data_edit = {\n      kode_gudang: data.kode_gudang,\n      nama_gudang: data.nama_gudang,\n    };\n    let data_post = {\n      kode_gudang: data.kode_gudang,\n      nama_gudang: data.nama_gudang,\n    };\n    this.state.isEdit\n      ? putData(\"gudang/edit/by-kode-gudang/\" + data.id, data_edit)\n          .then(() => {\n            this.props.dispatch(hideModal());\n          })\n          .then(() => {\n            ToastNotification(\"success\", \"Data Berhasil Diedit\");\n          })\n          .then(() => {\n            this.props.dispatch(getDataGudang());\n          })\n          .then(() => {\n            this.setState({ isLoading: false });\n          })\n          .then(() => {\n            this.props.dispatch(reset(\"ModalMasterGudang\"));\n          })\n          .catch((error) => {\n            ToastNotification(\n              \"info\",\n              error.response === undefined\n                ? \"Terjadi Kesalahan Saat Megirim Data \"\n                : error.response.data\n            );\n            this.setState({ isLoading: false });\n          })\n      : postData(\"gudang/add\", data_post)\n          .then(() => {\n            this.props.dispatch(hideModal());\n          })\n          .then(() => {\n            ToastNotification(\"success\", \"Data Berhasil Disimpan\");\n          })\n          .then(() => {\n            this.props.dispatch(getDataGudang());\n          })\n          .then(() => {\n            this.props.dispatch(reset(\"ModalMasterGudang\"));\n          })\n          .then(() => {\n            this.setState({ isLoading: false });\n          })\n          .catch((error) =>\n            ErrorHandling(\n              error,\n              \"gudang/reactive/by-kode-gudang/\",\n              // data.kode_gudang,\n              data_post,\n              this.props.dispatch,\n              getDataGudang(),\n              hideModal(),\n              \"ModalMasterGudang\"\n            ).then(() => {\n              this.setState({ isLoading: false });\n            })\n          );\n  }\n\n  formEditDataKategori(dataEdit) {\n    this.props.dispatch(showModal());\n    this.props.dispatch(ShowModalGudang(dataEdit));\n    this.setState({\n      isEdit: true,\n    });\n  }\n  shoModalGudang() {\n    this.props.dispatch(showModal());\n    this.props.dispatch(ShowModalGudang(false));\n    this.setState({\n      isEdit: false,\n    });\n  }\n  render() {\n    return (\n      <div>\n        <ol className=\"breadcrumb float-xl-right\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"#\">Data Master</Link>\n          </li>\n          <li className=\"breadcrumb-item active\">Master Gudang</li>\n        </ol>\n        <h1 className=\"page-header\">Master Gudang </h1>\n        <Panel>\n          <PanelHeader>Master Gudang</PanelHeader>\n          <br />\n\n          {/* Master Gudang */}\n          <PanelBody>\n            <Tabel\n              keyField=\"kode_gudang\"\n              tambahData={true}\n              handleClick={() => this.shoModalGudang()}\n              exportCsv={true}\n              data={this.props.DataGudang}\n              columns={this.state.columns}\n              empty={this.props.DataGudang}\n              textEmpty=\"Data Gudang Kosong\"\n            />\n          </PanelBody>\n          <br />\n          {/* End Master Gudang */}\n          <ModalGlobal\n            size=\"P\"\n            title={\n              this.state.isEdit ? \"Edit Data Gudang\" : \"Tambah Data Gudang\"\n            }\n            content={\n              <FormModalMasterGudang\n                isEdit={this.state.isEdit}\n                isLoading={this.state.isLoading}\n                onSubmit={(data) => this.handleSubmit(data)}\n              />\n            }\n          />\n\n          {/* End Tambah Master Gudang  */}\n        </Panel>\n      </div>\n    );\n  }\n}\n\nexport default connect(maptostate, null)(MasterGudang);\n","const ValidasiMasterGudang = (value, event) => {\n  const errors = {};\n  // console.log(event.charCode==13);\n  if (!value.kode_gudang) {\n    errors.kode_gudang = \"Kode Gudang Tidak Boleh Kosong\";\n  }\n  if (!value.nama_gudang) {\n    errors.nama_gudang = \"Nama Gudang Tidak Boleh Kosong\";\n  }\n  return errors;\n};\n\nexport default ValidasiMasterGudang;\n"],"sourceRoot":""}