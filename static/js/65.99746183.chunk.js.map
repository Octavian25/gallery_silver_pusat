{"version":3,"sources":["Validasi/ValidasiParameterRugiNota.jsx","pages/DataMaster/ParameterRugiNota/FormParameterRugiNota.jsx","pages/DataMaster/ParameterRugiNota/MasterParameterRugiNota.jsx"],"names":["ValidasiParameterRugiNota","value","event","errors","kode_kategori","kadar","rugi","rusak","FormParameterRugiNota","state","aktif","_this2","this","props","dispatch","GetDataGroup","setTimeout","isEdit","document","getElementById","focus","_this3","react_default","a","createElement","onSubmit","handleSubmit","autoComplete","onKeyPress","e","key","preventDefault","className","Field","id","label","name","options","datagroup","filter","list","undefined","kode_group","map","nama_group","disabled","placeholder","component","ReanderSelect","ReanderField","type","onBlur","setState","isLoading","Fragment","onClick","hideModal","loading_default","loading","background","loaderColor","Component","reduxForm","form","enableReinitialize","validate","connect","datamaster","ShowModalParameterRugiNota","initialValues","SearchBar","Search","ExportCSVButton","CSVExport","MasterParameterRugiNota","_this","Object","classCallCheck","_super","call","modalDialog","columns","dataField","text","sort","csvExport","headerClasses","formatter","rowcontent","row","dataEdit","formEditParameterRugiNota","bind","assertThisInitialized","getParameterRugiNota","data","data_post","data_edit","putData","then","ToastNotification","reset","catch","error","postData","ErrorHandling","showModal","react_router_dom","to","panel","react_bootstrap_table2_toolkit_lib_default","keyField","dataRugiNota","search","exportCSV","fileName","searchProps","lib_default","assign","pagination","paginationFactory","baseProps","csvProps","ModalGlobal","title","size","content","ParameterRugiNota_FormParameterRugiNota","React"],"mappings":"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","file":"static/js/65.99746183.chunk.js","sourcesContent":["const ValidasiParameterRugiNota = (value, event) => {\n  const errors = {};\n  // console.log(event.charCode==13);\n  if (!value.kode_kategori) {\n    errors.kode_kategori = \"Kode Kategori Tidak Boleh Kosong\";\n  }\n  if (!value.kadar) {\n    errors.kadar = \"Kadar Tidak Boleh Kosong\";\n  }\n  if (!value.rugi) {\n    errors.rugi = \"Rugi Tidak Boleh Kosong\";\n  }\n  if (!value.rusak) {\n    errors.rusak = \"Rusak Tidak Boleh Kosong\";\n  }\n\n  return errors;\n};\n\nexport default ValidasiParameterRugiNota;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { GetDataGroup, hideModal } from \"../../../actions/datamaster_action\";\nimport { ReanderField, ReanderSelect } from \"../../../components/helpers/field\";\nimport ValidasiParameterRugiNota from \"../../../Validasi/ValidasiParameterRugiNota.jsx\";\nimport Loading from 'react-fullscreen-loading';\n\nconst maptostate = (state) => {\n  if (state.datamaster.ShowModalParameterRugiNota !== null) {\n    return {\n      datagroup: state.datamaster.GetDataGroup,\n      initialValues: {\n        kode_group: state.datamaster.ShowModalParameterRugiNota.kode_group,\n        kadar: state.datamaster.ShowModalParameterRugiNota.kadar,\n        rugi: state.datamaster.ShowModalParameterRugiNota.rugi,\n        rusak: state.datamaster.ShowModalParameterRugiNota.rusak,\n      },\n    };\n  }\n};\n\nclass FormParameterRugiNota extends Component {\n  state = {\n    aktif : false\n  };\n  componentDidMount() {\n    this.props.dispatch(GetDataGroup());\n    // setTimeout(() => {\n    //   document.getElementById('kode_group').focus()\n    // }, 100);\n    setTimeout(() => {\n      this.props.isEdit\n        ? document.getElementById(\"kadar\").focus()\n        : document.getElementById(\"kode_group\").focus();\n    }, 100);\n  }\n  render() {\n    return (\n      <form\n        onSubmit={this.props.handleSubmit}\n        autoComplete=\"off\"\n        onKeyPress={(e) => {\n          e.key === \"Enter\" && e.preventDefault();\n        }}\n      >\n        <div className=\"form-group\">\n          <Field\n            id=\"kode_group\"\n            label=\"Kode Kategori\"\n            name=\"kode_group\"\n            options={this.props.datagroup\n              .filter((list) => list.kode_group !== undefined)\n              .map((list) => {\n                let data = {\n                  value: list.kode_group,\n                  name: list.kode_group + \" - \" + list.nama_group,\n                };\n                return data;\n              })}\n            value={this.props.kode_group}\n            disabled={this.props.isEdit}\n            placeholder={\"Silahkan Pilih Kode Kategori\"}\n            component={ReanderSelect}\n          />\n        </div>\n        <Field\n          id=\"kadar\"\n          name=\"kadar\"\n          component={ReanderField}\n          type=\"number\"\n          label=\"Kadar\"\n          // normalize={NumberOnly}\n          placeholder=\"Masukan Kadar\"\n        />\n        <Field\n          name=\"rugi\"\n          component={ReanderField}\n          type=\"number\"\n          label=\"Rugi\"\n          // normalize={NumberOnly}\n          placeholder=\"Masukan Rugi\"\n        />\n        <Field\n          name=\"rusak\"\n          component={ReanderField}\n          type=\"number\"\n          // normalize={NumberOnly}\n          label=\"Rusak\"\n          onBlur={() => this.setState({ aktif: true })}\n          placeholder=\"Masukan Rusak\"\n        />\n        <div className=\"row\">\n          <div className=\"col-12 text-right\">\n          <button\n              className={this.state.aktif ? \"btn btn-primary\" : \"btn btn-white\"}\n              disabled={this.props.isLoading}\n              type=\"submit\"\n            >\n              {this.props.isLoading ? (\n                <>\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\n                  Menyimpan\n                </>\n              ) : (\n                \"Simpan Data\"\n              )}\n            </button>\n            &nbsp;\n            <button\n              className=\"btn btn-white\"\n              onClick={() => this.props.dispatch(hideModal())}\n              type=\"button\"\n            >\n              Batal\n            </button>\n            &nbsp;\n            \n          </div>\n        </div>\n        {this.props.isLoading ? (\n        <Loading \n        loading\n        background=\"rgba(0, 0, 0, 0.35)\"\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\n      ) : null}\n      </form>\n    );\n  }\n}\n\nFormParameterRugiNota = reduxForm({\n  form: \"ModalParameterRugiNota\",\n  enableReinitialize: true,\n  validate: ValidasiParameterRugiNota,\n})(FormParameterRugiNota);\nexport default connect(maptostate, null)(FormParameterRugiNota);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Panel, PanelHeader } from \"../../../components/panel/panel.jsx\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport ToolkitProvider, {\n  Search,\n  CSVExport,\n} from \"react-bootstrap-table2-toolkit\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport {\n  ShowModalParameterRugiNota,\n  showModal,\n  getParameterRugiNota,\n  hideModal,\n} from \"../../../actions/datamaster_action.jsx\";\nimport { connect } from \"react-redux\";\nimport {  ToastNotification } from \"../../../components/helpers/notification.jsx\";\nimport FormParameterRugiNota from \"./FormParameterRugiNota.jsx\";\nimport { reset } from \"redux-form\";\nimport {  postData, putData } from \"../../../config/axios.jsx\";\nimport { ErrorHandling } from \"../../../components/helpers/function.jsx\";\nimport ModalGlobal from \"../../../components/helpers/ModalGlobal.jsx\";\n\nconst { SearchBar } = Search;\nconst { ExportCSVButton } = CSVExport;\n\nconst maptostate = (state) => {\n  return {\n    dataRugiNota : state.datamaster.getParameterRugiNota,\n    hideModal: state.datamaster.modalDialog,\n  };\n};\n\nclass MasterParameterRugiNota extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEdit: false,\n      isLoading: false,\n      modalDialog: false,\n      columns: [\n        {\n          dataField: \"kode_group\",\n          text: \"Kode Kategori\",\n          sort: true,\n        },\n        {\n          dataField: \"kadar\",\n          text: \"kadar\",\n        },\n        {\n          dataField: \"rugi\",\n          text: \"Rugi\",\n        },\n        {\n          dataField: \"rusak\",\n          text: \"Rusak\",\n        },\n        {\n          dataField: \"action\",\n          text: \"Action\",\n          csvExport: false,\n          headerClasses: \"text-center\",\n          formatter: (rowcontent, row) => {\n            let dataEdit = {\n              kode_group: row.kode_group,\n              kadar: row.kadar,\n              rugi: row.rugi,\n              rusak: row.rusak,\n            };\n             \n            return (\n              <div className=\"row text-center\">\n                <div className=\"col-12\">\n                  <button\n                    onClick={() => this.formEditParameterRugiNota(dataEdit)}\n                    className=\"btn btn-primary mr-3\"\n                  >\n                     <i className=\"fa fa-edit\"></i>\n                  </button>\n                </div>\n              </div>\n            );\n          },\n        },\n      ],\n      \n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.dispatch(getParameterRugiNota())\n  }\n  handleSubmit(data) {\n    this.setState({ isLoading: true });\n    let data_post = {\n      kode_group: data.kode_group,\n      kadar : data.kadar,\n      rugi : data.rugi,\n      rusak : data.rusak\n    }\n    let data_edit = {\n      kadar : data.kadar,\n      rugi : data.rugi,\n      rusak : data.rusak\n    }\n    this.state.isEdit\n    ? putData(\"ruginota/edit/by-kode-group/\" + data.kode_group, data_edit)\n        .then(() => {\n          this.props.dispatch(hideModal());\n        })\n        .then(() => {\n          ToastNotification(\"success\", \"Data Berhasil Diedit\");\n        })\n        .then(() => {\n          this.props.dispatch(getParameterRugiNota());\n        })\n        .then(() => {\n          this.setState({ isLoading: false });\n        })\n        .then(() => {\n          this.props.dispatch(reset(\"ModalParameterRugiNota\"));\n        })\n        .catch((error) => {\n          ToastNotification('info', ' Data Gagal Diedit')\n        })\n    :\n    postData(\"ruginota/add\", data_post)\n      .then(() => {\n        this.props.dispatch(hideModal());\n      })\n      .then(() => {\n        ToastNotification(\"success\", \"Data Berhasil Simpan\");\n      })\n      .then(() => {\n        this.props.dispatch(getParameterRugiNota());\n      })\n      .then(() => {\n        this.setState({ isLoading: false });\n      })\n      .then(() => {\n        this.props.dispatch(reset(\"ModalParameterRugiNota\"));\n      })\n      .catch((error) => {\n        ErrorHandling(\n          error,\n          \"jenis/reactive/by-kode-jenis/\",\n          data.kode_group,\n          data_post,\n          this.props.dispatch,\n          getParameterRugiNota(),\n          hideModal(),\n          \"ModalParameterRugiNota\"\n        ).then(() => {\n          this.setState({ isLoading: false });\n        });\n      });\n  }\n  formEditParameterRugiNota(dataEdit) {\n    this.props.dispatch(showModal());\n    this.props.dispatch(ShowModalParameterRugiNota(dataEdit));\n    this.setState({\n      isEdit: true,\n    });\n  }\n  ShowModalParameterRugiNota() {\n    this.props.dispatch(showModal());\n    this.props.dispatch(ShowModalParameterRugiNota(false));\n    this.setState({\n      isEdit: false,\n    });\n  }\n  render() {\n    return (\n      <div>\n        <ol className=\"breadcrumb float-xl-right\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"#\">Data Master</Link>\n          </li>\n          <li className=\"breadcrumb-item active\">Master Parameter Rugi Nota</li>\n        </ol>\n        <h1 className=\"page-header\">Master Parameter Rugi Nota </h1>\n        <Panel>\n          <PanelHeader>Master Parameter Rugi Nota</PanelHeader>\n          <br />\n\n          {/* Master Parameter Rugi Nota */}\n          <div className=\"container\">\n            <ToolkitProvider\n              keyField=\"kode_group\"\n              data={this.props.dataRugiNota || []}\n              columns={this.state.columns}\n              search\n              exportCSV={{\n                fileName: \"Export Master Parameter Rugi Nota.csv\",\n              }}\n            >\n              {(props) => (\n                <div className=\"row\">\n                  <div className=\"col-6\">\n                    <button\n                      onClick={() => this.ShowModalParameterRugiNota()}\n                      className=\"btn btn-primary\"\n                    >\n                      {\" \"}\n                      <i className=\"fa fa-plus\"></i>{\" \"}\n                    </button>\n                  </div>\n                  <div className=\"col-6\">\n                    <div className=\"text-right\">\n                      <SearchBar {...props.searchProps} />\n                    </div>\n                  </div>\n                  <hr />\n                  <div className=\"col-12\">\n                    <BootstrapTable\n                      pagination={paginationFactory()}\n                      {...props.baseProps}\n                    />\n                    <br />\n                    <ExportCSVButton {...props.csvProps}>\n                      Export CSV!!\n                    </ExportCSVButton>\n                  </div>\n                </div>\n              )}\n            </ToolkitProvider>\n          </div>\n          <br />\n          {/* End Master Pinjaman */}\n          <ModalGlobal\n             title={\n              this.state.isEdit\n                ? \"Edit Data Parameter Rugi Nota\"\n                : \"Tambah Data Parameter Rugi Nota\"\n            }\n            size=\"P\"\n            content={\n              <FormParameterRugiNota\n              isEdit={this.state.isEdit}\n              isLoading={this.state.isLoading}\n              onSubmit={(data) => this.handleSubmit(data)}\n            />\n          }\n          />\n\n          {/* End Tambah Master Parameter Rugi Nota  */}\n        </Panel>\n      </div>\n    );\n  }\n}\n\nexport default connect(maptostate, null)(MasterParameterRugiNota);\n"],"sourceRoot":""}