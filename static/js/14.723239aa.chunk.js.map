{"version":3,"sources":["pages/Pembelian/LihatPembelian.jsx/HeadBatalBeli.jsx","pages/Pembelian/LihatPembelian.jsx/HeadPembelian.jsx","pages/Pembelian/LihatPembelian.jsx/FormLihatPembelian.jsx","Validasi/ManageUsers/ValidasiDataUsers.jsx","Validasi/Services/ValidasiServicesSelesai.jsx"],"names":["HeadBatalBeli","props","_this","Object","classCallCheck","this","_super","call","state","date","Date","columns","dataField","text","footer","formatter","cell","react_default","a","createElement","parseFloat","toFixed","columnData","reduce","acc","item","parseInt","toLocaleString","onSubmit","handleSubmit","onKeyPress","e","key","preventDefault","autoComplete","className","Field","id","name","component","HiidenFiled","type","readOnly","ReanderField","label","placeholder","tabel","keyField","exportCsv","data","detail_barang","pagination","empty","textEmpty","onClick","back","tabIndex","disabled","isLoadingBatalBeli","Fragment","loading_default","loading","background","loaderColor","Component","reduxForm","form","enableReinitialize","validate","ValidasiServicesSelesai","connect","pembelian","showModalBatalBeli","initialValues","no_faktur_group","nama_customer","no_hp","alamat_customer","HeadPembelian","isLoading","isLoadingBatal","FormModal","setStartDate","bind","assertThisInitialized","setLastDate","setState","tgl_awal","tgl_akhir","_this2","InputDate","selected","onChange","ValidasiDataUsers","getTglSystem","FormLihatPembelian","isLoadingServicesSelesai","dataservices","pembayaran","footerAttrs","colSpan","csvExport","headerClasses","rowcontent","row","index","data-tooltip","shoBatalPembelian","ReprintPembelian","hasil","postData","then","res","feedback","notabeli","forEach","jml_alamat","head","n_alamat_customer","length","concat","tgl_system","split","total","harga_nota","detail","harga","no_faktur_beli","kode_dept","nama_barang","berat","document","getElementById","value","console","log","element","file","Blob","href","URL","createObjectURL","download","body","appendChild","click","catch","err","ToastNotification","message","_id","kode_sales","kode_gudang","dispatch","_this3","data_post","formatDate","moment","format","localStorageencryp","JSON","stringify","datapembelian","_this4","setTimeout","tgl_laporan","localStoragedecryp","parse","_this5","react_router_dom","to","panel","style","display","rows","cols","LihatPembelian_jsx_HeadBatalBeli","batalPembelian","LihatPembelian_jsx_HeadPembelian","React","errors","user_id","user_name","level","tgl_selesai","tgl_ambil"],"mappings":"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","file":"static/js/14.723239aa.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { HiidenFiled, ReanderField } from \"../../../components/helpers/field\";\nimport Tabel from \"../../../components/helpers/tabel\";\nimport ValidasiServicesSelesai from \"../../../Validasi/Services/ValidasiServicesSelesai\";\nimport Loading from 'react-fullscreen-loading';\n\nclass HeadBatalBeli extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: new Date(\"Y-m-d\"),\n      columns: [\n        {\n          dataField: \"nama_barang\",\n          text: \"Nama Barang\",\n          footer: \"\",\n        },\n        {\n          dataField: \"berat\",\n          text: \"Berat\",\n          formatter: (cell) => {\n            return <span>{parseFloat(cell).toFixed(1)}</span>;\n          },\n          footer: (columnData) =>\n            parseFloat(columnData.reduce((acc, item) => acc + item, 0)).toFixed(\n              1\n            ),\n        },\n        {\n          dataField: \"berat_nota\",\n          text: \"Berat Nota\",\n          formatter: (cell) => {\n            return <span>{parseFloat(cell).toFixed(1)}</span>;\n          },\n          footer: (columnData) =>\n            parseFloat(columnData.reduce((acc, item) => acc + item, 0)).toFixed(\n              1\n            ),\n        },\n        {\n          dataField: \"harga_nota\",\n          text: \"Harga Nota\",\n          formatter: (cell) => {\n            return <span>{parseInt(cell).toLocaleString(\"kr-KO\")}</span>;\n          },\n          footer: (columnData) =>\n            parseInt(\n              columnData.reduce((acc, item) => acc + item, 0)\n            ).toLocaleString(\"kr-KO\"),\n        },\n        {\n          dataField: \"harga\",\n          text: \"Harga\",\n          formatter: (cell) => {\n            return <span>{parseInt(cell).toLocaleString(\"kr-KO\")}</span>;\n          },\n          footer: (columnData) =>\n            parseInt(\n              columnData.reduce((acc, item) => acc + item, 0)\n            ).toLocaleString(\"kr-KO\"),\n        },\n        {\n          dataField: \"harga_rata\",\n          text: \"Harga Rata\",\n          formatter: (cell) => {\n            return <span>{parseInt(cell).toLocaleString(\"kr-KO\")}</span>;\n          },\n          footer: (columnData) =>\n            parseInt(\n              columnData.reduce((acc, item) => acc + item, 0)\n            ).toLocaleString(\"kr-KO\"),\n        },\n        {\n          dataField: \"kondisi\",\n          text: \"Kondisi\",\n          footer: \"\",\n        },\n      ],\n    };\n  }\n\n  render() {\n    return (\n      <form\n        onSubmit={this.props.handleSubmit}\n        onKeyPress={(e) => {\n          e.key === \"Enter\" && e.preventDefault();\n        }}\n        autoComplete=\"off\"\n      >\n        <div className=\"row\">\n          <div className=\"col-4\">\n            <Field\n              id=\"no_faktur_group\"\n              name=\"no_faktur_group\"\n              component={HiidenFiled}\n              type=\"hidden\"\n              readOnly={true}\n            />\n            <Field\n              name=\"nama_customer\"\n              component={ReanderField}\n              type=\"text\"\n              readOnly={true}\n              label=\"Nama Customer\"\n              placeholder=\"Masukan Nama Customer\"\n            />\n          </div>\n          <div className=\"col-4\">\n            <Field\n              name=\"no_hp\"\n              component={ReanderField}\n              type=\"text\"\n              readOnly={true}\n              label=\"No Hp\"\n              placeholder=\"Masukan No Hp\"\n            />\n          </div>\n          <div className=\"col-4\">\n            <Field\n              name=\"alamat_customer\"\n              component={ReanderField}\n              type=\"text\"\n              readOnly={true}\n              label=\"Alamat Customer\"\n              placeholder=\"Masukan Alamat Customer\"\n            />\n          </div>\n          <div className=\"col-12\">\n            <Tabel\n              keyField=\"nama_barang\"\n              exportCsv={false}\n              data={this.props.detail_barang}\n              columns={this.state.columns}\n              pagination=\"off\"\n              empty={true}\n              textEmpty=\"Data Barang Kosong\"\n            />\n          </div>\n          <div className=\"col-3\">\n            <button\n              type=\"button\"\n              onClick={this.props.back}\n              className=\"btn btn-primary btn-block\"\n            >\n              <i className=\"fa fa-arrow-left\"></i> Kembali\n            </button>\n          </div>\n          <div className=\"col-9\">\n          <button\n          tabIndex=\"2\"\n              className=\"btn btn-primary btn-block\"\n              disabled={this.props.isLoadingBatalBeli}\n              type=\"submit\"\n            >\n              {this.props.isLoadingBatalBeli ? (\n                <>\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\n                  Membatal\n                </>\n              ) : (\n                \"Batal Pembelian\"\n              )}\n            </button>\n          </div>\n        </div>\n        <br />\n        {this.props.isLoadingBatalBeli ? (\n        <Loading \n        loading\n        background=\"rgba(0, 0, 0, 0.35)\"\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\n      ) : null}\n        {/* <ModalGlobal title=\"Pembayaran\" content={<ModalPembayaran />} /> */}\n      </form>\n    );\n  }\n}\n\nHeadBatalBeli = reduxForm({\n  form: \"HeadBatalBeli\",\n  enableReinitialize: true,\n  validate: ValidasiServicesSelesai,\n})(HeadBatalBeli);\n// export default connect(maptostate, null)(HeadBatalBeli);\n\nexport default connect((state) => {\n  return {\n    detail_barang: state.pembelian.showModalBatalBeli.detail_barang,\n    initialValues: {\n      no_faktur_group: state.pembelian.showModalBatalBeli.no_faktur_group,\n      nama_customer: state.pembelian.showModalBatalBeli.nama_customer,\n      no_hp: state.pembelian.showModalBatalBeli.no_hp,\n      alamat_customer: state.pembelian.showModalBatalBeli.alamat_customer,\n    },\n  };\n})(HeadBatalBeli);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { InputDate } from \"../../../components/helpers/field\";\nimport { getTglSystem } from \"../../../components/helpers/function\";\nimport ValidasiDataUsers from \"../../../Validasi/ManageUsers/ValidasiDataUsers\";\nimport Loading from 'react-fullscreen-loading';\n\nclass HeadPembelian extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      isLoadingBatal: false,\n      FormModal: \"\",\n    };\n    this.setStartDate = this.setStartDate.bind(this);\n    this.setLastDate = this.setLastDate.bind(this);\n  }\n  componentDidMount() {}\n  setStartDate(date) {\n    this.setState({\n      tgl_awal: new Date(date),\n    });\n  }\n  setLastDate(date) {\n    this.setState({\n      tgl_akhir: new Date(date),\n    });\n  }\n  render() {\n    return (\n      <form\n        onSubmit={this.props.handleSubmit}\n        onKeyPress={(e) => {\n          e.key === \"Enter\" && e.preventDefault();\n        }}\n        autoComplete=\"off\"\n      >\n        <div className=\"row\">\n        <div className=\"col-lg-4\">\n            <Field\n              name=\"tgl_awal\"\n              component={InputDate}\n              label=\"Tanggal Dari\"\n              type=\"text\"\n              selected={this.state.tgl_awal}\n              onChange={(date) => this.setStartDate(date)}\n              placeholder=\"Masukan Tanggal Dari\"\n            />\n          </div>\n\n          <div className=\"col-lg-4\">\n            <Field\n              name=\"tgl_akhir\"\n              component={InputDate}\n              type=\"text\"\n              selected={this.state.tgl_akhir}\n              onChange={(date) => this.setLastDate(date)}\n              label=\"Tanggal Akhir\"\n              placeholder=\"Masukan Tanggal Akhir\"\n            />\n          </div>\n          <div className=\"col-4\">\n            <label> &nbsp;</label>\n            <button\n              className=\"btn btn-primary btn-block\"\n              disabled={this.props.isLoading}\n              type=\"submit\"\n            >\n              {this.props.isLoading ? (\n                <>\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\n                  Mencari\n                </>\n              ) : (\n                \"Cari Pembelian\"\n              )}\n            </button>\n          </div>\n        </div>\n        {this.props.isLoading ? (\n        <Loading \n        loading\n        background=\"rgba(0, 0, 0, 0.35)\"\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\n      ) : null}\n      </form>\n    );\n  }\n}\n\nHeadPembelian = reduxForm({\n  form: \"HeadPembelian\",\n  enableReinitialize: true,\n  validate: ValidasiDataUsers,\n})(HeadPembelian);\n// export default connect(maptostate, null)(HeadPembelian);\n\nexport default connect((state) => {\n  return {\n    initialValues: {\n      tgl_awal : getTglSystem(),\n      tgl_akhir : getTglSystem()\n    },\n  };\n})(HeadPembelian);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { showModalBatalBeli } from \"../../../actions/pembelian_action.jsx\";\nimport { formatDate, localStoragedecryp, localStorageencryp } from \"../../../components/helpers/function.jsx\";\nimport { ToastNotification } from \"../../../components/helpers/notification.jsx\";\nimport Tabel from \"../../../components/helpers/tabel.jsx\";\nimport { Panel, PanelHeader } from \"../../../components/panel/panel.jsx\";\nimport { postData } from \"../../../config/axios.jsx\";\nimport HeadBatalBeli from \"./HeadBatalBeli.jsx\";\nimport HeadPembelian from \"./HeadPembelian.jsx\";\nimport * as moment from \"moment-timezone\";\nimport Loading from 'react-fullscreen-loading';\n\n// import HeadPembelian from \"./HeadPembelian.jsx\";\nclass FormLihatPembelian extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoadingServicesSelesai: false,\n      isLoadingBatalBeli: false,\n      isLoading: false,\n      dataservices: [],\n      FormModal: false,\n      pembayaran: false,\n      columns: [\n       \n        {\n          dataField: \"no_faktur_beli\",\n          text: \"No FB\",\n          footerAttrs: {\n            colSpan: \"3\",\n          },\n          footer: \"Total\",\n        },\n        {\n          dataField: \"nama_customer\",\n          text: \"Nama Customer\",\n        },\n        // {\n        //   dataField: \"alamat_customer\",\n        //   text: \"Alamat Customer\",\n        // },\n        {\n          dataField: \"no_hp\",\n          text: \"No Hp\",\n        },\n        {\n          dataField: \"harga\",\n          text: \"Harga\",\n          formatter: (cell) => {\n            return <span>{parseInt(cell).toLocaleString(\"kr-KO\")}</span>;\n          },\n          footer: (columnData) =>\n            parseInt(\n              columnData.reduce((acc, item) => acc + item, 0)\n            ).toLocaleString(\"kr-KO\"),\n        },\n        {\n          dataField: \"harga_nota\",\n          text: \"Harga Nota\",\n          formatter: (cell) => {\n            return <span>{parseInt(cell).toLocaleString(\"kr-KO\")}</span>;\n          },\n          footer: (columnData) =>\n            parseInt(\n              columnData.reduce((acc, item) => acc + item, 0)\n            ).toLocaleString(\"kr-KO\"),\n        },\n        {\n          dataField: \"harga_rata\",\n          text: \"Harga Rata\",\n          formatter: (cell) => {\n            return <span>{parseInt(cell).toLocaleString(\"kr-KO\")}</span>;\n          },\n          footer: (columnData) =>\n            parseInt(\n              columnData.reduce((acc, item) => acc + item, 0)\n            ).toLocaleString(\"kr-KO\"),\n        },\n        {\n          dataField: \"kondisi\",\n          text: \"Kondisi\",\n          footer: \"\",\n        },\n        {\n          dataField: \"ambil\",\n          text: \"Action\",\n          csvExport: false,\n          headerClasses: \"text-center\",\n          formatter: (rowcontent, row, index) => {\n            return (\n              <div className=\"row\">\n                <div className=\"col-12\">\n                  <button\n                    type=\"button\"\n                    data-tooltip=\"Batal Pembelian\"\n                    onClick={() => this.shoBatalPembelian(row)}\n                    className=\"btn btn-danger\"\n                  >\n                    <i className=\"fa fa-file-export\"></i>\n                  </button>\n                  &nbsp;\n                  <button\n                    data-tooltip=\"Reprint Pembelian\"\n                    type=\"button\"\n                    onClick={() => this.ReprintPembelian(row)}\n                    className=\"btn btn-success mr-3\"\n                  >\n                    <i className=\"fa fa-print\"></i>\n                  </button>\n                </div>\n               \n              </div>\n            );\n          },\n          footer: \"\",\n        },\n        \n      ],\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  ReprintPembelian(id) {\nlet hasil = {\nno_faktur_group :  id.no_faktur_group\n}\npostData('pembelian/get/bynota', hasil).then((res) => {\nlet feedback = '';\nres.data.notabeli.forEach((row, index) => {\nlet jml_alamat = row.head.n_alamat_customer.length;\nfeedback = `========================================\nTanggal          : ${row.head.tgl_system}\nNama Customer    : ${row.head.nama_customer}\nNo Hp            : ${row.head.no_hp}\nAlamat Customer  : ${row.head.n_alamat_customer.split(0,20)}\n`\nif(jml_alamat>20){\nfeedback += `                   ${row.head.n_alamat_customer.split(0,20)}\n`;\n}\nif(jml_alamat>40){\nfeedback += `                   ${row.head.n_alamat_customer.split(40,20)}\n`;\n}\nfeedback += `========================================\\n`\nfeedback += `Keterangan\\n`\nfeedback += `========================================\\n`\nlet total = 0;\nlet harga_nota = 0;\nrow.detail.forEach((detail, index) => {\ntotal = total + detail.harga;\nharga_nota = harga_nota + detail.harga_nota;\nfeedback += `No Faktur Beli : ${detail.no_faktur_beli}\\n`\nfeedback += `Jenis Barang   : ${detail.kode_dept}\\n`\nfeedback += `Nama Barang    : ${detail.nama_barang}\\n`\nfeedback += `Berat          : ${detail.berat.toFixed(3)}\\n`\nfeedback += `Harga          : ${detail.harga.toLocaleString(\"kr-KO\")}\\n`\nfeedback += `========================================\\n`\n})\nfeedback += `Total          : ${total.toLocaleString(\"kr-KO\")}\\n`\nfeedback += `========================================\\n`\nfeedback += `Harga Waktu Beli   : ${total.toLocaleString(\"kr-KO\")}\\n`\nfeedback += `Harga Waktu Jual   : ${harga_nota.toLocaleString(\"kr-KO\")}\\n`\nfeedback += `\n\n\n\n\n\n\n\u001dVA\\n`;\n})\n\ndocument.getElementById(\"myInput\").value = feedback;\n\n}).then(() => {\nconsole.log('masuk');\nconst element = document.createElement(\"a\");\nconst file = new Blob([document.getElementById(\"myInput\").value], {\ntype: \"text/plain;charset=utf-8\",\n});\nelement.href = URL.createObjectURL(file);\nelement.download = \"autoprint_pembelian.txt\";\ndocument.body.appendChild(element);\nelement.click();\n})\n\n.catch((err) => {\n\n})\n}\n  shoBatalPembelian(row) {\n    // console.log(row.no_faktur_beli);\n    let data = {\n      no_faktur_group: row.no_faktur_group,\n      };\n    //   console.log(data);\n    postData(\"batalpembelian/get/by-faktur\", data)\n      .then((res) => {\n        // console.log(res.data);\n        if (res.data.length === 0) {\n          ToastNotification(\"info\", res.data.message);\n            this.setState({\n              FormModal: false,\n            });\n        } else {\n          this.setState({\n            FormModal: true,\n          });\n          res.data.forEach((row, index) => {\n            let hasil = {\n              no_faktur_group: row._id.no_faktur_group,\n              tgl_system: row._id.tgl_system,\n              kode_sales: row._id.kode_sales,\n              nama_customer: row._id.nama_customer,\n              no_hp: row._id.no_hp,\n              alamat_customer: row._id.alamat_customer,\n              kode_gudang: row._id.kode_gudang,\n              detail_barang: row.detail_barang,\n            };\n            this.props.dispatch(showModalBatalBeli(hasil));\n          });\n        }\n      })\n        .catch((err) => {\n          console.log(err);\n        ToastNotification(\"info\", \"Terjadi Kesalahan Saat Request Data\");\n        this.setState({\n          FormModal: false,\n        });\n      });\n  }\n\n  handleSubmit(data) {\n    let data_post = {\n      tgl_awal: formatDate(\n        moment(new Date(data.tgl_awal)).format(\"YYYY-MM-DD\")\n      ),\n      tgl_akhir: formatDate(\n        moment(new Date(data.tgl_akhir)).format(\"YYYY-MM-DD\")\n      ),\n    };\n    localStorageencryp(\"tgl_laporan\", JSON.stringify(data_post));\n    this.setState({\n      isLoading: true,\n    });\n    postData(\"pembelian/get/by-tanggal\", data_post)\n      .then((res) => {\n        // console.log(res.data);\n        if (res.data.length === 0) {\n          ToastNotification(\"info\", \"Data Pembelian Tidak Ada\");\n          this.setState({\n            isLoading: false,\n            datapembelian: [],\n          });\n        } else {\n        ToastNotification(\"success\", \"Data Pembelian Tersedia\");\n          this.setState({\n            isLoading: false,\n            datapembelian: res.data,\n          });\n        }\n      })\n      .catch((err) => {\n        //   console.log(err);\n        ToastNotification(\"info\", \"Data Pembelian Tidak Ada\");\n        this.setState({\n          isLoading: false,\n          datapembelian: [],\n        });\n      });\n  }\n  batalPembelian(data) {\n    // console.log(data);\n    this.setState({\n      isLoadingBatalBeli: true,\n    });\n    setTimeout(() => {\n      let hasil = {\n        no_faktur_group: data.no_faktur_group,\n      };\n      postData(\"batalpembelian/simpan\", hasil)\n        .then((res) => {\n          ToastNotification(\"success\", res.data.message);\n          this.setState({\n            FormModal: false,\n            isLoadingBatalBeli: false,\n          });\n            let tgl_laporan = localStoragedecryp('tgl_laporan').length === 0 ? [] : JSON.parse(localStoragedecryp('tgl_laporan'));\n          postData(\"pembelian/get/by-tanggal\", tgl_laporan).then((res) => {\n            this.setState({\n              datapembelian: res.data,\n            });\n          });\n        })\n        .catch((err) => {\n          ToastNotification(\"info\", \"Data Pembelian Tidak Ada\");\n          this.setState({\n            FormModal: false,\n            isLoading: false,\n            isLoadingBatalBeli: false,\n          });\n        });\n    }, 500);\n  }\n  back() {\n    this.setState({ FormModal: false });\n  }\n  \n  render() {\n    \n    return (\n      <div>\n        <ol className=\"breadcrumb float-xl-right\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"#\">Pembelian</Link>\n          </li>\n          <li className=\"breadcrumb-item active\">Lihat Pembelian</li>\n        </ol>\n        <h1 className=\"page-header\">Lihat Pembelian </h1>\n        {/* <button onClick={()=>this.ReprintPembelian()}> Print </button> */}\n        <Panel>\n        <textarea\n            style={{ display: \"none\" }}\n            id=\"myInput\"\n            rows=\"100\"\n            cols=\"100\"\n          />\n\n          <PanelHeader>\n            {\" \"}\n            {this.state.FormModal === true\n              ? \"Batal Pembelian\"\n              : \"Lihat Pembelian\"}\n          </PanelHeader>\n          <br />\n          <div className=\"container\">\n            {this.state.FormModal === true ? (\n              <HeadBatalBeli\n                back={() => this.back()}\n                isLoadingBatalBeli={this.state.isLoadingBatalBeli}\n                onSubmit={(data) => this.batalPembelian(data)}\n              />\n            ) : (\n              <>\n                {/* Lihat Pembelian */}\n                <HeadPembelian\n                  onSubmit={(data) => this.handleSubmit(data)}\n                  isLoading={this.state.isLoading}\n                />\n                <Tabel\n                  keyField=\"no_faktur_group\"\n                  exportCsv={false}\n                  data={this.state.datapembelian}\n                  columns={this.state.columns}\n                  empty={true}\n                  textEmpty=\"Data Barang Kosong\"\n                />\n              </>\n            )}\n          </div>\n          <br />\n          {/* End Tambah Lihat Pembelian  */}\n        </Panel>\n        {this.state.isLoading ? (\n        <Loading \n        loading\n        background=\"rgba(0, 0, 0, 0.35)\"\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\n      ) : null}\n      </div>\n    );\n  }\n}\n\nexport default connect(null)(FormLihatPembelian);\n","const ValidasiDataUsers = (value) => {\n    const errors = {};\n    if (!value.user_id) {\n        errors.user_id = \"User Id Tidak Boleh Kosong\";\n    }\n    if (!value.user_name) {\n        errors.user_name = \"Username Tidak Boleh Kosong\";\n    }\n\n    if (!value.level) {\n        errors.level = \"Level Harus Dipilih \";\n    }\n    // if (!value.password) {\n    //     errors.password = \"Hassword Harus Diisi \";\n    // }\n    // if (!value.retype_password) {\n    //     errors.retype_password = \"Retype Password Harus Diisi \";\n    // }\n\n    return errors;\n}\n\nexport default ValidasiDataUsers;\n\n\n","const ValidasiServicesSelesai = (value) => {\n    const errors = {};\n    if (!value.tgl_selesai) {\n        errors.tgl_selesai = \"Tanggal Selesai Tidak Boleh Kosong\";\n    }\n    if (!value.tgl_ambil) {\n        errors.tgl_ambil = \"Tanggal Tidak Boleh Kosong\";\n    }\n \n    return errors;\n}\n\nexport default ValidasiServicesSelesai;\n\n\n"],"sourceRoot":""}