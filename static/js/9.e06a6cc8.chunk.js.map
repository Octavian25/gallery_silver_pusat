{"version":3,"sources":["pages/Service/TransaksiServices/ModalDataCustomer.jsx","pages/Service/TransaksiServices/HeadInputPembayaran.jsx","pages/Service/TransaksiServices/ModalPembayaran.jsx","Validasi/Services/ValidasiTransaksiService.jsx","pages/Service/TransaksiServices/ModalTambahBarang.jsx","pages/Service/TransaksiServices/HeadServices.jsx","pages/Service/TransaksiServices/FormTransaksiServces.jsx","Validasi/Penjualan/ValidasiPembayaran.jsx","Validasi/ManageUsers/ValidasiDataUsers.jsx","Validasi/Penjualan/ValidasiFormDataMemberPenjualan.jsx"],"names":["jenis_pelanggan","value","name","ModalDataCustomer","props","_this","Object","classCallCheck","this","_super","call","state","showMember","dispatch","getDataSales","data_customer","localStorage","getItem","JSON","parse","setState","change","e","document","getElementById","focus","_this2","getData","then","res","data","length","ToastNotification","forEach","item","index","nama_customer","no_hp","alamat_customer","catch","err","_this3","react_default","a","createElement","onSubmit","handleSubmit","onKeyPress","key","preventDefault","autoComplete","className","Field","label","placeholder","options","DataSales","filter","list","undefined","kode_sales","map","component","ReanderSelect","onChange","changemember","id","getMember","target","ReanderField","type","readOnly","normalize","NumberOnly","disabled","isLoadingDataCustomer","Fragment","Component","reduxForm","form","enableReinitialize","validate","ValidasiFormDataMemberPenjualan","connect","initialValues","kode_customer","datamaster","currencyMask","createNumberMask","prefix","locale","jenis_pembayaran","HeadInputPembayaran","isLoading","type_pembayaran","lebih","columns","dataField","text","footerAttrs","colSpan","footer","setStartDate","bind","assertThisInitialized","data_barang_penjualan","localStoragedecryp","total","setTimeout","kembali","nominal_kembali","date","tgl_awal","Date","parseInt","library","assign","hitungTotal","pilihPembyaran","style","display","tabIndex","onFocus","copyValue","notif","ValidasiPembayaran","selector","formValueSelector","_selector","cash","harus_bayar_rp","element","nominal","hasil","parseFloat","toString","replace","estimasi_pesanan","getTglSystem","ModalPembayaran","formatter","cell","toLocaleString","columnData","reduce","acc","csvExport","headerClasses","rowcontent","row","keterangan","onClick","hapusdata","Swal","fire","title","icon","position","cancelButtonText","showCancelButton","confirmButtonText","showConfirmButton","result","isConfirmed","splice","setItem","status","no_card","jenis","nama_bank","datacek","total_transaksi","sisa_bayar","b","formatDate","moment","estimasi_service","format","findIndex","toUpperCase","fee","push","masuk","data_pembayaran","element2","TransaksiServices_HeadInputPembayaran","simpanPembayaran","keyField","exportCsv","empty","pagination","textEmpty","bayarSekarang","loading_default","loading","background","loaderColor","data_barang","no_titip_group","ValidasiTransaksiService","errors","nama_barang","berat","ongkos","ModalTambahBarang","harga_jual","berat_jual","hargapergram","kode_barcode","nama_atribut","berat_atribut","harga_atribut","Gramasi","defaultValue","submitting","jumlah","HeadServices","isLoadingBatal","FormModal","stringify","hideModal","deskripsi","cek","reset","setTransaksiServices","_this4","pembayaran","total_pembayarn","jumlah_rp","Math","abs","detail_barang","total_rp","data_services","kode_member","dp_rp","postData","notaservices","feedback","jml_alamat","n_alamat_customer","concat","tgl_system","slice","total_service","detail","jml_des","harga_nota","toFixed","join","file","Blob","href","URL","createObjectURL","download","body","appendChild","click","errorhandling","error","console","log","showModal","customer","barang","_this5","_this6","panel","rows","cols","tabel","tambahData","btnText","btnOptional","namaCustomer","jenisCustomer","btnTextOptional","handleClick","ShowModalCustomer","handleClickOptional","ShowModalBarang","ModalGlobal","size","TitleModal","content","TransaksiServices_ModalDataCustomer","TransaksiServices_ModalTambahBarang","simpanBarang","TransaksiServices_ModalPembayaran","showModalPembayaran","batalServices","ValidasiDataUsers","services","modalDialog","FormTransaksiServces","berhasil","react_router_dom","to","TransaksiServices_HeadServices","React","dataservices","user_id","user_name","level","alamat"],"mappings":"yTAyBMA,EAAkB,CACtB,CACEC,MAAO,SACPC,KAAM,UAER,CACED,MAAO,YACPC,KAAM,eAGJC,oDACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAI,EAAAC,KAAAF,KAAMJ,IACDO,MAAQ,CACXC,YAAY,GAHGP,kEAOjBG,KAAKJ,MAAMS,SAASC,gBACpB,IAAIC,EAAwE,OAAxDC,aAAaC,QAAQ,8BAAuD,GAAMC,KAAKC,MAAMH,aAAaC,QAAQ,+BAAiC,IACnKF,GAAmD,WAAlCA,EAAcf,gBACjCQ,KAAKY,SAAS,CACZR,YAAY,KAGdJ,KAAKY,SAAS,CACZR,YAAY,IAEdJ,KAAKJ,MAAMiB,OAAO,kBAAmB,mDAI5BC,GAED,WAANA,GACFd,KAAKY,SAAS,CACZR,YAAY,IAEdW,SAASC,eAAe,eAAeC,UAEvCF,SAASC,eAAe,iBAAiBC,QACzCjB,KAAKJ,MAAMiB,OAAO,gBAAiB,IACnCb,KAAKJ,MAAMiB,OAAO,gBAAiB,IACnCb,KAAKJ,MAAMiB,OAAO,QAAS,IAC3Bb,KAAKJ,MAAMiB,OAAO,kBAAmB,IACrCb,KAAKY,SAAS,CACZR,YAAY,uCAKRU,GAAG,IAAAI,EAAAlB,KAEXmB,YAAQ,6BAA+BL,GAAGM,KAAK,SAACC,GAEtB,IAApBA,EAAIC,KAAKC,OACXC,YAAkB,OAAQ,0CAE1BH,EAAIC,KAAKG,QAAQ,SAACC,EAAMC,GACtBT,EAAKtB,MAAMiB,OAAO,gBAAiBa,EAAKE,eACxCV,EAAKtB,MAAMiB,OAAO,QAASa,EAAKG,OAChCX,EAAKtB,MAAMiB,OAAO,kBAAmBa,EAAKI,qBAG7CC,MAAM,SAACC,GACRR,YAAkB,OAAQ,oFAGrB,IAAAS,EAAAjC,KACP,OACEkC,EAAAC,EAAAC,cAAA,QACEC,SAAUrC,KAAKJ,MAAM0C,aACrBC,WAAY,SAACzB,GACD,UAAVA,EAAE0B,KAAmB1B,EAAE2B,kBAEzBC,aAAa,OAEbR,EAAAC,EAAAC,cAAA,OAAKO,UAAU,OACbT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,SACbT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACElD,KAAK,aACLmD,MAAM,mBACNC,YAAY,qBACZC,QAAS/C,KAAKJ,MAAMoD,UAAUC,OAC5B,SAACC,GAAD,YAA8BC,IAApBD,EAAKE,aACfC,IAAI,SAACH,GAKL,MAJW,CACTzD,MAAOyD,EAAKE,WACZ1D,KAAMwD,EAAKE,cAIfE,UAAWC,OAGfrB,EAAAC,EAAAC,cAAA,OAAKO,UAAU,SACbT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACElD,KAAK,kBACLmD,MAAM,kBACNW,SAAU,SAAC1C,GAAD,OAAOmB,EAAKwB,aAAa3C,IACnCgC,YAAY,2BACZC,QAASvD,EACT8D,UAAWC,OAGfrB,EAAAC,EAAAC,cAAA,OAAKO,UAAU,SACbT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEc,GAAG,cACHhE,KAAK,gBACL8D,SAAU,SAAC1C,GAAD,OAAOmB,EAAK0B,UAAU7C,EAAE8C,OAAOnE,QACzC6D,UAAWO,IACXC,KAAK,OACLC,SAAU/D,KAAKG,MAAMC,WACrByC,MAAM,gBACNC,YAAY,2BAGhBZ,EAAAC,EAAAC,cAAA,OAAKO,UAAU,SACbT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEc,GAAG,gBACHhE,KAAK,gBACL4D,UAAWO,IACXC,KAAK,OACLjB,MAAM,gBACNC,YAAY,2BAGhBZ,EAAAC,EAAAC,cAAA,OAAKO,UAAU,SACfT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACIlD,KAAK,QACL4D,UAAWO,IACXC,KAAK,OACLE,UAAWC,IACXpB,MAAM,QACNC,YAAY,mBAGhBZ,EAAAC,EAAAC,cAAA,OAAKO,UAAU,SACbT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACElD,KAAK,kBACL4D,UAAWO,IACXC,KAAK,WACLjB,MAAM,kBACNC,YAAY,8BAKlBZ,EAAAC,EAAAC,cAAA,OAAKO,UAAU,OACbT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,UACfT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,SACbT,EAAAC,EAAAC,cAAA,UACEO,UAAU,4BACVuB,SAAUlE,KAAKJ,MAAMuE,sBACrBL,KAAK,UAEJ9D,KAAKJ,MAAMuE,sBACVjC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiC,SAAA,KACElC,EAAAC,EAAAC,cAAA,KAAGO,UAAU,2BADf,0BAKA,yBAxJgB0B,aAkKhC1E,EAAoB2E,YAAU,CAC5BC,KAAM,oBACNC,oBAAoB,EACpBC,SAAUC,KAHQJ,CAIjB3E,GACYgF,kBAhMI,SAACxE,GAClB,IAAII,EAAuE,OAAvDC,aAAaC,QAAQ,8BAAuD,GAAMC,KAAKC,MAAMH,aAAaC,QAAQ,+BAAiC,IACvK,MAAO,CACLmE,cAAc,CACZxB,WAAe7C,EAAc6C,YAAc,GAC3C5D,gBAAkBe,EAAcf,iBAAmB,GACnDqF,cAAgBtE,EAAcsE,eAAiB,GAC/CjD,cAAgBrB,EAAcqB,eAAiB,GAC/CC,MAAQtB,EAAcsB,OAAS,GAC/BC,gBAAkBvB,EAAcuB,iBAAmB,IAErDkB,UAAW7C,EAAM2E,WAAWxE,eAqLG,KAApBqE,CAA0BhF,mBCzLnCoF,EAAeC,YAAiB,CACpCC,OAAQ,OACRC,OAAQ,UAEJC,EAAmB,CACvB,CACE1F,MAAO,OACPC,KAAM,QAER,CACED,MAAO,QACPC,KAAM,SAER,CACED,MAAO,WACPC,KAAM,YAER,CACED,MAAQ,SACRC,KAAM,WAGJ0F,oDACJ,SAAAA,EAAYxF,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoF,IACjBvF,EAAAI,EAAAC,KAAAF,KAAMJ,IACDO,MAAQ,CACXkF,WAAW,EACXC,gBAAiB,OACjBC,OAAO,EACPC,QAAS,CASP,CACEC,UAAW,OACXC,KAAM,OACNC,YAAa,CACXC,QAAS,KAEXC,OAAQ,eAEV,CACEJ,UAAW,QACXC,KAAM,QACNG,OAAQ,MAIdhG,EAAKiG,aAAejG,EAAKiG,aAAaC,KAAlBjG,OAAAkG,EAAA,EAAAlG,CAAAD,IA9BHA,kEAgCC,IAAAqB,EAAAlB,KAElBA,KAAKJ,MAAMS,SAASC,gBACpB,IAAI2F,EAAwBvF,KAAKC,MAC/BuF,YAAmB,yBAGjBC,EAAQ,EACZF,EAAsBxE,QAAQ,SAACC,EAAMC,GAEnCwE,GAAgBzE,EAAKyE,MACrBjF,EAAKtB,MAAMiB,OAAO,yBAA0BsF,GAC5CjF,EAAKtB,MAAMiB,OAAO,iBAAkBsF,KAEtCnG,KAAKJ,MAAMiB,OAAO,QAAS,QAC3BuF,WAAW,WACTrF,SAASC,eAAe,sBAAsBC,SAC7C,2CAGHjB,KAAKJ,MAAMiB,OAAO,UAAWb,KAAKJ,MAAMyG,SACxCrG,KAAKJ,MAAMiB,OAAO,kBAAmBb,KAAKJ,MAAM0G,wDAInCxF,GACH,SAANA,EACFd,KAAKY,SAAS,CACZ0E,gBAAiB,SAEJ,aAANxE,EACTd,KAAKY,SAAS,CACZ0E,gBAAiB,aAEJ,UAANxE,EACTd,KAAKY,SAAS,CACZ0E,gBAAiB,UAGnBtF,KAAKY,SAAS,CACZ0E,gBAAiB,WAGrBtF,KAAKJ,MAAMiB,OAAO,OAAQ,yCAIf0F,GACXvG,KAAKY,SAAS,CACZ4F,SAAU,IAAIC,KAAKF,uCAIbzF,GACRd,KAAKJ,MAAMiB,OAAO,OAAO6F,SAASzC,YAAWnD,sCAEtC,IAAAmB,EAAAjC,KACP,OACE2G,EAAA,EAAAvE,cAAA,QACEC,SAAUrC,KAAKJ,MAAM0C,aACrBC,WAAY,SAACzB,GACD,UAAVA,EAAE0B,KAAmB1B,EAAE2B,kBAEzBC,aAAa,OAEbiE,EAAA,EAAAvE,cAAA,OAAKO,UAAU,OACbgE,EAAA,EAAAvE,cAAA,OAAKO,UAAU,SACbgE,EAAA,EAAAvE,cAACuE,EAAA,EAAD7G,OAAA8G,OAAA,CACElH,KAAK,yBACL4D,UAAWO,IACXC,KAAK,OACLN,SAAUxD,KAAK6G,cACf9C,UAAU,GACNgB,EANN,CAOElC,MAAM,mBACNC,YAAY,uBAIhB6D,EAAA,EAAAvE,cAAA,OAAKO,UAAU,SACbgE,EAAA,EAAAvE,cAACuE,EAAA,EAAD7G,OAAA8G,OAAA,CACElD,GAAG,iBACHhE,KAAK,iBACL4D,UAAWO,IACXC,KAAK,OACLN,SAAUxD,KAAK6G,cACf9C,UAAU,GACNgB,EAPN,CAQElC,MAAM,iBACNC,YAAY,qBAGhB6D,EAAA,EAAAvE,cAAA,OAAKO,UAAU,SACbgE,EAAA,EAAAvE,cAACuE,EAAA,EAAD,CACEjH,KAAK,QACLmD,MAAM,oBACNC,YAAY,yBACZC,QAASoC,EACT3B,SAAU,SAAC1C,GAAD,OAAOmB,EAAK6E,eAAehG,IACrCwC,UAAWC,OAIfoD,EAAA,EAAAvE,cAAA,OACEO,UAAU,QACVoE,MAAO,CACLC,QACiC,SAA/BhH,KAAKG,MAAMmF,gBACP,QACAtF,KAAKG,MAAMmF,gBACX,WAIRqB,EAAA,EAAAvE,cAACuE,EAAA,EAAD,CACEM,SAAS,IACTvH,KAAK,YACLgE,GAAG,YACHJ,UAAWO,IACXC,KAAK,OACLjB,MAAM,OACNC,YAAY,uBAGhB6D,EAAA,EAAAvE,cAAA,OACEO,UAAU,QACVoE,MAAO,CACLC,QACiC,SAA/BhH,KAAKG,MAAMmF,gBACP,OAC+B,UAA/BtF,KAAKG,MAAMmF,gBACX,OACA,UAGRqB,EAAA,EAAAvE,cAACuE,EAAA,EAAD,CACEM,SAAS,IACTvH,KAAK,UACLgE,GAAG,UACHJ,UAAWO,IACXC,KAAK,OACLjB,MAAsC,aAA/B7C,KAAKG,MAAMmF,gBAAiC,SAAW,UAC9DxC,YAA4C,aAA/B9C,KAAKG,MAAMmF,gBAAiC,iBAAmB,qBAGhFqB,EAAA,EAAAvE,cAAA,OAAKO,UAAU,SACbgE,EAAA,EAAAvE,cAACuE,EAAA,EAAD7G,OAAA8G,OAAA,CACEK,SAAS,IACTvH,KAAK,OACLgE,GAAG,qBACHJ,UAAWO,IACXC,KAAK,OACLjB,MAAM,UACNW,SAAUxD,KAAK6G,eACX9B,EARN,CASEf,UAAWC,IACXnB,YAAY,sBAGhB6D,EAAA,EAAAvE,cAAA,OAAKO,UAAU,QACfoE,MAAO,CACHC,QACiC,WAA/BhH,KAAKG,MAAMmF,gBACP,QACA,SAERqB,EAAA,EAAAvE,cAACuE,EAAA,EAAD,CACEM,SAAS,IACTvH,KAAK,MACLgE,GAAG,MACHJ,UAAWO,IACXC,KAAK,OACLjB,MAAM,UACNmB,UAAWC,IACXnB,YAAY,OAGhB6D,EAAA,EAAAvE,cAAA,OAAKO,UAAU,gBACbgE,EAAA,EAAAvE,cAACuE,EAAA,EAAD,CACEM,SAAS,IACTvH,KAAK,kBACL4D,UAAWO,IACXC,KAAK,OACLjB,MAAM,UACNC,YAAY,qBAGhB6D,EAAA,EAAAvE,cAAA,OAAKO,UAAU,SACbgE,EAAA,EAAAvE,cAACuE,EAAA,EAAD,CACEjH,KAAK,UACLgE,GAAG,aACHJ,UAAWO,IACXC,KAAK,OACLC,UAAU,EACVlB,MAAM,OACNqE,QAAS,SAACpG,GAAD,OAAKmB,EAAKkF,UAAUrG,EAAE8C,OAAOnE,QAGtCqD,YAAY,qBAIhB6D,EAAA,EAAAvE,cAAA,OACEO,UACiC,SAA/B3C,KAAKG,MAAMmF,gBACP,mBAC+B,aAA/BtF,KAAKG,MAAMmF,gBACX,mBACA,qBAGNqB,EAAA,EAAAvE,cAAA,WAEAuE,EAAA,EAAAvE,cAAA,qBACAuE,EAAA,EAAAvE,cAAA,UACE6E,SAAS,IACT/C,SAAUlE,KAAKJ,MAAMwH,MACrBzE,UAAU,mBAET,IACDgE,EAAA,EAAAvE,cAAA,KAAGO,UAAU,0BA7PO0B,KAuQlCe,EAAsBd,YAAU,CAC9BC,KAAM,sBACNC,oBAAoB,EACpBC,SAAU4C,KAHU/C,CAInBc,GAEH,IAAMkC,EAAWC,YAAkB,uBAEpB5C,cAAQ,SAACxE,GAAU,IAAAqH,EACAF,EAC9BnH,EACA,yBACA,iBACA,QAJMsH,EADwBD,EACxBC,KAAKC,EADmBF,EACnBE,eAMTpG,EAAOZ,KAAKC,MAAMH,aAAaC,QAAQ,8BAAgC,GACvE0F,EAAQ,EACZ7E,EAAKG,QAAQ,SAACkG,GACZxB,EAAQwB,EAAQC,QAAUzB,IAE5B,IAAI0B,EAAQC,WAAW3B,GAAS,GAAK2B,WAAWJ,GAAkB,GAIlE,MAAO,CACLrB,QAASwB,EAAME,WAAWC,QAAQ,wBAAyB,KAC3D1B,gBAAkBuB,EAAQnB,SAASe,GAEnC7C,cAAe,CACbqD,iBAAkBC,iBArBTvD,CAyBZS,oBC5SG+C,oDACJ,SAAAA,EAAYvI,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmI,IACjBtI,EAAAI,EAAAC,KAAAF,KAAMJ,IACDO,MAAQ,CACXkF,WAAW,EACXC,gBAAiB,OACjBE,QAAS,CACP,CACEC,UAAW,QACXC,KAAM,QACNC,YAAa,CACXC,QAAS,KAEXC,OAAQ,eAEV,CACEJ,UAAW,aACXC,KAAM,cAER,CACED,UAAW,UACXC,KAAM,QACN0C,UAAW,SAACC,GACV,OAAO1B,EAAA,EAAAvE,cAAA,YAAOsE,SAAS2B,GAAMC,eAAe,WAE9CzC,OAAQ,SAAC0C,GAAD,OACN7B,SACE6B,EAAWC,OAAO,SAACC,EAAK/G,GAAN,OAAe+G,EAAM/G,GAAM,IAC7C4G,eAAe,WAErB,CACE7C,UAAW,SACXC,KAAM,SACNgD,WAAW,EACXC,cAAe,cACfP,UAAW,SAACQ,EAAYC,EAAKlH,GAC3B,OACEgF,EAAA,EAAAvE,cAAA,OAAKO,UAAU,mBACbgE,EAAA,EAAAvE,cAAA,OAAKO,UAAU,UACbgE,EAAA,EAAAvE,cAAA,UACE0B,KAAK,SACLI,SAA6B,YAAnB2E,EAAIC,WACdC,QAAS,kBAAMlJ,EAAKmJ,UAAUrH,IAC9BgB,UAAU,uBAEVgE,EAAA,EAAAvE,cAAA,KAAGO,UAAU,oBAMvBkD,OAAQ,MAlDGhG,wDAuDT6D,GAAI,IAAAxC,EAAAlB,KACZiJ,IAAKC,KAAK,CACRC,MAAO,gBACPzD,KAAM,6BACN0D,KAAM,UACNC,SAAU,aACVC,iBAAkB,QAClBC,kBAAkB,EAClBC,kBAAmB,KACnBC,mBAAmB,IAClBrI,KAAK,SAACsI,GAEP,GAAIA,EAAOC,YAAa,CACtB,IAAIrI,EAAOb,YAAQ,4BACnBa,EAAKsI,OAAOlG,EAAI,GAChBmG,aAAQ,2BAA4BvI,GACpCJ,EAAKN,SAAS,CACZkJ,OAAQ,yDAOCjB,GACf,QAAmB1F,IAAhB0F,EAAIkB,SAAuC,SAAdlB,EAAImB,OAAkC,UAAdnB,EAAImB,MAE1D,OADAxI,YAAkB,OAAQ,mCACnB,EAET,QAAqB2B,IAAlB0F,EAAIoB,WAAyC,SAAdpB,EAAImB,MAEpC,OADAxI,YAAkB,OAAQ,iCACnB,EAET,QAAgB2B,IAAb0F,EAAIpB,MAAmC,MAAboB,EAAIpB,KAE/B,OADAjG,YAAkB,OAAQ,+BACnB,EAET,IAAI0I,EAAU,CACZC,gBAAkBtB,EAAInB,eACtB0C,WAAavB,EAAIvC,iBAEnBuD,aAAQ,sBAAsBK,GAC9B,IAAI5I,EAAOZ,KAAKC,MAAMH,aAAaC,QAAQ,8BAAgC,GAC3E,GAAkB,SAAdoI,EAAImB,OAAqB1I,EAAKC,QAMhC,GAAiB,SAAdsH,EAAImB,MAAiB,CACxB,GAAInB,EAAIxC,QAAQ2B,QAAQ,UAAW,IAAMa,EAAIpB,KAAO,GAA+B,IAA1Bf,SAASmC,EAAIxC,SAEpE,OADA7E,YAAkB,OAAQ,2CACnB,EAEP,GAAIF,EAAKkH,OAAO,SAACrG,EAAGkI,GAAJ,OAAUlI,EAAIkI,EAAEzC,SAAS,IAAMiB,EAAInB,eAEjD,OADAlG,YAAkB,OAAQ,2BACnB,QAZX,GAAIqH,EAAIxC,QAAQ2B,QAAQ,UAAW,IAAMa,EAAIpB,KAAO,EAElD,OADAjG,YAAkB,OAAQ,2CACnB,EAoBX,GAJAqI,aAAQ,mBAAoBS,YAAWC,YAAO,IAAI9D,KAAKoC,EAAI2B,mBAAmBC,OAAO,gBAG1EnJ,EAAKoJ,UAAU,SAAC7C,GAAD,MAA2B,SAAhBA,EAAMmC,SAC/B,EAAG,CACb,GAAInB,EAAIxC,QAAQ2B,QAAQ,UAAW,IAAMa,EAAIpB,KAAO,GAAKnG,EAAKkH,OAAO,SAACrG,EAAGkI,GAAJ,OAAUlI,EAAIkI,EAAEzC,SAAS,GAAKiB,EAAInB,eAErG,OADAlG,YAAkB,OAAQ,2BACnB,EAEP,GAAIF,EAAKkH,OAAO,SAACrG,EAAGkI,GAAJ,OAAUlI,EAAIkI,EAAEzC,SAAS,IAAMiB,EAAInB,eAEjD,OADAlG,YAAkB,OAAQ,2BACnB,EAOb,IAAe,IADHF,EAAKoJ,UAAU,SAAC7C,GAAD,OAAWA,EAAMmC,QAAUnB,EAAImB,QACxC,CAChB,IAAIlB,EAAa,GAEfA,EADgB,SAAdD,EAAImB,MACO,OACU,aAAdnB,EAAImB,MACAnB,EAAIkB,QAAU,MAAQlB,EAAIoB,UAE1BpB,EAAIoB,UAEnB,IAAIpC,EAAQ,CACVmC,MAAOnB,EAAImB,MACXpC,QAASlB,SAASmC,EAAIpB,MACtBwC,eAA6B9G,IAAlB0F,EAAIoB,UAA0BpB,EAAIoB,UAAUU,cAAgB,IACvEC,IAAoB,WAAd/B,EAAImB,OAAqBnB,EAAI+B,KAAW,EAC9Cb,QAASlB,EAAIkB,SAAW,IACxBjB,WAAYA,EAAW6B,eAEzBrJ,EAAKuJ,KAAKhD,GACV7H,KAAKY,SAAS,CACZkK,OAAO,IAETjB,aAAQ,2BAA4BvI,OAC/B,CACL,IAAIyJ,EAAkBtK,YAAQ,4BAC9BsK,EAAkBA,EAAgB1H,IAAI,SAAC2H,GAIrC,OAHIA,EAAShB,QAAUnB,EAAImB,QACzBgB,EAASpD,SAAWlB,SAASmC,EAAIpB,OAE5BuD,IAETnB,aAAQ,2BAA4BkB,GACpC/K,KAAKY,SAAS,CACZkJ,QAAQ,sCASL,IAAA7H,EAAAjC,KACP,OACE2G,EAAA,EAAAvE,cAAAuE,EAAA,EAAAvC,SAAA,KACEuC,EAAA,EAAAvE,cAAC6I,EAAD,CAAqB5I,SAAU,SAACf,GAAD,OAAUW,EAAKiJ,iBAAiB5J,MAC/DqF,EAAA,EAAAvE,cAAA,WACAuE,EAAA,EAAAvE,cAAA,QACEC,SAAUrC,KAAKJ,MAAM0C,aACrBC,WAAY,SAACzB,GACD,UAAVA,EAAE0B,KAAmB1B,EAAE2B,kBAEzBC,aAAa,OAEbiE,EAAA,EAAAvE,cAACuE,EAAA,EAAD,CAEEwE,SAAS,QAGTC,WAAW,EACX9J,KAAMb,YAAQ,6BAA+B,GAC7C+E,QAASxF,KAAKG,MAAMqF,QACpB6F,OAAO,EACPC,WAAW,MACXC,UAAU,2BAEZ5E,EAAA,EAAAvE,cAAA,OAAKO,UAAU,OACbgE,EAAA,EAAAvE,cAAA,OAAKO,UAAU,UAGfgE,EAAA,EAAAvE,cAAA,OAAKO,UAAU,oBACbgE,EAAA,EAAAvE,cAAA,UACEO,UAAU,kBACVuB,SAAUlE,KAAKJ,MAAMyF,UACrB0D,QAAS,kBAAM9G,EAAKrC,MAAM4L,iBAC1B1H,KAAK,UAEJ9D,KAAKJ,MAAMyF,UACVsB,EAAA,EAAAvE,cAAAuE,EAAA,EAAAvC,SAAA,KACEuC,EAAA,EAAAvE,cAAA,KAAGO,UAAU,2BADf,yBAKA,oBAKP3C,KAAKJ,MAAMyF,UACdsB,EAAA,EAAAvE,cAACqJ,EAAAtJ,EAAD,CACAuJ,SAAO,EACPC,WAAW,sBACVC,YAAY,0BACX,cApOoBvH,KA2O9B8D,EAAkB7D,YAAU,CAC1BC,KAAM,kBACNC,oBAAoB,EACpBC,SAAU4C,KAHM/C,CAIf6D,GAEYxD,kBA/PI,SAACxE,GAClB,IAAI0L,EAAcpL,YAAQ,8BAAgC,GACtDqJ,EAAS,YAQb,OAPA+B,EAAYpK,QAAQ,SAACkG,GAEjBmC,EAD6B,MAA3BnC,EAAQmE,eACD,YAEA,YAGN,CACLhC,OAAQA,IAoPGnF,CAAoBwD,qBCrQpB4D,EAfkB,SAACtM,GAC9B,IAAMuM,EAAS,GAWf,OAVKvM,EAAMwM,cACPD,EAAOC,YAAc,kCAEpBxM,EAAMyM,QACPF,EAAOE,MAAQ,4BAEdzM,EAAM0M,SACPH,EAAOG,OAAS,6BAGbH,GCFLjH,EAAeC,2BAAiB,CACpCC,OAAQ,OACRC,OAAQ,UAGJkH,oDACJ,SAAAA,EAAYxM,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoM,IACjBvM,EAAAI,EAAAC,KAAAF,KAAMJ,IACDO,MAAQ,CACXkF,WAAW,EACXgH,YAAY,EACZC,YAAY,EACZC,cAAc,EACdJ,QAAQ,EACRhG,OAAO,GARQtG,kEAYjBG,KAAKJ,MAAMS,SAASC,gBACpB8F,WAAW,WACTrF,SAASC,eAAe,eAAeC,SACtC,wCAEMH,GAAG,IAAAI,EAAAlB,MAIO,KAFjBU,KAAKC,MAAMH,aAAaC,QAAQ,+BAAiC,IAC/CiK,UAAU,SAAC7C,GAAD,OAAWA,EAAM2E,eAAiB1L,IAE9DK,YAAQ,8BAAgCL,GACrCM,KAAK,SAACC,GACmB,IAApBA,EAAIC,KAAKC,QACXC,YAAkB,OAAQ,8BAC1BN,EAAKtB,MAAMiB,OAAO,cAAe,IACjCK,EAAKtB,MAAMiB,OAAO,eAAgB,IAClCK,EAAKtB,MAAMiB,OAAO,gBAAiB,IACnCK,EAAKtB,MAAMiB,OAAO,gBAAiB,IACnCK,EAAKtB,MAAMiB,OAAO,QAAS,KAE3BQ,EAAIC,KAAKG,QAAQ,SAACyB,EAAMvB,GACtBT,EAAKtB,MAAMiB,OAAO,cAAeqC,EAAK+I,aACtC/K,EAAKtB,MAAMiB,OAAO,eAAgBqC,EAAKuJ,cACvCvL,EAAKtB,MAAMiB,OAAO,gBAAiBqC,EAAKwJ,eACxCxL,EAAKtB,MAAMiB,OAAO,gBAAiBqC,EAAKyJ,eACxCzL,EAAKtB,MAAMiB,OAAO,QAASqC,EAAKgJ,OAChChL,EAAKN,SAAS,CACZyL,YAAY,EACZC,YAAY,EACZC,cAAc,EACdJ,QAAQ,QAKfpK,MAAM,SAACC,GACNR,YAAkB,OAAQ,gCAG9BA,YAAkB,OAAQ,mEAI5BxB,KAAKJ,MAAMiB,OAAO,QAASb,KAAKJ,MAAMuG,wCAGtC,OACEjE,EAAAC,EAAAC,cAAA,QACEC,SAAUrC,KAAKJ,MAAM0C,aACrBC,WAAY,SAACzB,GACD,UAAVA,EAAE0B,KAAmB1B,EAAE2B,kBAEzBC,aAAa,OAEbR,EAAAC,EAAAC,cAAA,OAAKO,UAAU,OACbT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,mBACbT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEqE,SAAS,IACTvD,GAAG,cACHhE,KAAK,cACLmD,MAAM,cACNiB,KAAK,OACLhB,YAAY,sBACZQ,UAAWO,OAGf3B,EAAAC,EAAAC,cAAA,OAAKO,UAAU,mBACbT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEqE,SAAS,IACTvH,KAAK,QACLmD,MAAM,eACNW,SAAUxD,KAAK6G,cACf/C,KAAK,OACLE,UAAW4I,IACX9J,YAAY,uBACZQ,UAAWO,QAIjB3B,EAAAC,EAAAC,cAAA,OAAKO,UAAU,OACbT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,mBACbT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEqE,SAAS,IACTvH,KAAK,SACLmD,MAAM,SACNiB,KAAK,SACLC,UAAU,EACV8I,aAAa,IACbrJ,SAAUxD,KAAK6G,cACf/D,YAAY,iBACZQ,UAAWO,OAGf3B,EAAAC,EAAAC,cAAA,OAAKO,UAAU,mBACbT,EAAAC,EAAAC,cAACQ,EAAA,EAAD9C,OAAA8G,OAAA,CACEK,SAAS,IACTvH,KAAK,SACLmD,MAAM,SACNiB,KAAK,QACDiB,EALN,CAMEjC,YAAY,iBACZQ,UAAWO,SAIjB3B,EAAAC,EAAAC,cAAA,OAAKO,UAAU,OACbT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,oBACbT,EAAAC,EAAAC,cAACQ,EAAA,EAAD9C,OAAA8G,OAAA,CACElH,KAAK,QACLmD,MAAM,QACNiB,KAAK,OACLC,UAAU,EACVjB,YAAY,gBACZQ,UAAWO,KACPkB,KAIR7C,EAAAC,EAAAC,cAAA,OAAKO,UAAU,oBACbT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEqE,SAAS,IACTvH,KAAK,YACLmD,MAAM,YACNiB,KAAK,WACLhB,YAAY,oBACZQ,UAAWO,QAKjB3B,EAAAC,EAAAC,cAAA,OAAKO,UAAU,OACbT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,UACfT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,SACbT,EAAAC,EAAAC,cAAA,UACE6E,SAAS,IACTtE,UAAU,4BACVuB,SAAUlE,KAAKJ,MAAMkN,WACrBhJ,KAAK,UAEJ9D,KAAKJ,MAAMyF,UACVnD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiC,SAAA,KACElC,EAAAC,EAAAC,cAAA,KAAGO,UAAU,2BADf,0BAKA,yBA9JgB0B,aA+KhC+H,EAAoB9H,YAAU,CAC5BC,KAAM,oBACNC,oBAAoB,EACpBC,SAAUsH,GAHQzH,CAIjB8H,GAEYzH,kBAAQ,SAACxE,GACtB,IADgCqH,EACfD,YAAkB,oBACRD,CACzBnH,EACA,SACA,UAHMgM,EAFwB3E,EAExB2E,OAAQY,EAFgBvF,EAEhBuF,OAKhB,MAAO,CACLnI,cAAgB,CACdmI,OAAS,KAEX5G,MAAO2B,WAAWqE,GAAU,GAAKrE,WAAWiF,GAAU,IAAM,EAC5D/J,UAAW7C,EAAM2E,WAAWxE,eAZjBqE,CAcZyH,GCtLGY,oDACJ,SAAAA,EAAYpN,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgN,IACjBnN,EAAAI,EAAAC,KAAAF,KAAMJ,IACDO,MAAQ,CACXkF,WAAW,EACX4H,gBAAgB,EAChB9I,uBAAuB,EACvB+I,UAAW,IANIrN,kEAUjBG,KAAKJ,MAAMS,SAASC,mDAEXQ,GAAG,IAAAI,EAAAlB,KACZmB,YAAQ,8BAAgCL,GACrCM,KAAK,SAACC,GACmB,IAApBA,EAAIC,KAAKC,QACXC,YAAkB,OAAQ,8BAC1BN,EAAKtB,MAAMiB,OAAO,cAAe,IACjCK,EAAKtB,MAAMiB,OAAO,eAAgB,IAClCK,EAAKtB,MAAMiB,OAAO,gBAAiB,IACnCK,EAAKtB,MAAMiB,OAAO,gBAAiB,KAGnCQ,EAAIC,KAAKG,QAAQ,SAACyB,EAAMvB,GACtBT,EAAKtB,MAAMiB,OAAO,cAAeqC,EAAK+I,aACtC/K,EAAKtB,MAAMiB,OAAO,eAAgBqC,EAAKuJ,cACvCvL,EAAKtB,MAAMiB,OAAO,gBAAiBqC,EAAKwJ,eACxCxL,EAAKtB,MAAMiB,OAAO,gBAAiBqC,EAAKyJ,mBAI7C5K,MAAM,SAACC,GACNR,YAAkB,OAAQ,qEAInBF,GAAM,IAAAW,EAAAjC,KACb6H,EAAQ,CACV/F,gBAAiBR,EAAKQ,iBAAmB,IACzCtC,gBAAiB8B,EAAK9B,iBAAmB,YACzCqF,cAAwC,cAAzBvD,EAAK9B,gBAAkC,YAAc8B,EAAKuD,cACzEzB,WAAY9B,EAAK8B,WACjBxB,cAAeN,EAAKM,eAAiB,UACrCC,MAAOP,EAAKO,OAAS,KAEvB7B,KAAKY,SAAS,CACZuD,uBAAuB,IAEzB3D,aAAaqJ,QAAQ,6BAA8BnJ,KAAKyM,UAAUtF,IAClEzB,WAAW,WACTnE,EAAKrB,SAAS,CACZuD,uBAAuB,IAEzBlC,EAAKrC,MAAMS,SAAS+M,iBACnB,0CAEQ9L,GACXA,EAAO,CACL2K,YAAa3K,EAAK2K,YAAYtB,eAAiB,IAC/CuB,MAAOpE,WAAWxG,EAAK4K,QAAU,EACjCa,OAAQjF,WAAWxG,EAAKyL,SAAW,EACnCZ,OAAQzF,SAASpF,EAAK6K,SAAW,EACjChG,MAAOO,SAASpF,EAAK6E,QAAU,EAC/BkH,eAA8BlK,IAAnB7B,EAAK+L,UAA0B/L,EAAK2K,YAAYtB,cAAgBrJ,EAAK+L,UAAU1C,eAAiB,KAE7G,IAAI2C,EAAM5M,KAAKC,MAAMH,aAAaC,QAAQ,0BAA4B,GACtET,KAAKJ,MAAMS,SAASkN,YAAM,sBAC1BxM,SAASC,eAAe,eAAeC,QACvCqM,EAAIzC,KAAKvJ,GACTd,aAAaqJ,QAAQ,uBAAwBnJ,KAAKyM,UAAUG,IAC5DtN,KAAKJ,MAAMS,SAASmN,YAAqBF,IACzCtN,KAAKJ,MAAMS,SAAS+M,gBACpB5L,YAAkB,UAAW,+BAC7BxB,KAAKJ,MAAMiB,OAAO,cAAe,0CAGrBS,GAAM,IAAAmM,EAAAzN,KAClB,GAAGS,YAAQ,4BAA4Bc,QAAU,EAE/C,OADAC,YAAkB,OAAQ,kDACnB,EAETxB,KAAKY,SAAS,CACZyE,WAAW,IAOb,IAAIqI,EAAajN,YAAQ,4BAGrBsK,EAAkB,GAClB4C,EAAkB,EAClBC,EAAY,EAChBF,EAAWjM,QAAQ,SAACkG,GACI,SAAlBA,EAAQqC,OAER4D,EADElH,SAASiB,EAAQC,UAAYiG,KAAKC,IAAIpH,SAASjG,YAAQ,uBAAuB2J,aACpEyD,KAAKC,IAAIpH,SAASjG,YAAQ,uBAAuB2J,YAAc1D,SAASiB,EAAQC,UAEhFlB,SAASiB,EAAQC,SAG7BgG,EADElH,SAASiB,EAAQC,UAAYiG,KAAKC,IAAIpH,SAASjG,YAAQ,uBAAuB0J,kBACpEzD,SAASiB,EAAQC,SAAWiG,KAAKC,IAAIpH,SAASjG,YAAQ,uBAAuB2J,aAE7E1D,SAASiB,EAAQC,UAG/BgG,EAAYlH,SAASiB,EAAQC,SAE/B,IAAIiB,EAAM,CACRmB,MAAOrC,EAAQqC,MACflB,WAAYnB,EAAQmB,WACpB8B,IAAuB,WAAlBjD,EAAQqC,OAAqBtD,SAASiB,EAAQiD,MAAY,EAC/DgD,UAAYA,GAQdD,EAAkBhG,EAAQC,QAAU+F,EACpC5C,EAAgBF,KAAKhC,KAIvB,IAAItI,EAAgBG,KAAKC,MACvBH,aAAaC,QAAQ,+BAEnBwF,EAAwBvF,KAAKC,MAC/BH,aAAaC,QAAQ,yBAGnBsN,EAAgB,GACpB9H,EAAsBxE,QAAQ,SAACC,EAAMC,GACnC,IAAIkH,EAAM,CACRoD,YAAavK,EAAKuK,YAClBC,MAAOxK,EAAKwK,MACZa,OAAQrL,EAAKqL,OACbZ,OAAQzK,EAAKyK,OACb6B,SAAUtM,EAAKsM,SACfX,UAAW3L,EAAK2L,WAElBU,EAAclD,KAAKhC,KAErB,IAAIoF,EAAgB,CAClB7K,WAAY7C,EAAc6C,WAC1BxB,cAAerB,EAAcqB,cAC7BsM,YACoC,cAAlC3N,EAAcf,gBACVe,EAAcf,gBACde,EAAcsE,cACpB/C,gBAAiBvB,EAAcuB,gBAC/BD,MAAOtB,EAAcsB,MACrBsE,MAAOO,SAASjG,YAAQ,uBAAuB0J,iBAC/CgE,MAAOzH,SAASiH,GAAmBjH,SAASjG,YAAQ,uBAAuB0J,iBAAmBzD,SAASiH,GAAmBjH,SAASiH,IAAoBjH,SAASjG,YAAQ,uBAAuB0J,iBAAmBzD,SAASjG,YAAQ,uBAAuB0J,iBAAmB,EAE7Q4D,cAAeA,EACfL,WAAY3C,GAGdqD,YAAS,iBAAkBH,GACxB7M,KAAK,SAACC,GACLoM,EAAK7M,SAAS,CACZyE,WAAW,IAEb7D,YAAkB,UAAW,6BAErC,IADA,IAAI6M,EAAe,GACV1M,EAAQ,EAAGA,EAAQ,EAAGA,IAAS,CACxC,IAAI2M,EAAW,GACfjN,EAAIC,KAAKG,QAAQ,SAACoH,EAAKlH,GACvB,IAAI4M,EAAa1F,EAAI2F,kBAAkBjN,OACvC+M,GAAQ,6CACRA,GAAQ,6CACRA,GAAQ,gEAAAG,OACa5F,EAAI6F,WADjB,yBAAAD,OAEa5F,EAAIzF,WAFjB,yBAAAqL,OAGa5F,EAAIjH,cAHjB,yBAAA6M,OAIa5F,EAAIhH,MAJjB,yBAAA4M,OAKa5F,EAAI2F,kBAAkBG,MAAM,EAAG,IAL5C,yBAAAF,OAMa5F,EAAI+F,cAActG,eAAe,SAN9C,MAQJiG,EAAa,KACjBD,GAAQ,SAAAG,OAAa5F,EAAI2F,kBAAkBG,MAAM,GAAG,IAA5C,OAGJJ,EAAa,KACjBD,GAAQ,SAAAG,OAAa5F,EAAI2F,kBAAkBG,MAAM,GAAG,IAA5C,OAGRL,GAAQ,6CACRA,GAAQ,eACRA,GAAQ,6CACR,IAAInC,EAAS,EAEbtD,EAAIkF,cAActM,QAAQ,SAACoN,EAAQlN,GACnCwK,GAAkB0C,EAAO1C,OACzB,IAAI2C,EAAUD,EAAOxB,UAAU9L,OACLsN,EAAOE,WACjCT,GAAQ,sBAAAG,OAA0BI,EAAO5C,YAAjC,MACRqC,GAAQ,sBAAAG,OAA0BI,EAAO3C,MAAM8C,QAAQ,GAA/C,MACRV,GAAQ,sBAAAG,OAA0BI,EAAO9B,OAAOzE,eAAe,SAAvD,MACRgG,GAAQ,sBAAAG,OAA0BI,EAAO1C,OAAO7D,eAAe,SAAvD,MACRgG,GAAQ,sBAAAG,OAA0BI,EAAOxB,UAAUsB,MAAM,EAAE,IAAnD,MACJG,EAAU,KACdR,GAAQ,sBAAAG,OAA0B5F,EAAIwE,UAAUsB,MAAM,GAAI,MAEtDG,EAAU,KACdR,GAAQ,sBAAAG,OAA0B5F,EAAIwE,UAAUsB,MAAM,GAAI,MAE1DL,GAAQ,+CAERA,GAAQ,sBAAAG,OAA0BtC,EAAO7D,eAAe,SAAhD,MACRgG,GAAQ,6CACRA,GAAQ,6CACRA,GAAQ,6CACRA,GAAQ,6CACRA,GAAQ,6CACRA,GAAQ,6CACRA,GAAQ,6CACRA,GAAQ,6CACRA,GAAQ,+CAIRD,EAAaxD,KAAKyD,GAGlBvN,SAASC,eAAe,WAAWvB,MAAQ4O,EAAaY,KAAK,MAC1D7N,KAAK,WACN,IAAMuG,EAAU5G,SAASqB,cAAc,KACjC8M,EAAO,IAAIC,KAAK,CAACpO,SAASC,eAAe,WAAWvB,OAAQ,CAChEqE,KAAM,6BAER6D,EAAQyH,KAAOC,IAAIC,gBAAgBJ,GACnCvH,EAAQ4H,SAAW,wBACnBxO,SAASyO,KAAKC,YAAY9H,GAC1BA,EAAQ+H,UACPtO,KAAK,WACAqM,EAAK7N,MAAMS,SAAS+M,kBAErBhM,KAAK,WACJqM,EAAK7N,MAAMS,SAASkN,YAAM,sBAE3BnM,KAAK,WACJZ,aAAaqJ,QAAQ,6BAA8BnJ,KAAKyM,UAAU,KAClE3M,aAAaqJ,QAAQ,uBAAwBnJ,KAAKyM,UAAU,KAC5D3M,aAAaqJ,QAAQ,sBAAuBnJ,KAAKyM,UAAU,KAC3D3M,aAAaqJ,QAAQ,2BAA4BnJ,KAAKyM,UAAU,KAChEM,EAAK7M,SAAS,CACZyE,WAAW,MAGdjE,KAAK,WACJqM,EAAK7N,MAAMS,SAASmN,YAAqB,OAE1CzL,MAAM,SAACC,GAAD,OAASyL,EAAKkC,cAAc3N,2CAIzB4N,GACZC,QAAQC,IAAIF,GACZ5P,KAAKY,SAAS,CACZyE,WAAW,IAEb7D,YAAkB,OAAQ,sEAG1BxB,KAAKJ,MAAMS,SAAS0P,gBACpB/P,KAAKY,SAAS,CAAEsM,UAAW,gEAG3BlN,KAAKY,SAAS,CAAEsM,UAAW,sBAC3BlN,KAAKJ,MAAMS,SAAS0P,8DAIpB,IAAIC,EACFtP,KAAKC,MAAMH,aAAaC,QAAQ,gCAAkC,GAChEwP,EAASvP,KAAKC,MAAMH,aAAaC,QAAQ,0BAA4B,GACjD,IAApBuP,EAASzO,QAAkC,IAAlB0O,EAAO1O,OAClCC,YACE,OACA,mDAGFxB,KAAKY,SAAS,CAAEsM,UAAW,wBAC3BlN,KAAKJ,MAAMS,SAAS0P,yDAGR,IAAAG,EAAAlQ,KACdA,KAAKY,SAAS,CACZqM,gBAAgB,IAElB7G,WAAW,WACT5F,aAAaqJ,QAAQ,6BAA8BnJ,KAAKyM,UAAU,KAClE+C,EAAKtQ,MAAMS,SAASmN,YAAqB,KACzChN,aAAaqJ,QAAQ,uBAAwBnJ,KAAKyM,UAAU,KAC5D+C,EAAKtP,SAAS,CACZqM,gBAAgB,KAEjB,sCAEI,IAAAkD,EAAAnQ,KACP,OACEkC,EAAAC,EAAAC,cAACgO,EAAA,EAAD,KACIlO,EAAAC,EAAAC,cAAA,YACE2E,MAAO,CAAEC,QAAS,QAClBtD,GAAG,UACH2M,KAAK,MACLC,KAAK,QAETpO,EAAAC,EAAAC,cAAA,OAAKO,UAAU,OACbT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,UACbT,EAAAC,EAAAC,cAACmO,EAAA,EAAD,CACEpF,SAAS,cACTC,WAAW,EACX9J,KAC6C,IAA3CtB,KAAKJ,MAAM4N,qBAAqBjM,OAC5Bb,KAAKC,MAAMH,aAAaC,QAAQ,0BAChC,GACAT,KAAKJ,MAAM4N,sBAAwB,GAEzCgD,YAAY,EACZC,QAAQ,uBACRjL,QAASxF,KAAKJ,MAAM4F,QACpBkL,aAAa,EACbC,cAAc,EACdC,eAAe,EACfrM,KAAK,UACLsM,gBAAgB,qBAChBC,YAAa,kBAAMX,EAAKY,qBACxBC,oBAAqB,kBAAMb,EAAKc,mBAChC5F,OAAO,EACPE,UAAU,yBAKhBrJ,EAAAC,EAAAC,cAAC8O,EAAA,EAAD,CACEC,KAA8B,sBAAxBnR,KAAKG,MAAM+M,UAAmC,KAAgC,oBAAzBlN,KAAKG,MAAM+M,UAAkC,IAAM,IAC9G/D,MAAOjH,EAAAC,EAAAC,cAACgP,EAAD,CAAYjR,MAAOH,KAAKG,MAAM+M,YACrCmE,QAC2B,sBAAzBrR,KAAKG,MAAM+M,UACThL,EAAAC,EAAAC,cAACkP,EAAD,CACEnN,sBAAuBnE,KAAKG,MAAMgE,sBAClC9B,SAAU,SAACf,GAAD,OAAU6O,EAAK7N,aAAahB,MAEb,oBAAzBtB,KAAKG,MAAM+M,UACbhL,EAAAC,EAAAC,cAACmP,EAAD,CAAmBlP,SAAU,SAACf,GAAD,OAAU6O,EAAKqB,aAAalQ,MAEzDY,EAAAC,EAAAC,cAACqP,EAAD,CACEpM,UAAWrF,KAAKG,MAAMkF,UACtBmG,cAAe,SAAClK,GAAD,OAAU6O,EAAK3E,cAAclK,QAMpDY,EAAAC,EAAAC,cAAA,OAAKO,UAAU,OACbT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,SACbT,EAAAC,EAAAC,cAAA,UACE2G,QAAS,kBAAMoH,EAAKuB,uBACpB/O,UAAU,kBACVuB,SAAUlE,KAAKJ,MAAMyF,UACrBvB,KAAK,UAEJ9D,KAAKJ,MAAMyF,UACVnD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiC,SAAA,KACElC,EAAAC,EAAAC,cAAA,KAAGO,UAAU,2BADf,0BAKA,wBAbN,OAiBET,EAAAC,EAAAC,cAAA,UACE2G,QAAS,kBAAMoH,EAAKwB,iBACpBhP,UAAU,kBACVuB,SAAUlE,KAAKG,MAAM8M,eACrBnJ,KAAK,UAEJ9D,KAAKG,MAAM8M,eACV/K,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiC,SAAA,KACElC,EAAAC,EAAAC,cAAA,KAAGO,UAAU,2BADf,eAIA,mBAtYW0B,aAgZ3B,SAAS+M,EAAW9P,EAAMe,GAExB,MAAmB,sBAAff,EAAKnB,MACA,qBACiB,oBAAfmB,EAAKnB,MACP,mBAEA,kBAIX6M,EAAe1I,YAAU,CACvBC,KAAM,eACNC,oBAAoB,EACpBC,SAAUmN,KAHGtN,CAIZ0I,GACYrI,kBAxaI,SAACxE,GAClB,MAAO,CACLqN,qBAAsBrN,EAAM0R,SAASrE,qBACrCxK,UAAW7C,EAAM2E,WAAWxE,aAC5B8M,UAAWjN,EAAM2E,WAAWgN,cAoaG,KAApBnN,CAA0BqI,GChbnC+E,oDACJ,SAAAA,EAAYnS,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+R,IACjBlS,EAAAI,EAAAC,KAAAF,KAAMJ,IACDO,MAAQ,CACXkF,WAAW,EACXG,QAAS,CACP,CACEC,UAAW,cACXC,KAAM,cACRG,OAAQ,SAGR,CACEJ,UAAW,QACXC,KAAM,QACNG,OAAQ,SAAC0C,GAAD,OACNA,EAAWC,OAAO,SAACC,EAAK/G,GAAN,OAAe+G,EAAM/G,GAAM,GAAGsN,QAAQ,KAE5D,CACEvJ,UAAW,SACXC,KAAM,SACN0C,UAAW,SAACC,GACV,OAAOnG,EAAAC,EAAAC,cAAA,YAAOsE,SAAS2B,GAAMC,eAAe,WAE9CzC,OAAQ,SAAC0C,GAAD,OACN7B,SACE6B,EAAWC,OAAO,SAACC,EAAK/G,GAAN,OAAe+G,EAAM/G,GAAM,IAC7C4G,eAAe,WAErB,CACE7C,UAAW,SACXC,KAAM,SACN0C,UAAW,SAACC,GACV,OAAOnG,EAAAC,EAAAC,cAAA,YAAOsE,SAAS2B,GAAMC,eAAe,WAE9CzC,OAAQ,SAAC0C,GAAD,OACN7B,SACE6B,EAAWC,OAAO,SAACC,EAAK/G,GAAN,OAAe+G,EAAM/G,GAAM,IAC7C4G,eAAe,WAErB,CACE7C,UAAW,QACXC,KAAM,WACN0C,UAAW,SAACC,GACV,OAAOnG,EAAAC,EAAAC,cAAA,YAAOsE,SAAS2B,GAAMC,eAAe,WAE9CzC,OAAQ,SAAC0C,GAAD,OACN7B,SACE6B,EAAWC,OAAO,SAACC,EAAK/G,GAAN,OAAe+G,EAAM/G,GAAM,IAC7C4G,eAAe,WAErB,CACE7C,UAAW,YACXC,KAAM,YACNG,OAAQ,IAEV,CACEJ,UAAW,SACXC,KAAM,SACNgD,WAAW,EACXC,cAAe,cACfP,UAAW,SAACQ,EAAYC,EAAKlH,GAE3B,OACEO,EAAAC,EAAAC,cAAA,OAAKO,UAAU,mBACbT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,UACbT,EAAAC,EAAAC,cAAA,UACE0B,KAAK,SACLiF,QAAS,kBAAMlJ,EAAKmJ,UAAUrH,IAC9BgB,UAAU,uBAEVT,EAAAC,EAAAC,cAAA,KAAGO,UAAU,oBAMvBkD,OAAQ,MAIdhG,EAAKyC,aAAezC,EAAKyC,aAAayD,KAAlBjG,OAAAkG,EAAA,EAAAlG,CAAAD,IAhFHA,wDAoFT6D,GAAI,IAAAxC,EAAAlB,KACZiJ,IAAKC,KAAK,CACRC,MAAO,gBACPzD,KAAM,6BACN0D,KAAM,UACNC,SAAU,aACVC,iBAAkB,QAClBC,kBAAkB,EAClBC,kBAAmB,KACnBC,mBAAmB,IAClBrI,KAAK,SAACsI,GAEP,GAAIA,EAAOC,YAAa,CACtB,IAAIrI,EAAOZ,KAAKC,MACdH,aAAaC,QAAQ,yBAEvBa,EAAKsI,OAAOlG,EAAI,GAChBlD,aAAaqJ,QAAQ,uBAAwBnJ,KAAKyM,UAAU7L,IAC5DJ,EAAKtB,MAAMS,SAASmN,YAAqBlM,IAGzCJ,EAAKN,SAAS,CACZoR,UAAW,sDAOjBxR,aAAaqJ,QAAQ,6BAA8BnJ,KAAKyM,UAAU,KAClE3M,aAAaqJ,QAAQ,uBAAwBnJ,KAAKyM,UAAU,0CAGjD7L,qCAGX,OACEY,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIO,UAAU,6BACZT,EAAAC,EAAAC,cAAA,MAAIO,UAAU,mBACZT,EAAAC,EAAAC,cAAC6P,EAAA,EAAD,CAAMC,GAAG,KAAT,aAEFhQ,EAAAC,EAAAC,cAAA,MAAIO,UAAU,0BAAd,uBAEFT,EAAAC,EAAAC,cAAA,MAAIO,UAAU,eAAd,uBACAT,EAAAC,EAAAC,cAACgO,EAAA,EAAD,KACElO,EAAAC,EAAAC,cAACgO,EAAA,EAAD,2BACAlO,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,OAAKO,UAAU,aACbT,EAAAC,EAAAC,cAAC+P,EAAD,CACE9M,UAAWrF,KAAKG,MAAMkF,UACtBG,QAASxF,KAAKG,MAAMqF,WAGxBtD,EAAAC,EAAAC,cAAA,oBA5IyBgQ,IAAM/N,WAoJ1BM,sBAzJI,SAACxE,GAChB,MAAO,CACLkS,aAAclS,EAAM0R,SAASrE,uBAuJD,KAAnB7I,CAAyBoN,qCCpJzB1K,IAZY,SAAC5H,GACxB,IAAMuM,EAAS,GAQf,OAPKvM,EAAMuK,QACPgC,EAAOhC,MAAQ,4BAMZgC,qCCaI4F,IAtBW,SAACnS,GACvB,IAAMuM,EAAS,GAkBf,OAjBKvM,EAAM6S,UACPtG,EAAOsG,QAAU,8BAEhB7S,EAAM8S,YACPvG,EAAOuG,UAAY,+BAGlB9S,EAAM+S,QACPxG,EAAOwG,MAAQ,wBASZxG,qCCDItH,IAlByB,SAACjF,GACrC,IAAMuM,EAAS,GAcf,OAbKvM,EAAM2D,aACP4I,EAAO5I,WAAa,4BAEnB3D,EAAMmC,gBACPoK,EAAOpK,cAAgB,6BAEtBnC,EAAMoC,QACPmK,EAAOnK,MAAQ,qBAEdpC,EAAMgT,SACPzG,EAAOyG,OAAS,sBAGbzG","file":"static/js/9.e06a6cc8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { getDataSales } from \"../../../actions/datamaster_action\";\nimport { ReanderField, ReanderSelect } from \"../../../components/helpers/field\";\nimport { ToastNotification } from \"../../../components/helpers/notification\";\nimport { getData } from \"../../../config/axios\";\nimport { NumberOnly } from \"../../../Validasi/normalize\";\nimport ValidasiFormDataMemberPenjualan from \"../../../Validasi/Penjualan/ValidasiFormDataMemberPenjualan\";\n\nconst maptostate = (state) => {\n  let data_customer = localStorage.getItem(\"data_customer_services_tmp\") === null || undefined  ? [] :  JSON.parse(localStorage.getItem(\"data_customer_services_tmp\") || []);\n  return {\n    initialValues:{\n      kode_sales :   data_customer.kode_sales || \"\",\n      jenis_pelanggan : data_customer.jenis_pelanggan || \"\",\n      kode_customer : data_customer.kode_customer || \"\",\n      nama_customer : data_customer.nama_customer || \"\",\n      no_hp : data_customer.no_hp || \"\",\n      alamat_customer : data_customer.alamat_customer || \"\",\n    },\n    DataSales: state.datamaster.getDataSales,\n  };\n};\n\nconst jenis_pelanggan = [\n  {\n    value: \"MEMBER\",\n    name: \"MEMBER\",\n  },\n  {\n    value: \"NONMEMBER\",\n    name: \"NON MEMBER\",\n  },\n];\nclass ModalDataCustomer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showMember: true,\n    };\n  }\n  componentDidMount() {\n    this.props.dispatch(getDataSales());\n    let data_customer = localStorage.getItem(\"data_customer_services_tmp\")  === null || undefined ? [] :  JSON.parse(localStorage.getItem(\"data_customer_services_tmp\") || []);\n    if (data_customer && data_customer.jenis_pelanggan === \"MEMBER\") {\n      this.setState({\n        showMember: false,\n      });\n    } else {\n      this.setState({\n        showMember: true,\n      });\n      this.props.change(\"jenis_pelanggan\", \"NONMEMBER\")\n    }\n   \n  }\n  changemember(e) {\n    // console.log(e);\n    if (e === \"MEMBER\") {\n      this.setState({\n        showMember: false,\n      });\n      document.getElementById('kode_member').focus()\n    } else {\n      document.getElementById('nama_customer').focus()\n      this.props.change(\"kode_customer\", \"\");\n      this.props.change(\"nama_customer\", \"\");\n      this.props.change(\"no_hp\", \"\");\n      this.props.change(\"alamat_customer\", \"\");\n      this.setState({\n        showMember: true,\n      });\n    }\n  }\n\n  getMember(e) {\n    // console.log(e);\n    getData(\"member/get/by-kode-member/\" + e).then((res) => {\n      // console.log(res.data);\n      if (res.data.length === 0) {\n        ToastNotification(\"info\", \"Member Yang Anda Masukan Tidak Ada !!!\");\n      } else {\n        res.data.forEach((item, index) => {\n          this.props.change(\"nama_customer\", item.nama_customer);\n          this.props.change(\"no_hp\", item.no_hp);\n          this.props.change(\"alamat_customer\", item.alamat_customer);\n        })\n      }\n    }).catch((err) => {\n      ToastNotification(\"info\", \"Terjadi Kesalahan SIlahkan Ulangi Kembali !!!\");\n    })\n  }\n  render() {\n    return (\n      <form\n        onSubmit={this.props.handleSubmit}\n        onKeyPress={(e) => {\n          e.key === \"Enter\" && e.preventDefault();\n        }}\n        autoComplete=\"off\"\n      >\n        <div className=\"row\">\n          <div className=\"col-4\">\n            <Field\n              name=\"kode_sales\"\n              label=\"Pilih Kode Sales\"\n              placeholder=\"Masukan Kode Sales\"\n              options={this.props.DataSales.filter(\n                (list) => list.kode_sales !== undefined\n              ).map((list) => {\n                let data = {\n                  value: list.kode_sales,\n                  name: list.kode_sales,\n                };\n                return data;\n              })}\n              component={ReanderSelect}\n            />\n          </div>\n          <div className=\"col-4\">\n            <Field\n              name=\"jenis_pelanggan\"\n              label=\"Pilih Pelanggan\"\n              onChange={(e) => this.changemember(e)}\n              placeholder=\"Silahkan Pilih Pelanggan\"\n              options={jenis_pelanggan}\n              component={ReanderSelect}\n            />\n          </div>\n          <div className=\"col-4\">\n            <Field\n              id=\"kode_member\"\n              name=\"kode_customer\"\n              onChange={(e) => this.getMember(e.target.value)}\n              component={ReanderField}\n              type=\"text\"\n              readOnly={this.state.showMember}\n              label=\"Kode Customer\"\n              placeholder=\"Masukan Kode Customer\"\n            />\n          </div>\n          <div className=\"col-4\">\n            <Field\n              id=\"nama_customer\"\n              name=\"nama_customer\"\n              component={ReanderField}\n              type=\"text\"\n              label=\"Nama Customer\"\n              placeholder=\"Masukan Nama Customer\"\n            />\n          </div>\n          <div className=\"col-4\">\n          <Field\n              name=\"no_hp\"\n              component={ReanderField}\n              type=\"text\"\n              normalize={NumberOnly}\n              label=\"No Hp\"\n              placeholder=\"Masukan No Hp\"\n            />\n          </div>\n          <div className=\"col-4\">\n            <Field\n              name=\"alamat_customer\"\n              component={ReanderField}\n              type=\"textarea\"\n              label=\"Alamat Customer\"\n              placeholder=\"Masukan Alamat Customer\"\n            />\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-8\"></div>\n          <div className=\"col-4\">\n            <button\n              className=\"btn btn-primary btn-block\"\n              disabled={this.props.isLoadingDataCustomer}\n              type=\"submit\"\n            >\n              {this.props.isLoadingDataCustomer ? (\n                <>\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\n                  Menyimpan\n                </>\n              ) : (\n                \"Simpan Data\"\n              )}\n            </button>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nModalDataCustomer = reduxForm({\n  form: \"ModalDataCustomer\",\n  enableReinitialize: true,\n  validate: ValidasiFormDataMemberPenjualan,\n})(ModalDataCustomer);\nexport default connect(maptostate, null)(ModalDataCustomer);\n","import {\n  React,\n  Component,\n  connect,\n  Field,\n  createNumberMask,\n  formValueSelector,\n  reduxForm,\n  NumberOnly,\n  localStoragedecryp,\n  ReanderField,\n  ReanderSelect,\n  getTglSystem,\n} from \"../../../components/helpers/library\";\nimport { getDataSales } from \"../../../actions/datamaster_action\";\nimport ValidasiPembayaran from \"../../../Validasi/Penjualan/ValidasiPembayaran\";\n\nconst currencyMask = createNumberMask({\n  prefix: \"Rp. \",\n  locale: \"kr-KO\",\n});\nconst jenis_pembayaran = [\n  {\n    value: \"CASH\",\n    name: \"CASH\",\n  },\n  {\n    value: \"DEBET\",\n    name: \"DEBET\",\n  },\n  {\n    value: \"TRANSFER\",\n    name: \"TRANSFER\",\n  },\n  {\n    value : \"CREDIT\",\n    name: \"CREDIT\"\n  }\n];\nclass HeadInputPembayaran extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      type_pembayaran: \"CASH\",\n      lebih: false,\n      columns: [\n        // {\n        //   dataField: \"nama_bank\",\n        //   text: \"Nama Bank\",\n        //   footerAttrs: {\n        //     colSpan: \"2\",\n        //   },\n        //   footer: \"Grand Total\",\n        // },\n        {\n          dataField: \"type\",\n          text: \"Type\",\n          footerAttrs: {\n            colSpan: \"1\",\n          },\n          footer: \"Grand Total\",\n        },\n        {\n          dataField: \"Total\",\n          text: \"Total\",\n          footer: \"\",\n        },\n      ],\n    };\n    this.setStartDate = this.setStartDate.bind(this);\n  }\n  componentDidMount() {\n   \n    this.props.dispatch(getDataSales());\n    let data_barang_penjualan = JSON.parse(\n      localStoragedecryp(\"data_barang_services\")\n    );\n\n    let total = 0;\n    data_barang_penjualan.forEach((item, index) => {\n      // console.log(item.total);\n      total = total + item.total;\n      this.props.change(\"grand_total_pembayaran\", total);\n      this.props.change(\"harus_bayar_rp\", total);\n    });\n    this.props.change(\"jenis\", \"CASH\");\n    setTimeout(() => {\n      document.getElementById(\"cash_trx_penjualan\").focus();\n    }, 100);\n  }\n  hitungTotal() {\n    this.props.change(\"kembali\", this.props.kembali);\n    this.props.change(\"nominal_kembali\", this.props.nominal_kembali);\n\n  }\n\n  pilihPembyaran(e) {\n    if (e === \"CASH\") {\n      this.setState({\n        type_pembayaran: \"CASH\",\n      });\n    } else if (e === \"TRANSFER\") {\n      this.setState({\n        type_pembayaran: \"TRANSFER\",\n      });\n    } else if (e === \"DEBET\") {\n      this.setState({\n        type_pembayaran: \"DEBET\",\n      });\n    } else {\n      this.setState({\n        type_pembayaran: \"CREDIT\"\n      })\n    }\n    this.props.change(\"cash\", \"\");\n\n    // document.getElementById('cash_trx_penjualan').focus()\n  }\n  setStartDate(date) {\n    this.setState({\n      tgl_awal: new Date(date),\n    });\n  }\n\n  copyValue(e) {\n    this.props.change(\"cash\",parseInt(NumberOnly(e)))\n  }\n  render() {\n    return (\n      <form\n        onSubmit={this.props.handleSubmit}\n        onKeyPress={(e) => {\n          e.key === \"Enter\" && e.preventDefault();\n        }}\n        autoComplete=\"off\"\n      >\n        <div className=\"row\">\n          <div className=\"col-6\">\n            <Field\n              name=\"grand_total_pembayaran\"\n              component={ReanderField}\n              type=\"text\"\n              onChange={this.hitungTotal()}\n              readOnly={true}\n              {...currencyMask}\n              label=\"Total Harga Jual\"\n              placeholder=\"Total Harga Jual\"\n            />\n          </div>\n\n          <div className=\"col-6\">\n            <Field\n              id=\"harus_bayar_rp\"\n              name=\"harus_bayar_rp\"\n              component={ReanderField}\n              type=\"text\"\n              onChange={this.hitungTotal()}\n              readOnly={true}\n              {...currencyMask}\n              label=\"Harus Bayar Rp\"\n              placeholder=\"Harus Bayar Rp\"\n            />\n          </div>\n          <div className=\"col-6\">\n            <Field\n              name=\"jenis\"\n              label=\"Pilih Jenis Bayar\"\n              placeholder=\"Pilih Jenis Pembayaran\"\n              options={jenis_pembayaran}\n              onChange={(e) => this.pilihPembyaran(e)}\n              component={ReanderSelect}\n            />\n          </div>\n\n          <div\n            className=\"col-6\"\n            style={{\n              display:\n                this.state.type_pembayaran === \"CASH\"\n                  ? \"none\"\n                  : this.state.type_pembayaran === \"DEBET\"\n                  ? \"block\"\n                  : \"block\",\n            }}\n          >\n            <Field\n              tabIndex=\"1\"\n              name=\"nama_bank\"\n              id=\"nama_bank\"\n              component={ReanderField}\n              type=\"text\"\n              label=\"Bank\"\n              placeholder=\"Masukan Nama Bank\"\n            />\n          </div>\n          <div\n            className=\"col-6\"\n            style={{\n              display:\n                this.state.type_pembayaran === \"CASH\"\n                  ? \"none\"\n                  : this.state.type_pembayaran === \"DEBET\"\n                  ? \"none\"\n                  : \"block\",\n            }}\n          >\n            <Field\n              tabIndex=\"1\"\n              name=\"no_card\"\n              id=\"no_card\"\n              component={ReanderField}\n              type=\"text\"\n              label={this.state.type_pembayaran === \"TRANSFER\" ? \"No Rek\" : \"Card No\"}\n              placeholder={this.state.type_pembayaran === \"TRANSFER\" ? \"Masukan No Rek\" : \"Masukan Card No\"}\n            />\n          </div>\n          <div className=\"col-6\">\n            <Field\n              tabIndex=\"1\"\n              name=\"cash\"\n              id=\"cash_trx_penjualan\"\n              component={ReanderField}\n              type=\"text\"\n              label=\"Nominal\"\n              onChange={this.hitungTotal()}\n              {...currencyMask}\n              normalize={NumberOnly}\n              placeholder=\"Masukan Nominal\"\n            />\n          </div>\n          <div className=\"col-6\" \n          style={{\n              display:\n                this.state.type_pembayaran === \"CREDIT\"\n                  ? \"block\"\n                  : \"none\"\n            }}>\n            <Field\n              tabIndex=\"1\"\n              name=\"fee\"\n              id=\"fee\"\n              component={ReanderField}\n              type=\"text\"\n              label=\"Fee (%)\"\n              normalize={NumberOnly}\n              placeholder=\"5\"\n            />\n          </div>\n          <div className=\"col-6 d-none\">\n            <Field\n              tabIndex=\"1\"\n              name=\"nominal_kembali\"\n              component={ReanderField}\n              type=\"text\"\n              label=\"Nominal\"\n              placeholder=\"Masukan Nominal\"\n            />\n          </div>\n          <div className=\"col-6\">\n            <Field\n              name=\"kembali\"\n              id=\"sisa_bayar\"\n              component={ReanderField}\n              type=\"text\"\n              readOnly={true}\n              label=\"Sisa\"\n              onFocus={(e)=>this.copyValue(e.target.value)}\n              //   {...currencyMask}\n              // normalize={NumberOnly}\n              placeholder=\"Sisa Pembayaran\"\n            />\n          </div>\n\n          <div\n            className={\n              this.state.type_pembayaran === \"CASH\"\n                ? \"col-6 text-right\"\n                : this.state.type_pembayaran === \"TRANSFER\"\n                ? \"col-6 text-right\"\n                : \"col-12 text-right\"\n            }\n          >\n            <br />\n\n            <label>&nbsp;</label>\n            <button\n              tabIndex=\"2\"\n              disabled={this.props.notif}\n              className=\"btn btn-primary\"\n            >\n              {\" \"}\n              <i className=\"fa fa-plus\"></i>\n            </button>\n          </div>\n         \n        </div>\n      </form>\n    );\n  }\n}\n\nHeadInputPembayaran = reduxForm({\n  form: \"HeadInputPembayaran\",\n  enableReinitialize: true,\n  validate: ValidasiPembayaran,\n})(HeadInputPembayaran);\n\nconst selector = formValueSelector(\"HeadInputPembayaran\"); // <-- same as form name\n\nexport default connect((state) => {\n  const { cash,harus_bayar_rp } = selector(\n    state,\n    \"grand_total_pembayaran\",\n    \"harus_bayar_rp\",\n    \"cash\"\n  );\n  let data = JSON.parse(localStorage.getItem(\"trx_pemabayaran_services\")) || [];\n  let total = 0;\n  data.forEach((element) => {\n    total = element.nominal + total;\n  });\n  let hasil = parseFloat(total || 0) - parseFloat(harus_bayar_rp || 0);\n\n  // let verifikasi_pembayaran_lebih = ;\n  \n  return {\n    kembali: hasil.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\n    nominal_kembali : hasil + parseInt(cash),\n\n    initialValues: {\n      estimasi_pesanan: getTglSystem(),\n      // tgl_akhir: getTglSystem(),\n    },\n  };\n})(HeadInputPembayaran);\n","import {\n  React,\n  reduxForm,\n  Component,\n  connect,\n  getItem,\n  setItem,\n  Tabel,\n  Swal,\n  formatDate,\n  moment,\n  ToastNotification\n} from \"../../../components/helpers/library\";\n\nimport ValidasiPembayaran from \"../../../Validasi/Penjualan/ValidasiPembayaran\";\nimport HeadInputPembayaran from \"./HeadInputPembayaran\";\nimport Loading from 'react-fullscreen-loading';\n\n// data_barang_penjualan_tmp\n\n\nconst maptostate = (state) => {\n  let data_barang = getItem(\"data_barang_penjualan_tmp\") || [];\n  let status = \"PENJUALAN\";\n  data_barang.forEach((element) => {\n    if (element.no_titip_group === \"-\") {\n      status = \"PENJUALAN\";\n    } else {\n      status = \"TITIPAN\";\n    }\n  });\n  return {\n    status: status,\n  };\n};\nclass ModalPembayaran extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      type_pembayaran: \"CASH\",\n      columns: [\n        {\n          dataField: \"jenis\",\n          text: \"Jenis\",\n          footerAttrs: {\n            colSpan: \"2\",\n          },\n          footer: \"Grand Total\",\n        },\n        {\n          dataField: \"keterangan\",\n          text: \"Keterangan\",\n        },\n        {\n          dataField: \"nominal\",\n          text: \"Total\",\n          formatter: (cell) => {\n            return <span>{parseInt(cell).toLocaleString(\"kr-KO\")}</span>;\n          },\n          footer: (columnData) =>\n            parseInt(\n              columnData.reduce((acc, item) => acc + item, 0)\n            ).toLocaleString(\"kr-KO\"),\n        },\n        {\n          dataField: \"action\",\n          text: \"Action\",\n          csvExport: false,\n          headerClasses: \"text-center\",\n          formatter: (rowcontent, row, index) => {\n            return (\n              <div className=\"row text-center\">\n                <div className=\"col-12\">\n                  <button\n                    type=\"button\"\n                    disabled={row.keterangan === \"TITIPAN\" ? true : false}\n                    onClick={() => this.hapusdata(index)}\n                    className=\"btn btn-danger mr-3\"\n                  >\n                    <i className=\"fa fa-trash\"></i>\n                  </button>\n                </div>\n              </div>\n            );\n          },\n          footer: \"\",\n        },\n      ],\n    };\n  }\n  hapusdata(id) {\n    Swal.fire({\n      title: \"Anda Yakin !!\",\n      text: \"Ingin Menghapus Data Ini ?\",\n      icon: \"warning\",\n      position: \"top-center\",\n      cancelButtonText: \"Tidak\",\n      showCancelButton: true,\n      confirmButtonText: \"OK\",\n      showConfirmButton: true,\n    }).then((result) => {\n      // console.log(id);\n      if (result.isConfirmed) {\n        let data = getItem(\"trx_pemabayaran_services\");\n        data.splice(id, 1);\n        setItem(\"trx_pemabayaran_services\", data);\n        this.setState({\n          status: \"berhasil\",\n        });\n        // deleteLocalItemBarcode(\"data_barang_hancur_tmp\", id);\n        // this.props.dispatch(getListReturnSupplier());\n      }\n    });\n  }\n  simpanPembayaran(row) {\n    if(row.no_card === undefined && row.jenis !== \"CASH\" && row.jenis !== \"DEBET\"){\n      ToastNotification(\"info\", \"Nomor kartu tidak boleh kosong\");\n      return false;\n    }\n    if(row.nama_bank === undefined && row.jenis !== \"CASH\"){\n      ToastNotification(\"info\", \"Nama Bank tidak boleh kosong\");\n      return false;\n    }\n    if(row.cash === undefined || row.cash === \"0\"){\n      ToastNotification(\"info\", \"Nominal tidak boleh kosong\");\n      return false;\n    }\n    let datacek = {\n      total_transaksi : row.harus_bayar_rp,\n      sisa_bayar : row.nominal_kembali\n    }\n    setItem('sisa_bayar_services',datacek)\n    let data = JSON.parse(localStorage.getItem(\"trx_pemabayaran_services\")) || [];\n    if (row.jenis !== \"CASH\" && !data.length) {\n      if (row.kembali.replace(/[^0-9]/g, \"\") - row.cash < 0) {\n        ToastNotification(\"info\", \"Pembayaran tidak boleh lebih dari sisa\");\n        return false;\n      }\n    } else {\n      if(row.jenis !== \"CASH\"){\n      if (row.kembali.replace(/[^0-9]/g, \"\") - row.cash < 0 && parseInt(row.kembali) !== 0){\n        ToastNotification(\"info\", \"Pembayaran tidak boleh lebih dari sisa\");\n        return false;\n      } else {\n        if (data.reduce((a, b) => a + b.nominal, 0) >= row.harus_bayar_rp) {\n          ToastNotification(\"info\", \"Pembayaran Sudah Cukup\");\n          return false;\n        }\n        }\n      }\n    }\n   \n    setItem('estimasi_service', formatDate(moment(new Date(row.estimasi_service)).format(\"YYYY-MM-DD\")))\n\n\n    let cash = data.findIndex((hasil) => hasil.jenis === \"CASH\");\n    if (cash >= 0) {\n      if (row.kembali.replace(/[^0-9]/g, \"\") - row.cash < 0 && data.reduce((a, b) => a + b.nominal, 0) > row.harus_bayar_rp) {\n        ToastNotification(\"info\", \"Pembayaran Sudah Cukup\");\n        return false;\n      } else {\n        if (data.reduce((a, b) => a + b.nominal, 0) >= row.harus_bayar_rp) {\n          ToastNotification(\"info\", \"Pembayaran Sudah Cukup\");\n          return false;\n        }\n      }\n    }\n\n    \n    let index = data.findIndex((hasil) => hasil.jenis === row.jenis);\n    if (index === -1) {\n      let keterangan = \"\";\n      if (row.jenis === \"CASH\") {\n        keterangan = \"CASH\";\n      } else if (row.jenis === \"TRANSFER\") {\n        keterangan = row.no_card + \" - \" + row.nama_bank;\n      } else {\n        keterangan = row.nama_bank;\n      }\n      let hasil = {\n        jenis: row.jenis,\n        nominal: parseInt(row.cash),\n        nama_bank: row.nama_bank !== undefined ? row.nama_bank.toUpperCase() : \"-\",\n        fee : row.jenis === \"CREDIT\" ? row.fee || 0 : 0 ,\n        no_card: row.no_card || \"-\",\n        keterangan: keterangan.toUpperCase(),\n      };\n      data.push(hasil);\n      this.setState({\n        masuk: true,\n      });\n      setItem(\"trx_pemabayaran_services\", data);\n    } else {\n      let data_pembayaran = getItem(\"trx_pemabayaran_services\");\n      data_pembayaran = data_pembayaran.map((element2) => {\n        if (element2.jenis === row.jenis) {\n          element2.nominal += parseInt(row.cash);\n        }\n        return element2;\n      });\n      setItem(\"trx_pemabayaran_services\", data_pembayaran);\n      this.setState({\n        status: true,\n      });\n      // ToastNotification(\n      //   \"info\",\n      //   \"Pembayaran dengan \" + row.jenis + \" sudah ada\"\n      // );\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <HeadInputPembayaran onSubmit={(data) => this.simpanPembayaran(data)} />\n        <hr />\n        <form\n          onSubmit={this.props.handleSubmit}\n          onKeyPress={(e) => {\n            e.key === \"Enter\" && e.preventDefault();\n          }}\n          autoComplete=\"off\"\n        >\n          <Tabel\n            // handleClick={() => this.simpanpembbayaran()}\n            keyField=\"jenis\"\n            // tambahData={true}\n            // btnText=\"Tambah Pembyaran\"\n            exportCsv={false}\n            data={getItem(\"trx_pemabayaran_services\") || []}\n            columns={this.state.columns}\n            empty={true}\n            pagination=\"off\"\n            textEmpty=\"Data Pembayaran Kosong\"\n          />\n          <div className=\"row\">\n            <div className=\"col-6\">\n            \n            </div>\n            <div className=\"col-6 text-right\">\n              <button\n                className=\"btn btn-primary\"\n                disabled={this.props.isLoading}\n                onClick={() => this.props.bayarSekarang()}\n                type=\"button\"\n              >\n                {this.props.isLoading ? (\n                  <>\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\n                    Diproses\n                  </>\n                ) : (\n                  \"Bayar Sekarang\"\n                )}\n              </button>\n            </div>\n          </div>\n          {this.props.isLoading ? (\n        <Loading \n        loading\n        background=\"rgba(0, 0, 0, 0.35)\"\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\n      ) : null}\n        </form>\n      </>\n    );\n  }\n}\n\nModalPembayaran = reduxForm({\n  form: \"ModalPembayaran\",\n  enableReinitialize: true,\n  validate: ValidasiPembayaran,\n})(ModalPembayaran);\n\nexport default connect(maptostate)(ModalPembayaran);\n","const ValidasiTransaksiService = (value) => {\n    const errors = {};\n    if (!value.nama_barang) {\n        errors.nama_barang = \"Nama Barang Tidak Boleh Kosong\";\n    }\n    if (!value.berat) {\n        errors.berat = \"Berat Tidak Boleh Kosong\";\n    }\n    if (!value.ongkos) {\n        errors.ongkos = \"Ongkos Tidak Boleh Kosong\";\n    }\n\n    return errors;\n}\n\nexport default ValidasiTransaksiService;\n\n\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Field, formValueSelector, reduxForm } from \"redux-form\";\nimport { createNumberMask } from \"redux-form-input-masks\";\nimport { getDataSales } from \"../../../actions/datamaster_action\";\nimport { ReanderField } from \"../../../components/helpers/field\";\nimport { ToastNotification } from \"../../../components/helpers/notification\";\nimport { getData } from \"../../../config/axios\";\nimport { Gramasi } from \"../../../Validasi/normalize\";\nimport ValidasiTransaksiService from \"../../../Validasi/Services/ValidasiTransaksiService\";\nconst currencyMask = createNumberMask({\n  prefix: \"Rp. \",\n  locale: \"kr-KO\",\n});\n\nclass ModalTambahBarang extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      harga_jual: true,\n      berat_jual: true,\n      hargapergram: true,\n      ongkos: true,\n      total: true,\n    };\n  }\n  componentDidMount() {\n    this.props.dispatch(getDataSales());\n    setTimeout(() => {\n      document.getElementById('nama_barang').focus()\n    }, 100);\n  }\n  getBarcode(e) {\n    let cek =\n      JSON.parse(localStorage.getItem(\"data_barang_penjualan_tmp\")) || [];\n    let hasil_cek = cek.findIndex((hasil) => hasil.kode_barcode === e);\n    if (hasil_cek === -1) {\n      getData(\"barang/get/by-kode-barcode/\" + e)\n        .then((res) => {\n          if (res.data.length === 0) {\n            ToastNotification(\"info\", \"Data Yang Dicari Tidak Ada\");\n            this.props.change(\"nama_barang\", \"\");\n            this.props.change(\"nama_atribut\", \"\");\n            this.props.change(\"berat_atribut\", \"\");\n            this.props.change(\"harga_atribut\", \"\");\n            this.props.change(\"berat\", \"\");\n          } else {\n            res.data.forEach((list, index) => {\n              this.props.change(\"nama_barang\", list.nama_barang);\n              this.props.change(\"nama_atribut\", list.nama_atribut);\n              this.props.change(\"berat_atribut\", list.berat_atribut);\n              this.props.change(\"harga_atribut\", list.harga_atribut);\n              this.props.change(\"berat\", list.berat);\n              this.setState({\n                harga_jual: false,\n                berat_jual: false,\n                hargapergram: false,\n                ongkos: false,\n              });\n            });\n          }\n        })\n        .catch((err) => {\n          ToastNotification(\"info\", \"Data Yang Dicari Tidak Ada\");\n        });\n    } else {\n      ToastNotification(\"info\", \"Barang Sudah Ada Di Tabel\");\n    }\n  }\n  hitungTotal() {\n    this.props.change(\"total\", this.props.total);\n  }\n  render() {\n    return (\n      <form\n        onSubmit={this.props.handleSubmit}\n        onKeyPress={(e) => {\n          e.key === \"Enter\" && e.preventDefault();\n        }}\n        autoComplete=\"off\"\n      >\n        <div className=\"row\">\n          <div className=\"col-12 col-md-6\">\n            <Field\n              tabIndex=\"1\"\n              id=\"nama_barang\"\n              name=\"nama_barang\"\n              label=\"Nama Barang\"\n              type=\"text\"\n              placeholder=\"Masukan Nama Barang\"\n              component={ReanderField}\n            />\n          </div>\n          <div className=\"col-12 col-md-6\">\n            <Field\n              tabIndex=\"2\"\n              name=\"berat\"\n              label=\"Berat Barang\"\n              onChange={this.hitungTotal()}\n              type=\"text\"\n              normalize={Gramasi}\n              placeholder=\"Masukan Berat Barang\"\n              component={ReanderField}\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12 col-md-6\">\n            <Field\n              tabIndex=\"3\"\n              name=\"jumlah\"\n              label=\"Jumlah\"\n              type=\"number\"\n              readOnly={true}\n              defaultValue=\"1\"\n              onChange={this.hitungTotal()}\n              placeholder=\"Masukan Jumlah\"\n              component={ReanderField}\n            />\n          </div>\n          <div className=\"col-12 col-md-6\">\n            <Field\n              tabIndex=\"4\"\n              name=\"ongkos\"\n              label=\"Ongkos\"\n              type=\"telp\"\n              {...currencyMask}\n              placeholder=\"Masukan Ongkos\"\n              component={ReanderField}\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12 col-md-12\">\n            <Field\n              name=\"total\"\n              label=\"Total\"\n              type=\"telp\"\n              readOnly={true}\n              placeholder=\"Masukan Total\"\n              component={ReanderField}\n              {...currencyMask}\n            />\n          </div>\n          \n          <div className=\"col-12 col-md-12\">\n            <Field\n              tabIndex=\"5\"\n              name=\"deskripsi\"\n              label=\"Deskripsi\"\n              type=\"textarea\"\n              placeholder=\"Masukan Deskripsi\"\n              component={ReanderField}\n            />\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-6\"></div>\n          <div className=\"col-6\">\n            <button\n              tabIndex=\"6\"\n              className=\"btn btn-primary btn-block\"\n              disabled={this.props.submitting}\n              type=\"submit\"\n            >\n              {this.props.isLoading ? (\n                <>\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\n                  Menyimpan\n                </>\n              ) : (\n                \"Simpan Data\"\n              )}\n            </button>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\n// ModalTambahBarang = reduxForm({\n//   form: \"ModalTambahBarang\",\n//   enableReinitialize: true,\n//   validate: ValidasiMasterDataHadiah,\n// })(ModalTambahBarang);\n// export default connect(maptostate, null)(ModalTambahBarang);\n\nModalTambahBarang = reduxForm({\n  form: \"ModalTambahBarang\",\n  enableReinitialize: true,\n  validate: ValidasiTransaksiService,\n})(ModalTambahBarang);\n\nexport default connect((state) => {\n  const selector = formValueSelector(\"ModalTambahBarang\"); // <-- same as form name\n  const { ongkos, jumlah } = selector(\n    state,\n    \"ongkos\",\n    \"jumlah\"\n  );\n  return {\n    initialValues : {\n      jumlah : '1'\n    },\n    total: parseFloat(ongkos || 0) * parseFloat(jumlah || 0) || 0,\n    DataSales: state.datamaster.getDataSales,\n  };\n})(ModalTambahBarang);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm, reset } from \"redux-form\";\nimport {\n  getDataSales,\n  hideModal,\n  showModal,\n} from \"../../../actions/datamaster_action\";\nimport { setTransaksiServices } from \"../../../actions/services_action\";\nimport { getItem } from \"../../../components/helpers/function\";\nimport ModalGlobal from \"../../../components/helpers/ModalGlobal\";\nimport { ToastNotification } from \"../../../components/helpers/notification\";\nimport Tabel from \"../../../components/helpers/tabel\";\nimport { Panel } from \"../../../components/panel/panel\";\nimport { getData, postData } from \"../../../config/axios\";\nimport ValidasiDataUsers from \"../../../Validasi/ManageUsers/ValidasiDataUsers\";\n// import { NumberOnly } from \"../../../Validasi/normalize\";\nimport ModalDataCustomer from \"./ModalDataCustomer\";\nimport ModalPembayaran from \"./ModalPembayaran\";\nimport ModalTambahBarang from \"./ModalTambahBarang\";\nconst maptostate = (state) => {\n  return {\n    setTransaksiServices: state.services.setTransaksiServices,\n    DataSales: state.datamaster.getDataSales,\n    hideModal: state.datamaster.modalDialog,\n  };\n};\n\nclass HeadServices extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      isLoadingBatal: false,\n      isLoadingDataCustomer: false,\n      FormModal: \"\",\n    };\n  }\n  componentDidMount() {\n    this.props.dispatch(getDataSales());\n  }\n  getBarcode(e) {\n    getData(\"barang/get/by-kode-barcode/\" + e)\n      .then((res) => {\n        if (res.data.length === 0) {\n          ToastNotification(\"info\", \"Data Yang Dicari Tidak Ada\");\n          this.props.change(\"nama_barang\", \"\");\n          this.props.change(\"nama_atribut\", \"\");\n          this.props.change(\"berat_atribut\", \"\");\n          this.props.change(\"harga_atribut\", \"\");\n        } else {\n          // console.log(res.data);\n          res.data.forEach((list, index) => {\n            this.props.change(\"nama_barang\", list.nama_barang);\n            this.props.change(\"nama_atribut\", list.nama_atribut);\n            this.props.change(\"berat_atribut\", list.berat_atribut);\n            this.props.change(\"harga_atribut\", list.harga_atribut);\n          });\n        }\n      })\n      .catch((err) => {\n        ToastNotification(\"info\", \"Data Yang Dicari Tidak Ada\");\n      });\n  }\n\n  handleSubmit(data) {\n    let hasil = {\n      alamat_customer: data.alamat_customer || \"-\",\n      jenis_pelanggan: data.jenis_pelanggan || \"NONMEMBER\",\n      kode_customer: data.jenis_pelanggan === \"NONMEMBER\" ? \"NONMEMBER\" : data.kode_customer,\n      kode_sales: data.kode_sales,\n      nama_customer: data.nama_customer || \"REGULER\",\n      no_hp: data.no_hp || \"-\"\n    }\n    this.setState({\n      isLoadingDataCustomer: true,\n    });\n    localStorage.setItem(\"data_customer_services_tmp\", JSON.stringify(hasil));\n    setTimeout(() => {\n      this.setState({\n        isLoadingDataCustomer: false,\n      });\n      this.props.dispatch(hideModal());\n    }, 500);\n  }\n  simpanBarang(data) {\n    data = {\n      nama_barang: data.nama_barang.toUpperCase() || \"-\",\n      berat: parseFloat(data.berat) || 0,\n      jumlah: parseFloat(data.jumlah) || 0,\n      ongkos: parseInt(data.ongkos) || 0,\n      total: parseInt(data.total) || 0,\n      deskripsi: data.deskripsi === undefined ? data.nama_barang.toUpperCase() : data.deskripsi.toUpperCase() || \"-\",\n    };\n    let cek = JSON.parse(localStorage.getItem(\"data_barang_services\")) || [];\n    this.props.dispatch(reset(\"ModalTambahBarang\"));\n    document.getElementById(\"nama_barang\").focus();\n    cek.push(data);\n    localStorage.setItem(\"data_barang_services\", JSON.stringify(cek));\n    this.props.dispatch(setTransaksiServices(cek));\n    this.props.dispatch(hideModal());\n    ToastNotification(\"success\", \"Barang Berhasil Ditambahkan\");\n    this.props.change(\"nama_barang\", \"\");\n  }\n\n  bayarSekarang(data) {\n    if(getItem(\"trx_pemabayaran_services\").length <= 0){\n      ToastNotification(\"info\", \"Mohon Tambahkan metode pembayaran minimal 1..\");\n      return false\n    }\n    this.setState({\n      isLoading: true,\n    });\n    // let data_pembayaran = {\n    //   jenis: data.jenis,\n    //   jumlah_rp: parseInt(data.cash) > parseInt(data.grand_total_pembayaran) ? Math.abs(parseInt(data.cash) - parseInt(NumberOnly(data.kembali))) : parseInt(data.cash),\n    // };\n\n    let pembayaran = getItem(\"trx_pemabayaran_services\");\n    \n\n    let data_pembayaran = [];\n    let total_pembayarn = 0;\n    let jumlah_rp = 0;\n    pembayaran.forEach((element) => {\n      if (element.jenis === \"CASH\") {\n        if (parseInt(element.nominal) <= Math.abs(parseInt(getItem(\"sisa_bayar_services\").sisa_bayar))) {\n          jumlah_rp = Math.abs(parseInt(getItem(\"sisa_bayar_services\").sisa_bayar) - parseInt(element.nominal));\n        } else {\n          jumlah_rp = parseInt(element.nominal);\n        }\n        if (parseInt(element.nominal) >= Math.abs(parseInt(getItem(\"sisa_bayar_services\").total_transaksi))) {\n          jumlah_rp = parseInt(element.nominal) - Math.abs(parseInt(getItem(\"sisa_bayar_services\").sisa_bayar));\n        } else {\n          jumlah_rp = parseInt(element.nominal);\n        }\n      } else {\n        jumlah_rp = parseInt(element.nominal);\n      }\n      let row = {\n        jenis: element.jenis,\n        keterangan: element.keterangan,\n        fee: element.jenis === \"CREDIT\" ? parseInt(element.fee) || 0 : 0,\n        jumlah_rp : jumlah_rp\n        // jumlah_rp: parseInt(element.nominal) >= parseInt(getItem('sisa_bayar_services').total_transaksi) && element.jenis ===\"CASH\" ? parseInt(element.nominal) - parseInt(getItem('sisa_bayar_services').sisa_bayar) : parseInt(element.nominal) > parseInt(getItem('sisa_bayar_services').sisa_bayar) && element.jenis ===\"CASH\" ? parseInt(element.nominal) - parseInt(getItem('sisa_bayar_services').sisa_bayar) : parseInt(element.nominal),\n        // jumlah_rp: element.jenis === \"CASH\" ? parseInt(element.nominal) - parseInt(getItem('sisa_bayar_services').sisa_bayar) : parseInt(element.nominal),\n        // jumlah_rp: element.nominal >= parseInt(getItem('sisa_bayar_services').total_transaksi) ? parseInt(element.nominal) - parseInt(getItem('sisa_bayar_services').sisa_bayar) : parseInt(element.nominal),\n        \n      };\n      // console.log(parseInt(element.nominal));\n      // console.log(parseInt(getItem('sisa_bayar_services').total_transaksi));\n      total_pembayarn = element.nominal + total_pembayarn;\n      data_pembayaran.push(row);\n    });\n     \n  \n    let data_customer = JSON.parse(\n      localStorage.getItem(\"data_customer_services_tmp\")\n    );\n    let data_barang_penjualan = JSON.parse(\n      localStorage.getItem(\"data_barang_services\")\n    );\n\n    let detail_barang = [];\n    data_barang_penjualan.forEach((item, index) => {\n      let row = {\n        nama_barang: item.nama_barang,\n        berat: item.berat,\n        jumlah: item.jumlah,\n        ongkos: item.ongkos,\n        total_rp: item.total_rp,\n        deskripsi: item.deskripsi,\n      };\n      detail_barang.push(row);\n    });\n    let data_services = {\n      kode_sales: data_customer.kode_sales,\n      nama_customer: data_customer.nama_customer,\n      kode_member:\n        data_customer.jenis_pelanggan === \"NONMEMBER\"\n          ? data_customer.jenis_pelanggan\n          : data_customer.kode_customer,\n      alamat_customer: data_customer.alamat_customer,\n      no_hp: data_customer.no_hp,\n      total: parseInt(getItem('sisa_bayar_services').total_transaksi),\n      dp_rp: parseInt(total_pembayarn) < parseInt(getItem('sisa_bayar_services').total_transaksi) ? parseInt(total_pembayarn) : parseInt(total_pembayarn) >= parseInt(getItem('sisa_bayar_services').total_transaksi) ? parseInt(getItem('sisa_bayar_services').total_transaksi) : 0,\n      // dp_rp: parseInt(data.cash) > parseInt(data.grand_total_pembayaran) ? Math.abs(parseInt(data.cash) - parseInt(NumberOnly(data.kembali))) : parseInt(data.cash),\n      detail_barang: detail_barang,\n      pembayaran: data_pembayaran,\n    };\n    // return false\n    postData(\"service/simpan\", data_services)\n      .then((res) => {\n        this.setState({\n          isLoading: false,\n        });\n        ToastNotification(\"success\", \"Transksi Service Berhasil\");\nlet notaservices = [];\nfor (let index = 0; index < 2; index++) {\nlet feedback = \"\";\nres.data.forEach((row, index) => {\nlet jml_alamat = row.n_alamat_customer.length;\nfeedback += `========================================\\n`;\nfeedback += `             NOTA SERVICE               \\n`;\nfeedback += `========================================\nTanggal          : ${row.tgl_system}\nKode Sales       : ${row.kode_sales}\nNama Customer    : ${row.nama_customer}\nNo Hp            : ${row.no_hp}\nAlamat Customer  : ${row.n_alamat_customer.slice(0, 20)}\nTotal Service    : ${row.total_service.toLocaleString(\"kr-KO\")}\n`;\nif (jml_alamat > 20) {\nfeedback += `      ${row.n_alamat_customer.slice(20,40)}\n`;\n}\nif (jml_alamat > 40) {\nfeedback += `      ${row.n_alamat_customer.slice(40,60)}\n`;\n}\nfeedback += `========================================\\n`;\nfeedback += `Keterangan\\n`;\nfeedback += `========================================\\n`;\nlet ongkos = 0;\nlet harga_nota = 0;\nrow.detail_barang.forEach((detail, index) => {\nongkos = ongkos + detail.ongkos;\nlet jml_des = detail.deskripsi.length;\nharga_nota = harga_nota + detail.harga_nota;\nfeedback += `Nama Barang      : ${detail.nama_barang}\\n`;\nfeedback += `Berat            : ${detail.berat.toFixed(3)}\\n`;\nfeedback += `Jumlah           : ${detail.jumlah.toLocaleString(\"kr-KO\")}\\n`;\nfeedback += `Ongkos           : ${detail.ongkos.toLocaleString(\"kr-KO\")}\\n`;\nfeedback += `deskripsi        : ${detail.deskripsi.slice(0,20)}\\n`;\nif (jml_des > 20) {\nfeedback += `                   ${row.deskripsi.slice(20, 40)}`;\n}\nif (jml_des > 40) {\nfeedback += `                   ${row.deskripsi.slice(40, 60)}`;\n}\nfeedback += `========================================\\n`;\n});\nfeedback += `Total Ongkos     : ${ongkos.toLocaleString(\"kr-KO\")}\\n`;\nfeedback += `========================================\\n`;\nfeedback += `                               TTD      \\n`\nfeedback += `                                        \\n`\nfeedback += `                                        \\n`\nfeedback += `                                        \\n`\nfeedback += `                         (             )\\n`\nfeedback += `                                        \\n`\nfeedback += `                                        \\n`\nfeedback += `                                        \\n`\n  \n}\n);\nnotaservices.push(feedback);\n}\n\ndocument.getElementById(\"myInput\").value = notaservices.join(\"\");\n}).then(() => {\n  const element = document.createElement(\"a\");\n  const file = new Blob([document.getElementById(\"myInput\").value], {\n    type: \"text/plain;charset=utf-8\",\n  });\n  element.href = URL.createObjectURL(file);\n  element.download = \"autoprint_service.txt\";\n  document.body.appendChild(element);\n  element.click();\n}).then(() => {\n        this.props.dispatch(hideModal());\n      })\n      .then(() => {\n        this.props.dispatch(reset(\"ModalPembayaran\"));\n      })\n      .then(() => {\n        localStorage.setItem(\"data_customer_services_tmp\", JSON.stringify([]));\n        localStorage.setItem(\"data_barang_services\", JSON.stringify([]));\n        localStorage.setItem(\"sisa_bayar_services\", JSON.stringify([]));\n        localStorage.setItem(\"trx_pemabayaran_services\", JSON.stringify([]));\n        this.setState({\n          isLoading: false,\n        });\n      })\n      .then(() => {\n        this.props.dispatch(setTransaksiServices([]));\n      })\n      .catch((err) => this.errorhandling(err));\n    // localStorage.setItem(\"tmp_pembayaran_transaksi_penjualan\",JSON.stringify(hasil));\n  }\n\n  errorhandling(error) {\n    console.log(error);\n    this.setState({\n      isLoading: false,\n    });\n    ToastNotification(\"info\", \"Transaksi Gagal Disimpan\");\n  }\n  ShowModalBarang() {\n    this.props.dispatch(showModal());\n    this.setState({ FormModal: \"ShowModalBarang\" });\n  }\n  ShowModalCustomer() {\n    this.setState({ FormModal: \"ShowModalCustomer\" });\n    this.props.dispatch(showModal());\n  }\n  showModalPembayaran() {\n    // document.getElementById('jenis_pembayaran').focus();\n    let customer =\n      JSON.parse(localStorage.getItem(\"data_customer_services_tmp\")) || [];\n    let barang = JSON.parse(localStorage.getItem(\"data_barang_services\")) || [];\n    if (customer.length === 0 || barang.length === 0) {\n      ToastNotification(\n        \"info\",\n        \"Data Customer Atau Data Barang Belum Diisi !!!\"\n      );\n    } else {\n      this.setState({ FormModal: \"ShowModalPembayaran\" });\n      this.props.dispatch(showModal());\n    }\n  }\n  batalServices() {\n    this.setState({\n      isLoadingBatal: true,\n    });\n    setTimeout(() => {\n      localStorage.setItem(\"data_customer_services_tmp\", JSON.stringify([]));\n      this.props.dispatch(setTransaksiServices([]));\n      localStorage.setItem(\"data_barang_services\", JSON.stringify([]));\n      this.setState({\n        isLoadingBatal: false,\n      });\n    }, 500);\n  }\n  render() {\n    return (\n      <Panel>\n          <textarea\n            style={{ display: \"none\" }}\n            id=\"myInput\"\n            rows=\"100\"\n            cols=\"100\"\n          />\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <Tabel\n              keyField=\"nama_barang\"\n              exportCsv={false}\n              data={\n                this.props.setTransaksiServices.length === 0\n                  ? JSON.parse(localStorage.getItem(\"data_barang_services\")) ||\n                    []\n                  : this.props.setTransaksiServices || []\n              }\n              tambahData={true}\n              btnText=\"Tambah Data Customer\"\n              columns={this.props.columns}\n              btnOptional={true}\n              namaCustomer={true}\n              jenisCustomer={true}\n              form=\"Service\"\n              btnTextOptional=\"Tambah Data Barang\"\n              handleClick={() => this.ShowModalCustomer()}\n              handleClickOptional={() => this.ShowModalBarang()}\n              empty={true}\n              textEmpty=\"Data Barang Kosong\"\n            />\n          </div>\n        </div>\n\n        <ModalGlobal\n          size={this.state.FormModal ===\"ShowModalCustomer\" ? \"xl\" : this.state.FormModal === \"ShowModalBarang\" ? \"L\" : \"P\"}\n          title={<TitleModal state={this.state.FormModal} />}\n          content={\n            this.state.FormModal === \"ShowModalCustomer\" ? (\n              <ModalDataCustomer\n                isLoadingDataCustomer={this.state.isLoadingDataCustomer}\n                onSubmit={(data) => this.handleSubmit(data)}\n              />\n            ) : this.state.FormModal === \"ShowModalBarang\" ? (\n              <ModalTambahBarang onSubmit={(data) => this.simpanBarang(data)} />\n            ) : (\n              <ModalPembayaran\n                isLoading={this.state.isLoading}\n                bayarSekarang={(data) => this.bayarSekarang(data)}\n\n              />\n            )\n          }\n        />\n        <div className=\"row\">\n          <div className=\"col-4\">\n            <button\n              onClick={() => this.showModalPembayaran()}\n              className=\"btn btn-primary\"\n              disabled={this.props.isLoading}\n              type=\"submit\"\n            >\n              {this.props.isLoading ? (\n                <>\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\n                  Menyimpan\n                </>\n              ) : (\n                \"Simpan Data Services\"\n              )}\n            </button>\n            &nbsp;\n            <button\n              onClick={() => this.batalServices()}\n              className=\"btn btn-warning\"\n              disabled={this.state.isLoadingBatal}\n              type=\"button\"\n            >\n              {this.state.isLoadingBatal ? (\n                <>\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Reset\n                </>\n              ) : (\n                \"Reset\"\n              )}\n            </button>\n          </div>\n        </div>\n      </Panel>\n    );\n  }\n}\n\nfunction TitleModal(data, onSubmit) {\n  // console.log(state.state);\n  if (data.state === \"ShowModalCustomer\") {\n    return \"Form Data Customer\";\n  } else if (data.state === \"ShowModalBarang\") {\n    return \"Form Data Barang\";\n  } else {\n    return \"Form Pembayaran\";\n  }\n}\n\nHeadServices = reduxForm({\n  form: \"HeadServices\",\n  enableReinitialize: true,\n  validate: ValidasiDataUsers,\n})(HeadServices);\nexport default connect(maptostate, null)(HeadServices);\n\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\nimport { setTransaksiServices } from \"../../../actions/services_action.jsx\";\nimport { Panel, PanelHeader } from \"../../../components/panel/panel.jsx\";\nimport HeadServices from \"./HeadServices.jsx\";\nconst maptostate = (state) => {\n    return {\n      dataservices: state.services.setTransaksiServices,\n    };\n  };\nclass FormTransaksiServces extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      columns: [\n        {\n          dataField: \"nama_barang\",\n          text: \"Nama Barang\",\n        footer: \"Total\"\n        },\n\n        {\n          dataField: \"berat\",\n          text: \"Berat\",\n          footer: (columnData) =>\n            columnData.reduce((acc, item) => acc + item, 0).toFixed(1),\n        },\n        {\n          dataField: \"jumlah\",\n          text: \"Jumlah\",\n          formatter: (cell) => {\n            return <span>{parseInt(cell).toLocaleString(\"kr-KO\")}</span>;\n          },\n          footer: (columnData) =>\n            parseInt(\n              columnData.reduce((acc, item) => acc + item, 0)\n            ).toLocaleString(\"kr-KO\"),\n        },\n        {\n          dataField: \"ongkos\",\n          text: \"Ongkos\",\n          formatter: (cell) => {\n            return <span>{parseInt(cell).toLocaleString(\"kr-KO\")}</span>;\n          },\n          footer: (columnData) =>\n            parseInt(\n              columnData.reduce((acc, item) => acc + item, 0)\n            ).toLocaleString(\"kr-KO\"),\n        },\n        {\n          dataField: \"total\",\n          text: \"Total Rp\",\n          formatter: (cell) => {\n            return <span>{parseInt(cell).toLocaleString(\"kr-KO\")}</span>;\n          },\n          footer: (columnData) =>\n            parseInt(\n              columnData.reduce((acc, item) => acc + item, 0)\n            ).toLocaleString(\"kr-KO\"),\n        },\n        {\n          dataField: \"deskripsi\",\n          text: \"Deskripsi\",\n          footer: \"\",\n        },\n        {\n          dataField: \"action\",\n          text: \"Action\",\n          csvExport: false,\n          headerClasses: \"text-center\",\n          formatter: (rowcontent, row, index) => {\n             \n            return (\n              <div className=\"row text-center\">\n                <div className=\"col-12\">\n                  <button\n                    type=\"button\"\n                    onClick={() => this.hapusdata(index)}\n                    className=\"btn btn-danger mr-3\"\n                  >\n                    <i className=\"fa fa-trash\"></i>\n                  </button>\n                </div>\n              </div>\n            );\n          },\n          footer: \"\",\n        },\n      ],\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n\n  hapusdata(id) {\n    Swal.fire({\n      title: \"Anda Yakin !!\",\n      text: \"Ingin Menghapus Data Ini ?\",\n      icon: \"warning\",\n      position: \"top-center\",\n      cancelButtonText: \"Tidak\",\n      showCancelButton: true,\n      confirmButtonText: \"OK\",\n      showConfirmButton: true,\n    }).then((result) => {\n      // console.log(id);\n      if (result.isConfirmed) {\n        let data = JSON.parse(\n          localStorage.getItem(\"data_barang_services\")\n        );\n        data.splice(id, 1);\n        localStorage.setItem(\"data_barang_services\", JSON.stringify(data));\n        this.props.dispatch(setTransaksiServices(data));\n        // deleteLocalItemBarcode(\"data_barang_hancur_tmp\", id);\n        // this.props.dispatch(getListReturnSupplier());\n        this.setState({\n          berhasil : true,\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    localStorage.setItem(\"data_customer_services_tmp\", JSON.stringify([]));\n    localStorage.setItem(\"data_barang_services\", JSON.stringify([]));\n  }\n\n  handleSubmit(data) {}\n\n    render() {\n    return (\n      <div>\n        <ol className=\"breadcrumb float-xl-right\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"#\">Services</Link>\n          </li>\n          <li className=\"breadcrumb-item active\">Transaksi Services</li>\n        </ol>\n        <h1 className=\"page-header\">Transaksi Services </h1>\n        <Panel>\n          <PanelHeader>Transaksi Services</PanelHeader>\n          <br />\n          {/* Transaksi Services */}\n          <div className=\"container\">\n            <HeadServices\n              isLoading={this.state.isLoading}\n              columns={this.state.columns}\n            />\n          </div>\n          <br />\n          {/* End Tambah Transaksi Services  */}\n        </Panel>\n      </div>\n    );\n  }\n}\n\nexport default connect(maptostate,null)(FormTransaksiServces);","const ValidasiPembayaran = (value) => {\n    const errors = {};\n    if (!value.jenis) {\n        errors.jenis = \"Jenis Tidak Boleh Kosong\";\n    }\n    // if (!value.cash) {\n    //     errors.cash = \"Nominal Tidak Boleh Kosong\";\n    // }\n\n    return errors;\n}\n\nexport default ValidasiPembayaran;\n\n\n","const ValidasiDataUsers = (value) => {\n    const errors = {};\n    if (!value.user_id) {\n        errors.user_id = \"User Id Tidak Boleh Kosong\";\n    }\n    if (!value.user_name) {\n        errors.user_name = \"Username Tidak Boleh Kosong\";\n    }\n\n    if (!value.level) {\n        errors.level = \"Level Harus Dipilih \";\n    }\n    // if (!value.password) {\n    //     errors.password = \"Hassword Harus Diisi \";\n    // }\n    // if (!value.retype_password) {\n    //     errors.retype_password = \"Retype Password Harus Diisi \";\n    // }\n\n    return errors;\n}\n\nexport default ValidasiDataUsers;\n\n\n","const ValidasiFormDataMemberPenjualan = (value) => {\n    const errors = {};\n    if (!value.kode_sales) {\n        errors.kode_sales = \"Kode Sales Harus Dipilih\";\n    }\n    if (!value.nama_customer) {\n        errors.nama_customer = \"Nama Customer Harus Diisi\";\n    }\n    if (!value.no_hp) {\n        errors.no_hp = \"No Hp Harus Diisi\";\n    }\n    if (!value.alamat) {\n        errors.alamat = \"Alamat Harus Diisi\";\n    }\n\n    return errors;\n}\n\nexport default ValidasiFormDataMemberPenjualan;\n\n\n"],"sourceRoot":""}