{"version":3,"sources":["pages/Laporan/LaporanService/LaporanBatalService/exel/LaporanBatalServiceExel.jsx","pages/Laporan/LaporanService/LaporanBatalService/pdf/LaporanBatalServicePdf.jsx","pages/Laporan/LaporanService/LaporanBatalService/HeadFormBatalService.jsx","pages/Laporan/LaporanService/LaporanBatalService/FormLaporanBatalService.jsx"],"names":["LaporanBatalServiceExel","props","_this","Object","classCallCheck","this","_super","call","state","react_default","a","createElement","Fragment","react_html_table_to_excel_default","id","className","table","filename","sheet","buttonText","style","display","colSpan","textAlign","localStoragedecryp","length","JSON","parse","tgl_awal","tgl_akhir","getUserdata","nama_toko","alamat_toko","backgroundColor","color","data","map","row","index","key","no_faktur_service","tgl_system","nama_customer","alamat_customer","kode_sales","detail_barang","deskripsi","berat","toFixed","ongkos","toLocaleString","Component","LaporanBatalServicePdf","tableColumn","arguments","undefined","doc","jsPDF","tableRows","finalY","setFontSize","text","jml_alamat","slice","setProperties","title","concat","content","styles","halign","total","forEach","item","rows","parseInt","push","footer","fillColor","textColor","printed","user_id","getToday","fontStyle","autoTable","head","body","startY","theme","rowPageBreak","margin","top","footStyles","fontSize","bodyStyles","headStyles","tableLineColor","tableLineWidth","autoTableEndPosY","pages","internal","getNumberOfPages","pageWidth","pageSize","width","pageHeight","height","j","horizontalPos","verticalPos","setPage","align","save","HeadFormBatalService","date","Date","columns","dataField","footerAttrs","cell","num","dataservices","headerClasses","formatter","setStartDate","bind","assertThisInitialized","setLastDate","setState","_this2","onSubmit","handleSubmit","autoComplete","Field","name","component","InputDate","label","type","selected","onChange","placeholder","value","isLoading","tabel","keyField","export","empty","textEmpty","htmlFor","onClick","exportPdf","exel_LaporanBatalServiceExel","loading_default","loading","background","loaderColor","reduxForm","form","enableReinitialize","connect","initialValues","getTglSystem","FormLaporanBatalService","data_post","formatDate","moment","format","postDataNoTImeOut","then","res","ToastNotification","localStorageencryp","stringify","catch","err","_this3","react_router_dom","to","panel","LaporanBatalService_HeadFormBatalService","React"],"mappings":"gQAgJeA,oDAzIb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAI,EAAAC,KAAAF,KAAMJ,IACDO,MAAQ,GAFIN,uDAKjB,OACEO,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CACEI,GAAG,wBACHC,UAAU,4BACVC,MAAM,eACNC,SAAS,wBACTC,MAAM,wBACNC,WAAW,gBAEbV,EAAAC,EAAAC,cAAA,SAAOG,GAAG,eAAeM,MAAO,CAAEC,QAAS,SACzCZ,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIW,QAAQ,IAAIF,MAAO,CAAEG,UAAW,WACjC,IADH,wBAEwB,MAG1Bd,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIW,QAAQ,KAAZ,cAEFb,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIW,QAAQ,KACT,IAC6C,IAA7CE,YAAmB,eAAeC,OAC/B,KACAC,KAAKC,MAAMH,YAAmB,gBAAgBI,SAC9C,QACAF,KAAKC,MAAMH,YAAmB,gBAC3BK,UAAW,MAGtBpB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIW,QAAQ,KAAZ,WAAyBQ,cAAcC,UAAvC,MAGFtB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIW,QAAQ,KAAZ,aAA2BQ,cAAcE,YAAzC,MAEFvB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIS,MAAO,CAAEa,gBAAiB,UAAWC,MAAO,SAAhD,cAGAzB,EAAAC,EAAAC,cAAA,MAAIS,MAAO,CAAEa,gBAAiB,UAAWC,MAAO,SAAhD,iBAGAzB,EAAAC,EAAAC,cAAA,MAAIS,MAAO,CAAEa,gBAAiB,UAAWC,MAAO,SAAhD,gBAGAzB,EAAAC,EAAAC,cAAA,MACES,MAAO,CACLa,gBAAiB,UACjBC,MAAO,OACPX,UAAW,UAJf,UASAd,EAAAC,EAAAC,cAAA,MACES,MAAO,CACLa,gBAAiB,UACjBC,MAAO,OACPX,UAAW,UAJf,SASAd,EAAAC,EAAAC,cAAA,MACES,MAAO,CACLa,gBAAiB,UACjBC,MAAO,OACPX,UAAW,UAJf,aASAd,EAAAC,EAAAC,cAAA,MACES,MAAO,CACLa,gBAAiB,UACjBC,MAAO,OACPX,UAAW,UAJf,SASAd,EAAAC,EAAAC,cAAA,MACES,MAAO,CACLa,gBAAiB,UACjBC,MAAO,OACPX,UAAW,UAJf,YAWJd,EAAAC,EAAAC,cAAA,aACGN,KAAKJ,MAAMkC,KAAKC,IAAI,SAACC,EAAKC,GAAN,OACnB7B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,MAAI4B,IAAKD,GACP7B,EAAAC,EAAAC,cAAA,UAAK0B,EAAIG,mBACT/B,EAAAC,EAAAC,cAAA,UAAK0B,EAAII,YACThC,EAAAC,EAAAC,cAAA,UAAK0B,EAAIK,eACTjC,EAAAC,EAAAC,cAAA,UAAK0B,EAAIM,iBACTlC,EAAAC,EAAAC,cAAA,UAAK0B,EAAIO,YACTnC,EAAAC,EAAAC,cAAA,UAAK0B,EAAIQ,cAAcC,WACvBrC,EAAAC,EAAAC,cAAA,UAAK0B,EAAIQ,cAAcE,MAAMC,QAAQ,IACrCvC,EAAAC,EAAAC,cAAA,UAAK0B,EAAIQ,cAAcI,OAAOC,eAAe,eAKrDzC,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MACES,MAAO,CACLa,gBAAiB,UACjBC,MAAO,OACPX,UAAW,UAEbD,QAAQ,KANV,mBAQmBjB,KAAKJ,MAAMkC,KAAKV,mBAjIX0B,qBC8NvBC,SA1NgB,WAK1B,IAMCC,EAVJlB,EAIGmB,UAAA7B,OAAA,QAAA8B,IAAAD,UAAA,GAAAA,UAAA,GAJI,GAMDE,GAFHF,UAAA7B,OAAA,QAAA8B,IAAAD,UAAA,IAAAA,UAAA,GAAAA,UAAA7B,OAAA,QAAA8B,IAAAD,UAAA,IAAAA,UAAA,GAAAA,UAAA7B,OAAA,QAAA8B,IAAAD,UAAA,IAAAA,UAAA,GAES,IAAIG,UAAM,IAAK,KAAM,CAAC,IAAK,OAEnCC,EAAY,GAGZC,EAAS,GAGbH,EAAII,YAAY,IAChBJ,EAAIK,KAAK,wBAAyB,GAAI,IACtCL,EAAII,YAAY,IAChBJ,EAAIK,KAAK/B,cAAcC,UAAW,IAAK,IACvCyB,EAAII,YAAY,GAChB,IAAIE,EAAahC,cAAcE,YAAYP,OACvCqC,EAAa,IACfN,EAAIK,KAAK/B,cAAcE,YAAY+B,MAAM,EAAE,IAAK,IAAK,IAEnDD,EAAa,IACfN,EAAIK,KAAK/B,cAAcE,YAAY+B,MAAM,GAAG,IAAK,IAAK,IAExDP,EAAII,YAAY,IAChBJ,EAAIQ,cAAc,CAChBC,MAAO,0BAGTT,EAAIK,KAAJ,aAAAK,OAEiD,IAA7C1C,YAAmB,eAAeC,OAC9B,KACAC,KAAKC,MAAMH,YAAmB,gBAAgBI,SAC9C,QACAF,KAAKC,MAAMH,YAAmB,gBAAgBK,WAEpD,GACA,IAEFwB,EAAc,CACZ,CACE,CACEc,QAAO,cAET,CACEA,QAAO,iBAET,CACEA,QAAO,iBAET,CACEA,QAAO,SAET,CACEA,QAAO,aAET,CACEA,QAAO,QACPC,OAAQ,CACNC,OAAQ,UAGZ,CACEF,QAAO,MACPC,OAAQ,CACNC,OAAQ,UAGZ,CACEF,QAAO,SACPC,OAAQ,CACNC,OAAQ,YAKhB,IAAIC,EAAQ,EACZnC,EAAKoC,QAAQ,SAACC,EAAMlC,GAClBgC,GAAgBE,EAAK3B,cAAcI,OACnC,IAAIwB,EAAO,CACTD,EAAKhC,kBACLgC,EAAK/B,WACL+B,EAAK9B,cACL8B,EAAK7B,gBACL6B,EAAK5B,WACL4B,EAAK3B,cAAcC,UACnB,CACEqB,QAASK,EAAK3B,cAAcE,MAAMC,QAAQ,GAC1CoB,OAAQ,CACNC,OAAQ,UAIZ,CACEF,QAASO,SAASF,EAAK3B,cAAcI,QAAQC,eAAe,SAC5DkB,OAAQ,CACNC,OAAS,WAMfX,EAAUiB,KAAKF,KAGjB,IAAIG,EAAS,CACX,CACET,QAAO,oBAAAD,OAAsB/B,EAAKV,QAClCH,QAAS,EACT8C,OAAQ,CACNC,OAAQ,SACRQ,UAAW,UACXC,UAAW,SAGf,CACEX,QAASO,SAASJ,GAAOpB,eAAe,SACxCkB,OAAQ,CACNC,OAAQ,QACRQ,UAAW,UACXC,UAAW,UAIjBpB,EAAUiB,KAAKC,GAEf,IAAIG,EAAU,CACZ,CACEZ,QAAO,cAAAD,OAAgBxC,KAAKC,MAAMH,YAAmB,aAAawD,QAA3D,OAAAd,OAAwEe,eAC/E3D,QAAS,EACT8C,OAAQ,CAENc,UAAW,SACXJ,UAAW,UAKjBpB,EAAUiB,KAAKI,GAEfvB,EAAI2B,UAAU,CACZC,KAAM/B,EACNgC,KAAM3B,EAEN4B,OAAQ3B,EACR4B,MAAO,QACPC,aAAc,QAEdC,OAAQ,CAAEC,IAAK,IACfC,WAAY,CAGVC,SAAU,GAEZC,WAAY,CAGVD,SAAU,GAEZE,WAAY,CACVF,SAAU,EAGVf,UAAW,UACXC,UAAW,QAEbiB,eAAgB,CAAC,IAAK,IAAK,KAC3BC,eAAgB,IAElBrC,EAASH,EAAIyC,mBAAqB,EAClCvC,EAAY,GAeZ,IAAMwC,EAAQ1C,EAAI2C,SAASC,mBACrBC,EAAY7C,EAAI2C,SAASG,SAASC,MAClCC,EAAahD,EAAI2C,SAASG,SAASG,OACzCjD,EAAII,YAAY,IAChB,IAAK,IAAI8C,EAAI,EAAGA,EAAIR,EAAQ,EAAGQ,IAAK,CAClC,IAAIC,EAAgBN,EAAY,EAC5BO,EAAcJ,EAAa,GAC/BhD,EAAIqD,QAAQH,GACZlD,EAAIK,KAAJ,GAAAK,OAAYwC,EAAZ,QAAAxC,OAAoBgC,GAASS,EAAeC,EAAa,CACvDE,MAAO,WAIXtD,EAAIuD,KAAJ,gDC1MIC,oDACJ,SAAAA,EAAY/G,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2G,IACjB9G,EAAAI,EAAAC,KAAAF,KAAMJ,IACDO,MAAQ,CACXyG,KAAM,IAAIC,KACVC,QAAS,CACP,CACEC,UAAW,oBACXvD,KAAM,aACNwD,YAAa,CACX/F,QAAS,KAEXsD,OAAQ,SAAC0C,EAAMjF,EAAKkF,EAAKjF,GACvB,OACE7B,EAAAC,EAAAC,cAAA,gCACqBT,EAAKD,MAAMuH,aAAa/F,OAAQ,OAK3D,CACE2F,UAAW,aACXvD,KAAM,iBAER,CACEuD,UAAW,gBACXvD,KAAM,iBAGR,CACEuD,UAAW,kBACXvD,KAAM,UAER,CACEuD,UAAW,aACXvD,KAAM,SAER,CACEuD,UAAW,0BACXvD,KAAM,aAER,CACEuD,UAAW,sBACXvD,KAAM,QACN4D,cAAe,aACfC,UAAW,SAACJ,GACV,OAAO7G,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cAAcuG,EAAKtE,QAAQ,MAGrD,CACEoE,UAAW,uBACXvD,KAAM,SACN4D,cAAe,aACfC,UAAW,SAACJ,GACV,OACE7G,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cAAcuG,EAAKpE,eAAe,cAM3DhD,EAAKyH,aAAezH,EAAKyH,aAAaC,KAAlBzH,OAAA0H,EAAA,EAAA1H,CAAAD,IACpBA,EAAK4H,YAAc5H,EAAK4H,YAAYF,KAAjBzH,OAAA0H,EAAA,EAAA1H,CAAAD,IA7DFA,0DAiEjBkD,EAAuB/C,KAAKJ,MAAMuH,mDAEvBP,GACX5G,KAAK0H,SAAS,CACZnG,SAAU,IAAIsF,KAAKD,yCAGXA,GACV5G,KAAK0H,SAAS,CACZlG,UAAW,IAAIqF,KAAKD,sCAIf,IAAAe,EAAA3H,KAEP,OACEI,EAAAC,EAAAC,cAAA,QAAMsH,SAAU5H,KAAKJ,MAAMiI,aAAcC,aAAa,OACpD1H,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACfN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACXN,EAAAC,EAAAC,cAACyH,EAAA,EAAD,CACEtH,GAAG,WACHuH,KAAK,WACLC,UAAWC,IACXC,MAAM,eACNC,KAAK,OACLC,SAAUrI,KAAKG,MAAMoB,SACrB+G,SAAU,SAAC1B,GAAD,OAAUe,EAAKL,aAAaV,IACtC2B,YAAY,0BAIhBnI,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACbN,EAAAC,EAAAC,cAACyH,EAAA,EAAD,CACEC,KAAK,YACLC,UAAWC,IACXE,KAAK,OACLC,SAAUrI,KAAKG,MAAMqB,UACrB8G,SAAU,SAAC1B,GAAD,OAAUe,EAAKF,YAAYb,IACrCuB,MAAM,gBACNI,YAAY,2BAKhBnI,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACbN,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,UACE8H,KAAK,SACLI,MAAM,MACNR,KAAK,WACLtH,UAAU,6BAETV,KAAKJ,MAAM6I,UACVrI,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,KAAGI,UAAU,2BADf,wBAKA,kBAKRN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACbN,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CACEC,SAAS,QACT7G,KAAM9B,KAAKJ,MAAMgJ,OAAS5I,KAAKJ,MAAMuH,aAAe,GACpDL,QAAS9G,KAAKG,MAAM2G,QACpB+B,OAAO,EACPC,UAAU,uCAGd1I,EAAAC,EAAAC,cAAA,OAAKI,UAAWV,KAAKJ,MAAMgJ,OAAS,YAAc,oBAChDxI,EAAAC,EAAAC,cAAA,SAAOyI,QAAQ,IAAf,QACA3I,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACbN,EAAAC,EAAAC,cAAA,UAAQ8H,KAAK,SAASY,QAAS,kBAAIrB,EAAKsB,aAAavI,UAAU,6BAA/D,iBAEFN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACbN,EAAAC,EAAAC,cAAC4I,EAAD,CAAyBpH,KAAM9B,KAAKJ,MAAMuH,mBAKjDnH,KAAKJ,MAAM6I,UACZrI,EAAAC,EAAAC,cAAC6I,EAAA9I,EAAD,CACA+I,SAAO,EACPC,WAAW,sBACVC,YAAY,0BACX,aA5JyBxG,aAkKnC6D,EAAuB4C,YAAU,CAC/BC,KAAM,uBACNC,oBAAoB,GAFCF,CAGpB5C,GAEY+C,kBAAQ,SAACvJ,GACtB,MAAO,CACLwJ,cAAe,CACbpI,SAAUqI,cACVpI,UAAWoI,iBAJFF,CAOZ/C,YC5KGkD,oDACJ,SAAAA,EAAYjK,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6J,IACjBhK,EAAAI,EAAAC,KAAAF,KAAMJ,IACDO,MAAQ,CACXsI,WAAW,EACXG,QAAQ,EACRzB,aAAc,IAEhBtH,EAAKgI,aAAehI,EAAKgI,aAAaN,KAAlBzH,OAAA0H,EAAA,EAAA1H,CAAAD,IAPHA,2DAUNiC,GAAM,IAAA6F,EAAA3H,KACjBA,KAAK0H,SAAS,CACZe,WAAW,IAEb,IAAIqB,EAAY,CACdvI,SAAUwI,YACRC,EAAO,IAAInD,KAAK/E,EAAKP,WAAW0I,OAAO,eAEzCzI,UAAWuI,YACTC,EAAO,IAAInD,KAAK/E,EAAKN,YAAYyI,OAAO,gBAG5CC,YAAkB,2BAA4BJ,GAC3CK,KAAK,SAACC,GACmB,IAApBA,EAAItI,KAAKV,QACXiJ,YAAkB,OAAQ,iCAC1B1C,EAAKD,SAAS,CACZkB,QAAQ,EACRH,WAAW,EACXtB,aAAc,OAGhBkD,YAAkB,UAAW,kCAC7BC,YAAmB,cAAejJ,KAAKkJ,UAAUT,IACjDnC,EAAKD,SAAS,CACZkB,QAAQ,EACRH,WAAW,EACXtB,aAAciD,EAAItI,UAIvB0I,MAAM,SAACC,GACN9C,EAAKD,SAAS,CACZkB,QAAQ,EACRH,WAAW,IAEb4B,YAAkB,OAAQ,oEAIvB,IAAAK,EAAA1K,KACP,OACEI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAII,UAAU,6BACZN,EAAAC,EAAAC,cAAA,MAAII,UAAU,mBACZN,EAAAC,EAAAC,cAACqK,EAAA,EAAD,CAAMC,GAAG,KAAT,YAEFxK,EAAAC,EAAAC,cAAA,MAAII,UAAU,0BAAd,2BAEFN,EAAAC,EAAAC,cAAA,MAAII,UAAU,eAAd,2BACAN,EAAAC,EAAAC,cAACuK,EAAA,EAAD,KACEzK,EAAAC,EAAAC,cAACuK,EAAA,EAAD,+BACAzK,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAACuK,EAAA,EAAD,KAEMzK,EAAAC,EAAAC,cAACwK,EAAD,CACElC,OAAQ5I,KAAKG,MAAMyI,OACnBH,UAAWzI,KAAKG,MAAMsI,UACtBtB,aAAcnH,KAAKG,MAAMgH,aACzBS,SAAU,SAAC9F,GAAD,OAAU4I,EAAK7C,aAAa/F,OAI9C1B,EAAAC,EAAAC,cAAA,oBA3E4ByK,IAAMjI,WAmF7B+G","file":"static/js/105.b0c40a70.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\nimport {\n  getUserdata,\n  localStoragedecryp,\n} from \"../../../../../components/helpers/function\";\nclass LaporanBatalServiceExel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <>\n        <ReactHTMLTableToExcel\n          id=\"test-table-xls-button\"\n          className=\"btn btn-success btn-block\"\n          table=\"table-to-xls\"\n          filename=\"Laporan Batal Service\"\n          sheet=\"Laporan Batal Service\"\n          buttonText=\"Export Exel\"\n        />\n        <table id=\"table-to-xls\" style={{ display: \"none\" }}>\n          <thead>\n            <tr>\n              <th colSpan=\"5\" style={{ textAlign: \"center\" }}>\n                {\" \"}\n                LAPORAN BATAL SERVICE{\" \"}\n              </th>\n            </tr>\n            <tr>\n              <th colSpan=\"5\"> Periode </th>\n            </tr>\n            <tr>\n              <th colSpan=\"5\">\n                {\" \"}\n                {localStoragedecryp(\"tgl_laporan\").length === 0\n                  ? null\n                  : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\n                    \" s/d \" +\n                    JSON.parse(localStoragedecryp(\"tgl_laporan\"))\n                      .tgl_akhir}{\" \"}\n              </th>\n            </tr>\n            <tr>\n              <th colSpan=\"5\"> TOKO : {getUserdata().nama_toko} </th>\n            </tr>\n\n            <tr>\n              <th colSpan=\"5\"> ALAMAT : {getUserdata().alamat_toko} </th>\n            </tr>\n            <tr></tr>\n            <tr>\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\n                NO SERVICE\n              </td>\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\n                TGL TRANSAKSI\n              </td>\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\n                NAMA CUSTOME\n              </td>\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                  textAlign: \"right\",\n                }}\n              >\n                ALAMAT\n              </td>\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                  textAlign: \"right\",\n                }}\n              >\n                SALES\n              </td>\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                  textAlign: \"right\",\n                }}\n              >\n                DESKRIPSI\n              </td>\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                  textAlign: \"right\",\n                }}\n              >\n                BERAT\n              </td>\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                  textAlign: \"right\",\n                }}\n              >\n                ONGKOS\n              </td>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.data.map((row, index) => (\n              <>\n                <tr key={index}>\n                  <td>{row.no_faktur_service}</td>\n                  <td>{row.tgl_system}</td>\n                  <td>{row.nama_customer}</td>\n                  <td>{row.alamat_customer}</td>\n                  <td>{row.kode_sales}</td>\n                  <td>{row.detail_barang.deskripsi}</td>\n                  <td>{row.detail_barang.berat.toFixed(2)}</td>\n                  <td>{row.detail_barang.ongkos.toLocaleString(\"kr-KO\")}</td>\n                </tr>\n              </>\n            ))}\n          </tbody>\n          <tfoot>\n            <tr>\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                  textAlign: \"center\",\n                }}\n                colSpan=\"8\"\n              >\n                Total Transaksi {this.props.data.length}\n              </td>\n            </tr>\n          </tfoot>\n        </table>\n      </>\n    );\n  }\n}\nexport default LaporanBatalServiceExel;\n","import jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport {\n  getToday,\n  getUserdata,\n  localStoragedecryp,\n} from \"../../../../../components/helpers/function\";\n// Date Fns is used to format the dates we receive\n\n// define a generatePDF function that accepts a tickets argument\nconst LaporanBatalServicePdf = (\n  data = \"\",\n  username = \"\",\n  tanggal_dari = \"\",\n  tanggal_sampai = \"\"\n) => {\n  // initialize jsPDF\n  const doc = new jsPDF(\"l\", \"mm\", [297, 210]);\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\n  let tableRows = [];\n  // let footRows = [];\n  let tableColumn = [];\n  let finalY = 30;\n\n\n  doc.setFontSize(15);\n  doc.text(\"LAPORAN SERVICE BATAL\", 14, 15);\n  doc.setFontSize(20);\n  doc.text(getUserdata().nama_toko, 200, 15);\n  doc.setFontSize(8);\n  let jml_alamat = getUserdata().alamat_toko.length;\n  if (jml_alamat > 20) {\n    doc.text(getUserdata().alamat_toko.slice(0,48), 200, 20);\n  }\n  if (jml_alamat > 50) {\n    doc.text(getUserdata().alamat_toko.slice(48,90), 200, 25);\n  }\n  doc.setFontSize(10);\n  doc.setProperties({\n    title: \"LAPORAN SERVICE BATAL\",\n  });\n  //row 1\n  doc.text(\n    `PERIODE : ${\n      localStoragedecryp(\"tgl_laporan\").length === 0\n        ? null\n        : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\n          \" s/d \" +\n          JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_akhir\n    }`,\n    14,\n    25\n  );\n  tableColumn = [\n    [\n      {\n        content: `NO SERVICE`,\n      },\n      {\n        content: `TGL TRANSAKSI`,\n      },\n      {\n        content: `NAMA CUSTOMER`,\n      },\n      {\n        content: `SALES`,\n      },\n      {\n        content: `DESKRIPSI`,\n      },\n      {\n        content: `BERAT`,\n        styles: {\n          halign: 'right',\n        },\n      },\n      {\n        content: `QTY`,\n        styles: {\n          halign: 'right',\n        },\n      },\n      {\n        content: `ONGKOS`,\n        styles: {\n          halign: 'right',\n        },\n      },\n    ],\n  ];\n  let total = 0;\n  data.forEach((item, index) => {\n    total = total + item.detail_barang.ongkos;\n    let rows = [\n      item.no_faktur_service,\n      item.tgl_system,\n      item.nama_customer,\n      item.alamat_customer,\n      item.kode_sales,\n      item.detail_barang.deskripsi,\n      {\n        content: item.detail_barang.berat.toFixed(3),\n        styles: {\n          halign: 'right',\n        },\n      },\n    \n      {\n        content: parseInt(item.detail_barang.ongkos).toLocaleString(\"kr-KO\"),\n        styles: {\n          halign : \"right\",\n        }\n      },\n      \n\n    ];\n    tableRows.push(rows)\n  })\n  \n  let footer = [\n    {\n      content: `Total Transaksi: ${data.length}`,\n      colSpan: 8,\n      styles: {\n        halign: 'center',\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n      },\n    },\n    {\n      content: parseInt(total).toLocaleString(\"kr-KO\"),\n      styles: {\n        halign: \"right\",\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n      }\n    },\n  ]\n  tableRows.push(footer)\n\n  let printed = [\n    {\n      content: `Printed By ${JSON.parse(localStoragedecryp(\"userdata\")).user_id} / ${getToday()}`,\n      colSpan: 7,\n      styles: {\n        // lineWidth: 0.1,\n        fontStyle: \"italic\",\n        textColor: \"#000\",\n        // fillColor: \"#E8E5E5\"\n      },\n    },\n  ]\n  tableRows.push(printed);\n\n  doc.autoTable({\n    head: tableColumn,\n    body: tableRows,\n    // foot: tbl_barang,\n    startY: finalY,\n    theme: \"plain\",\n    rowPageBreak: \"avoid\",\n    // pageBreak: \"avoid\",\n    margin: { top: 10 },\n    footStyles: {\n      // lineWidth: 0.02,\n      // lineColor: \"#000\",\n      fontSize: 8,\n    },\n    bodyStyles: {\n      // lineWidth: 0.02,\n      // lineColor: \"#000\",\n      fontSize: 8,\n    },\n    headStyles: {\n      fontSize: 8,\n      // lineWidth: 0.02,\n      // lineColor: \"#000\",\n      fillColor: \"#E8E5E5\",\n      textColor: \"#000\",\n    },\n    tableLineColor: [255, 255, 255],\n    tableLineWidth: 1,\n  });\n  finalY = doc.autoTableEndPosY() + 3;\n  tableRows = [];\n  // footRows = [];\n  // tbl_barang = [];\n  // const date = Date().split(\" \");\n  // we use a date string to generate our filename.\n  // const dateStr = date[2] + date[3] + date[4];\n  // ticket title. and margin-top + margin-left\n  // doc.text(\n  //   `User                          : ${\n  //     JSON.parse(localStoragedecryp(\"userdata\")).user_id\n  //   }`,\n  //   14,\n  //   finalY + 10\n  // );\n  // doc.text(`Cetak                        : ${getToday()}`, 14, finalY + 16);\n  const pages = doc.internal.getNumberOfPages();\n  const pageWidth = doc.internal.pageSize.width; //Optional\n  const pageHeight = doc.internal.pageSize.height; //Optional\n  doc.setFontSize(10); //Optional\n  for (let j = 1; j < pages + 1; j++) {\n    let horizontalPos = pageWidth / 2; //Can be fixed number\n    let verticalPos = pageHeight - 10; //Can be fixed number\n    doc.setPage(j);\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\n      align: \"center\",\n    });\n  }\n  // doc.autoPrint();\n  doc.save(`LAPORAN SERVICE BATAL.pdf`);\n  // var string = doc.output(\"datauristring\");\n  // // var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\n  // var x = window.open();\n  // x.document.open();\n  // x.document.write(\n  //   \"<html><head><title>LAPORAN SERVICE BATAL</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\n  //     string +\n  //     \"></embed></body></html>\"\n  // );\n  // x.document.write(embed);\n  // setInterval(() => {\n  //   x.close();\n  // }, 1000);\n};\n\nexport default LaporanBatalServicePdf;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { InputDate } from \"../../../../components/helpers/field\";\nimport { getTglSystem } from \"../../../../components/helpers/function\";\nimport Tabel from \"../../../../components/helpers/tabel\";\nimport LaporanBatalServiceExel from \"./exel/LaporanBatalServiceExel\";\nimport LaporanBatalServicePdf from \"./pdf/LaporanBatalServicePdf\";\nimport Loading from 'react-fullscreen-loading';\n\nclass HeadFormBatalService extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: new Date(),\n      columns: [\n        {\n          dataField: \"no_faktur_service\",\n          text: \"No Service\",\n          footerAttrs: {\n            colSpan: \"8\",\n          },\n          footer: (cell, row, num, index) => {\n            return (\n              <div>\n                Total Transaksi : {this.props.dataservices.length}{\" \"}\n              </div>\n            );\n          },\n        },\n        {\n          dataField: \"tgl_system\",\n          text: \"Tgl Transaksi\",\n        },\n        {\n          dataField: \"nama_customer\",\n          text: \"Nama Customer\",\n        },\n\n        {\n          dataField: \"alamat_customer\",\n          text: \"Alamat\",\n        },\n        {\n          dataField: \"kode_sales\",\n          text: \"Sales\",\n        },\n        {\n          dataField: \"detail_barang.deskripsi\",\n          text: \"Deskripsi\",\n        },\n        {\n          dataField: \"detail_barang.berat\",\n          text: \"Berat\",\n          headerClasses: \"text-right\",\n          formatter: (cell) => {\n            return <div className=\"text-right\">{cell.toFixed(2)}</div>;\n          },\n        },\n        {\n          dataField: \"detail_barang.ongkos\",\n          text: \"Ongkos\",\n          headerClasses: \"text-right\",\n          formatter: (cell) => {\n            return (\n              <div className=\"text-right\">{cell.toLocaleString(\"kr-KO\")}</div>\n            );\n          },\n        },\n      ],\n    };\n    this.setStartDate = this.setStartDate.bind(this);\n    this.setLastDate = this.setLastDate.bind(this);\n  }\n\n  exportPdf() {\n    LaporanBatalServicePdf(this.props.dataservices)\n  }\n  setStartDate(date) {\n    this.setState({\n      tgl_awal: new Date(date),\n    });\n  }\n  setLastDate(date) {\n    this.setState({\n      tgl_akhir: new Date(date),\n    });\n  }\n\n  render() {\n   \n    return (\n      <form onSubmit={this.props.handleSubmit} autoComplete=\"off\">\n        <div className=\"row\">\n        <div className=\"col-lg-4\">\n            <Field\n              id=\"tgl_awal\"\n              name=\"tgl_awal\"\n              component={InputDate}\n              label=\"Tanggal Dari\"\n              type=\"text\"\n              selected={this.state.tgl_awal}\n              onChange={(date) => this.setStartDate(date)}\n              placeholder=\"Masukan Tanggal Dari\"\n            />\n          </div>\n\n          <div className=\"col-lg-4\">\n            <Field\n              name=\"tgl_akhir\"\n              component={InputDate}\n              type=\"text\"\n              selected={this.state.tgl_akhir}\n              onChange={(date) => this.setLastDate(date)}\n              label=\"Tanggal Akhir\"\n              placeholder=\"Masukan Tanggal Akhir\"\n            />\n          </div>\n\n          \n          <div className=\"col-lg-4\">\n            <div className=\"text-right\">\n              <label>&nbsp;</label>\n              <button\n                type=\"submit\"\n                value=\"PDF\"\n                name=\"type_btn\"\n                className=\"btn btn-primary btn-block\"\n              >\n                {this.props.isLoading ? (\n                  <>\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\n                    Mencari\n                  </>\n                ) : (\n                  \"Cari Laporan\"\n                )}\n              </button>\n            </div>\n          </div>\n          <div className=\"col-lg-12\">\n            <Tabel\n              keyField=\"no_hp\"\n              data={this.props.export ? this.props.dataservices : []}\n              columns={this.state.columns}\n              empty={true}\n              textEmpty=\"Data Laporan Batal Service Kosong\"\n            />\n          </div>\n          <div className={this.props.export ? \"col-lg-12\" : \"col-lg-12 d-none\"}>\n            <label htmlFor=\"\">&nbsp;</label>\n            <div className=\"row\">\n              <div className=\"col-lg-6\">\n                <button type=\"button\" onClick={()=>this.exportPdf()} className=\"btn btn-warning btn-block\"> Export PDF </button>\n              </div>\n              <div className=\"col-lg-6\">\n                <LaporanBatalServiceExel data={this.props.dataservices} />\n              </div>\n            </div>\n          </div>\n        </div>\n        {this.props.isLoading ? (\n        <Loading \n        loading\n        background=\"rgba(0, 0, 0, 0.35)\"\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\n      ) : null}\n      </form>\n    );\n  }\n}\n\nHeadFormBatalService = reduxForm({\n  form: \"HeadFormBatalService\",\n  enableReinitialize: true,\n})(HeadFormBatalService);\n// export default connect()(HeadFormBatalService);\nexport default connect((state) => {\n  return {\n    initialValues: {\n      tgl_awal: getTglSystem(),\n      tgl_akhir: getTglSystem(),\n    },\n  };\n})(HeadFormBatalService);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { formatDate, localStorageencryp } from \"../../../../components/helpers/function.jsx\";\nimport { ToastNotification } from \"../../../../components/helpers/notification.jsx\";\nimport { Panel, PanelHeader,PanelBody } from \"../../../../components/panel/panel.jsx\";\nimport { postDataNoTImeOut } from \"../../../../config/axios.jsx\";\nimport HeadFormBatalService from \"./HeadFormBatalService.jsx\";\nimport * as moment from \"moment-timezone\";\n\n// import HeadFormBatalBeli from \"./HeadFormBatalBeli.jsx\";\n// import HeadFormBatalService from \"./HeadFormBatalService.jsx\";\n\nclass FormLaporanBatalService extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      export: false,\n      dataservices: [],\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(data) {\n    this.setState({\n      isLoading: true,\n    });\n    let data_post = {\n      tgl_awal: formatDate(\n        moment(new Date(data.tgl_awal)).format(\"YYYY-MM-DD\")\n      ),\n      tgl_akhir: formatDate(\n        moment(new Date(data.tgl_akhir)).format(\"YYYY-MM-DD\")\n      ),\n    };\n    postDataNoTImeOut(\"service/get/servicebatal\", data_post)\n      .then((res) => {\n        if (res.data.length === 0) {\n          ToastNotification(\"info\", \"Data Yang Anda Cari Tidak Ada\");\n          this.setState({\n            export: false,\n            isLoading: false,\n            dataservices: [],\n          });\n        } else {\n          ToastNotification(\"success\", \"Laporan Batal Service Tersedia\");\n          localStorageencryp(\"tgl_laporan\", JSON.stringify(data_post));\n          this.setState({\n            export: true,\n            isLoading: false,\n            dataservices: res.data,\n          });\n        }\n      })\n      .catch((err) => {\n        this.setState({\n          export: false,\n          isLoading: false,\n        });\n        ToastNotification(\"info\", \"Data Yang Anda Cari Tidak Ada\");\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <ol className=\"breadcrumb float-xl-right\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"#\">Laporan</Link>\n          </li>\n          <li className=\"breadcrumb-item active\">Laporan Batal Services</li>\n        </ol>\n        <h1 className=\"page-header\">Laporan Batal Services </h1>\n        <Panel>\n          <PanelHeader>Laporan Batal Services</PanelHeader>\n          <br />\n          {/* Laporan Batal Services */}\n          <PanelBody>\n\n                <HeadFormBatalService\n                  export={this.state.export}\n                  isLoading={this.state.isLoading}\n                  dataservices={this.state.dataservices}\n                  onSubmit={(data) => this.handleSubmit(data)}\n                />\n          </PanelBody>\n             \n          <br />\n          {/* End Tambah Laporan Batal Services  */}\n        </Panel>\n      </div>\n    );\n  }\n}\n\nexport default FormLaporanBatalService;\n"],"sourceRoot":""}