{"version":3,"sources":["pages/Laporan/LaporanKeuangan/LaporanNonCash/pdf/CetakLaporanRekap.jsx","pages/Laporan/LaporanKeuangan/LaporanNonCash/pdf/CetakLaporanKeuanganDetail.jsx","pages/Laporan/LaporanKeuangan/LaporanNonCash/exel/LaporanKeaunagnRekap.jsx","pages/Laporan/LaporanKeuangan/LaporanNonCash/exel/LaporanKeuanganDetail.jsx","pages/Laporan/LaporanKeuangan/LaporanNonCash/HeadFormNonCash.jsx","pages/Laporan/LaporanKeuangan/LaporanNonCash/index.jsx"],"names":["CetakLaporanRekap","data","arguments","length","undefined","doc","jsPDF","tableRows","footRows","tableColumn","finalY","total_masuk","total_keluar","setFontSize","text","getUserdata","nama_toko","jml_alamat","alamat_toko","slice","setProperties","title","concat","localStoragedecryp","JSON","parse","tanggal","forEach","item","index","content","styles","halign","rows","kategori","parseInt","jumlah_in","toLocaleString","jumlah_in_fee","push","footer","fillColor","textColor","printed","user_id","getToday","colSpan","fontStyle","autoTable","head","body","foot","startY","theme","rowPageBreak","margin","top","bodyStyles","fontSize","headStyles","tableLineColor","tableLineWidth","autoTableEndPosY","pages","internal","getNumberOfPages","pageWidth","pageSize","width","pageHeight","height","j","horizontalPos","verticalPos","setPage","align","string","output","x","window","open","document","write","CetakLaporanTerimaBarang","hasilakhir","deskripsi","hasilku","split","ia","fee","LaporanKeaunagnRekap","props","_this","Object","classCallCheck","this","_super","call","state","react_default","a","createElement","Fragment","react_html_table_to_excel_default","id","className","table","filename","sheet","buttonText","rowkey","style","display","textAlign","backgroundColor","color","map","key","Component","LaporanKeuanganDetail","e","hasil","_this2","verticalAlign","HeadFormNonCash","date","Date","columnsdetail","dataField","formatter","csvFormatter","footerAttrs","library","headerClasses","parseFloat","columnData","reduce","acc","columnsrekap","setStartDate","bind","assertThisInitialized","setLastDate","datalaporancash","CetakLaporanKeuanganDetail","change","setState","tgl_awal","tgl_akhir","onSubmit","handleSubmit","autoComplete","name","component","InputDate","label","type","selected","onChange","placeholder","ReanderSelect","options","value","isLoading","keyField","columns","istypeRekap","empty","textEmpty","export","htmlFor","onClick","exportPdfRekap","exportPdfDetail","exel_LaporanKeaunagnRekap","exel_LaporanKeuanganDetail","loading","background","loaderColor","reduxForm","form","enableReinitialize","connect","initialValues","getTglSystem","LaporanNonCash","hidden","datamember","data_post","formatDate","moment","format","getData","filter","then","res","ToastNotification","localStorageencryp","stringify","catch","err","console","log","_this3","to","LaporanNonCash_HeadFormNonCash","React"],"mappings":"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","file":"static/js/83.00db567d.chunk.js","sourcesContent":["import jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport { getToday, getUserdata, localStoragedecryp } from \"../../../../../components/helpers/function\";\n// Date Fns is used to format the dates we receive\n\n// define a generatePDF function that accepts a tickets argument\nconst CetakLaporanRekap = (\n  data = \"\",\n  username = \"\",\n  tanggal = \"\",\n) => {\n  // initialize jsPDF\n  const doc = new jsPDF(\"l\", \"mm\", [297, 210]);\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\n  let tableRows = [];\n  let footRows = [];\n  let tableColumn = [];\n  let finalY = 30;\n  let total_masuk = 0;\n  let total_keluar = 0;\n\n\n  doc.setFontSize(15);\n  doc.text(\"LAPORAN KEUANGAN NON CASH REKAP\", 14, 15);\n  doc.setFontSize(20);\n  doc.text(getUserdata().nama_toko, 200, 15);\n  doc.setFontSize(8);\n  let jml_alamat = getUserdata().alamat_toko.length;\n  if (jml_alamat > 20) {\n    doc.text(getUserdata().alamat_toko.slice(0,48), 200, 20);\n  }\n  if (jml_alamat > 50) {\n    doc.text(getUserdata().alamat_toko.slice(48,90), 200, 25);\n  }\n  doc.setFontSize(10);\n  doc.setProperties({\n    title: \"LAPORAN KEUANGAN NON CASH REKAP\",\n  });\n  doc.text(\n    `Tanggal : ${\n      localStoragedecryp(\"tgl_laporan\").length === 0\n        ? null\n        : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tanggal\n    }`,\n    14,\n    25\n  );\n  data.forEach((item, index) => {\n  tableColumn = [\n    [\n      {\n        content: `KATEGORI`,\n      },\n      {\n        content: `UANG MASUK`,\n        styles: {\n          halign: 'right'\n        },\n      },\n      {\n        content: `Uang Masuk + Fee`,\n        styles: {\n          halign: 'right'\n        },\n      },\n    ],\n  ];\n\n    // item.list_barang.forEach((barang, index) => {\n    \n    let rows = [\n      item.kategori,\n      {\n        content: parseInt(item.jumlah_in).toLocaleString(\"kr-KO\"),\n        styles: {\n          halign: 'right'\n        },\n      },\n      {\n        content: parseInt(item.jumlah_in_fee).toLocaleString(\"kr-KO\"),\n        styles: {\n          halign: 'right'\n        },\n      }\n    ];\n    total_masuk = total_masuk + item.jumlah_in;\n    total_keluar = total_keluar + item.jumlah_in_fee;\n    tableRows.push(rows);\n  });\n\n  let footer = [\n    {\n      content: ``,\n      styles: {\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n      },\n    },\n   \n    {\n      content:  `${total_masuk.toLocaleString(\"kr-KO\")}`,\n      styles: {\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n        halign: 'right'\n\n      },\n    },\n    {\n      content:  `${total_keluar.toLocaleString(\"kr-KO\")}`,\n      styles: {\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n        halign: 'right'\n\n      },\n    },\n\n  ];\n  footRows.push(footer);\n  let printed = [\n    {\n      content: `Printed By ${JSON.parse(localStoragedecryp(\"userdata\")).user_id} / ${getToday()}`,\n      colSpan: 3,\n      styles: {\n        // lineWidth: 0.1,\n        fontStyle: \"italic\",\n        textColor: \"#000\",\n        // fillColor: \"#E8E5E5\"\n      },\n    },\n  ]\n  footRows.push(printed);\n  doc.autoTable({\n    head: tableColumn,\n    body: tableRows,\n    foot: footRows,\n    startY: finalY,\n    theme: \"plain\",\n    rowPageBreak: \"avoid\",\n    // pageBreak: \"avoid\",\n    margin: { top: 10 },\n    bodyStyles: {\n      // lineWidth: 0.02,\n      // lineColor: \"#000\",\n      fontSize: 8,\n    },\n    headStyles: {\n      fontSize: 8,\n      // lineWidth: 0.02,\n      // lineColor: \"#000\",\n      fillColor: \"#E8E5E5\",\n      textColor: \"#000\",\n    },\n    tableLineColor: [255, 255, 255],\n    tableLineWidth: 1,\n  });\n  finalY = doc.autoTableEndPosY() + 3;\n  tableRows = [];\n  footRows = [];\n  // const date = Date().split(\" \");\n  // we use a date string to generate our filename.\n  // const dateStr = date[2] + date[3] + date[4];\n  // ticket title. and margin-top + margin-left\n  // doc.text(`User                           : ${username}`, 14, finalY + 10);\n  // doc.text(`Cetak                        : ${getToday()}`, 14, finalY + 16);\n  const pages = doc.internal.getNumberOfPages();\n  const pageWidth = doc.internal.pageSize.width; //Optional\n  const pageHeight = doc.internal.pageSize.height; //Optional\n  doc.setFontSize(10); //Optional\n  for (let j = 1; j < pages + 1; j++) {\n    let horizontalPos = pageWidth / 2; //Can be fixed number\n    let verticalPos = pageHeight - 10; //Can be fixed number\n    doc.setPage(j);\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\n      align: \"center\",\n    });\n  }\n  // doc.autoPrint();\n  // doc.save(`LAPORAN KEUANGAN REKAP.pdf`);\n  var string = doc.output(\"datauristring\");\n  // var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\n  var x = window.open();\n  x.document.open();\n  x.document.write(\n    \"<html><head><title>LAPORAN KEUANGAN NON CASH REKAP</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\n      string +\n      \"></embed></body></html>\"\n  );\n  // x.document.write(embed);\n  // setInterval(() => {\n  //   x.close();\n  // }, 1000);\n};\n\nexport default CetakLaporanRekap;\n\n// import jsPDF from \"jspdf\";\n// import \"jspdf-autotable\";\n// import { getToday } from \"../../../../../components/helpers/function\";\n// // Date Fns is used to format the dates we receive\n\n// // define a generatePDF function that accepts a tickets argument\n// const CetakLaporanRekap = (\n//   data = \"\",\n//   username = \"\",\n//   tanggal = \"\",\n// ) => {\n//   const doc = new jsPDF('l');\n//   doc.setFontSize(15);\n//   doc.text(\"LAPORAN KEUANGAN REKAP\", 14, 15);\n//   doc.setFontSize(10);\n//   //row 1\n//   doc.text(`TANGGAL : ${tanggal}`, 14, 25);\n//   let tableRows = [];\n//   let finalY = 40;\n// //   let total = 0;\n//   let tableColumn = [\n//     \"NO\",\n//     \"UANG MASUK\",\n//     \"UANG KELUAR\",\n//   ];\n//   data.forEach((item, index) => {\n//     // item.list_barang.forEach((barang, index) => {\n//       let rows = [\n//         ++index,\n//         parseInt(item.jumlah_in).toLocaleString(\"kr-KO\"),\n//         parseInt(item.jumlah_out).toLocaleString(\"kr-KO\"),\n//     ];\n//     // total = index;\n//       tableRows.push(rows);\n//       // console.log(tableRows);\n//     // });\n\n//   });\n//   // let footer = [\n//   //   \"\",\n//   //   \"\",\n//   //   \"\",\n//   //   \"Total Barang : \",\n//   //   \"\" + parseFloat(total).toLocaleString(\"kr-KO\"),\n//   // ];\n//   // tableRows.push(footer);\n//   doc.autoTable(tableColumn, tableRows, {\n//     startY: 40\n//     // theme: \"\",\n//   });\n//    finalY = doc.lastAutoTable.finalY + 10;\n//    tableRows = [];\n\n// //   doc.text(`Total Barang\t: ${total}`, 14, finalY + 5);\n//   doc.text(`User\t             : ${username}`, 14, finalY + 10);\n//   doc.text(`Tgl Cetak             : ${getToday()}`, 14, finalY + 16);\n\n//   doc.autoPrint();\n//   doc.save(`Cetak Laporan Keuangan Rekap.pdf`);\n//   // var string = doc.output(\"datauristring\");\n//   // var embed = \"<div style='width: 100%; height: 100%'><embed style='margin:-10px; margin-bottom:-10px;min-height:100vh; margin-left:-10px' width='100%' height='100%' src='\" + string + \"'/></div>\";\n//   // var x = window.open();\n//   // x.document.open();\n//   // x.document.write(embed);\n//   // x.document.close();\n// };\n\n// export default CetakLaporanRekap;\n","import jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport { getToday, getUserdata, localStoragedecryp } from \"../../../../../components/helpers/function\";\n// Date Fns is used to format the dates we receive\n\n// define a generatePDF function that accepts a tickets argument\nconst CetakLaporanTerimaBarang = (\n  data = \"\",\n  username = \"\",\n  tanggal = \"\",\n) => {\n  // initialize jsPDF\n  const doc = new jsPDF(\"l\", \"mm\", [297, 210]);\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\n  let tableRows = [];\n  let footRows = [];\n  let tableColumn = [];\n  let finalY = 30;\n  let total_masuk = 0;\n  let total_keluar = 0;\n\n\n  doc.setFontSize(15);\n  doc.text(\"LAPORAN KEUANGAN NON CASH DETAIL\", 14, 15);\n  doc.setFontSize(20);\n  doc.text(getUserdata().nama_toko, 200, 15);\n  doc.setFontSize(8);\n  let jml_alamat = getUserdata().alamat_toko.length;\n  if (jml_alamat > 20) {\n    doc.text(getUserdata().alamat_toko.slice(0,48), 200, 20);\n  }\n  if (jml_alamat > 50) {\n    doc.text(getUserdata().alamat_toko.slice(48,90), 200, 25);\n  }\n  doc.setFontSize(10);\n  doc.setProperties({\n    title: \"LAPORAN KEUANGAN NON CASH DETAIL\",\n  });\n  doc.text(\n    `Tanggal : ${\n      localStoragedecryp(\"tgl_laporan\").length === 0\n        ? null\n        : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tanggal\n    }`,\n    14,\n    25\n  );\n  data.forEach((item, index) => {\n  tableColumn = [\n    [\n      // {\n      //   content: `NO`,\n      // },\n      {\n        content: `KATEGORI`,\n      },\n     \n      {\n        content: `DESKRIPSI`,\n      },\n      {\n        content: `FEE`,\n        styles: {\n          halign: 'right'\n        },\n      },\n      {\n        content: `UANG MASUK`,\n        styles: {\n          halign: 'right'\n        },\n      },\n      {\n        content: `Uang Masuk + Fee`,\n        styles: {\n          halign: 'right'\n        },\n      },\n    ],\n  ];\n\n    // item.list_barang.forEach((barang, index) => {\n    // console.log(item.deskripsi);\n    let hasilakhir = \"\";\n    if (item.deskripsi !== undefined) {\n      let dataku = item.deskripsi;\n      let hasilku = dataku.split('<br/>');\n      if (hasilku.length > 2) {\n        for (let ia = 1; ia < hasilku.length; ia++) {\n          if (hasilakhir === \"\") {\n            hasilakhir += hasilku[ia];\n          } else {\n          hasilakhir += `\\n` + hasilku[ia];\n          }\n        }\n      } else {\n        hasilakhir = hasilku[1]  \n      }\n      \n    }\n    let rows = [\n      // ++index,\n      item.kategori,\n      hasilakhir,\n      \n      {\n        content: item.fee + '%',\n        styles: {\n          halign: 'right'\n        },\n      },\n      {\n        content: parseInt(item.jumlah_in).toLocaleString(\"kr-KO\"),\n        styles: {\n          halign: 'right'\n        },\n      },\n      {\n        content: parseInt(item.jumlah_in_fee).toLocaleString(\"kr-KO\"),\n        styles: {\n          halign: 'right'\n        },\n      }\n    ];\n    total_masuk = total_masuk + item.jumlah_in;\n    total_keluar = total_keluar + item.jumlah_in_fee;\n    tableRows.push(rows);\n \n    \n  });\n  let footer = [\n    {\n      content: ``,\n      colSpan: 3,\n      styles: {\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n      },\n    },\n    {\n      content:  `${total_masuk.toLocaleString(\"kr-KO\")}`,\n      styles: {\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n        halign: 'right'\n\n      },\n    },\n    {\n      content:  `${total_keluar.toLocaleString(\"kr-KO\")}`,\n      styles: {\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n        halign: 'right'\n\n      },\n    },\n  \n  ];\n  footRows.push(footer);\n\n  let printed = [\n    {\n      content: `Printed By ${JSON.parse(localStoragedecryp(\"userdata\")).user_id} / ${getToday()}`,\n      colSpan: 5,\n      styles: {\n        // lineWidth: 0.1,\n        fontStyle: \"italic\",\n        textColor: \"#000\",\n        // fillColor: \"#E8E5E5\"\n      },\n    },\n  ]\n  footRows.push(printed);\n  doc.autoTable({\n    head: tableColumn,\n    body: tableRows,\n    foot: footRows,\n    startY: finalY,\n    theme: \"plain\",\n    rowPageBreak: \"avoid\",\n    // pageBreak: \"avoid\",\n    margin: { top: 10 },\n    bodyStyles: {\n      // lineWidth: 0.02,\n      // lineColor: \"#000\",\n      fontSize: 8,\n    },\n    headStyles: {\n      fontSize: 8,\n      // lineWidth: 0.02,\n      // lineColor: \"#000\",\n      fillColor: \"#E8E5E5\",\n      textColor: \"#000\",\n    },\n    tableLineColor: [255, 255, 255],\n    tableLineWidth: 1,\n  });\n  finalY = doc.autoTableEndPosY() + 3;\n  tableRows = [];\n  footRows = [];\n  // const date = Date().split(\" \");\n  // we use a date string to generate our filename.\n  // const dateStr = date[2] + date[3] + date[4];\n  // ticket title. and margin-top + margin-left\n  // doc.text(`User                           : ${username}`, 14, finalY + 10);\n  // doc.text(`Cetak                        : ${getToday()}`, 14, finalY + 16);\n  const pages = doc.internal.getNumberOfPages();\n  const pageWidth = doc.internal.pageSize.width; //Optional\n  const pageHeight = doc.internal.pageSize.height; //Optional\n  doc.setFontSize(10); //Optional\n  for (let j = 1; j < pages + 1; j++) {\n    let horizontalPos = pageWidth / 2; //Can be fixed number\n    let verticalPos = pageHeight - 10; //Can be fixed number\n    doc.setPage(j);\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\n      align: \"center\",\n    });\n  }\n  // doc.autoPrint();\n  // doc.save(`LAPORAN KEUANGAN DETAIL.pdf`);\n  var string = doc.output(\"datauristring\");\n  // var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\n  var x = window.open();\n  x.document.open();\n  x.document.write(\n    \"<html><head><title>LAPORAN KEUANGAN NON CASH DETAIL</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\n      string +\n      \"></embed></body></html>\"\n  );\n  // x.document.write(embed);\n  // setInterval(() => {\n  //   x.close();\n  // }, 1000);\n};\n\nexport default CetakLaporanTerimaBarang;\n\n// import jsPDF from \"jspdf\";\n// import \"jspdf-autotable\";\n// import { getToday } from \"../../../../../components/helpers/function\";\n// // Date Fns is used to format the dates we receive\n\n// // define a generatePDF function that accepts a tickets argument\n// const CetakLaporanTerimaBarang = (\n//   data = \"\",\n//   username = \"\",\n//   tanggal = \"\",\n// ) => {\n//   const doc = new jsPDF('l');\n//   doc.setFontSize(15);\n//   doc.text(\"LAPORAN KEUANGAN DETAIL\", 14, 15);\n//   doc.setFontSize(10);\n//   //row 1\n//   doc.text(`TANGGAL : ${tanggal}`, 14, 25);\n//   let tableRows = [];\n//   let finalY = 40;\n//   // let total = 0;\n//   let tableColumn = [\n//     \"NO\",\n//     \"KATEGORI\",\n//     \"DESKRIPSI\",\n//     \"MASUK\",\n//     \"KELUAR\",\n//   ];\n//   data.forEach((item, index) => {\n//     // item.list_barang.forEach((barang, index) => {\n//       let rows = [\n//         ++index,\n//         item.kategori,\n//         item.deskripsi,\n//         item.jumlah_in,\n//         item.jumlah_out,\n//     ];\n//     // total = index;\n//       tableRows.push(rows);\n//       // console.log(tableRows);\n//     // });\n    \n   \n//   });\n//   // let footer = [\n//   //   \"\",\n//   //   \"\",\n//   //   \"\",\n//   //   \"Total Barang : \",\n//   //   \"\" + parseFloat(total).toLocaleString(\"kr-KO\"),\n//   // ];\n//   // tableRows.push(footer);\n//   doc.autoTable(tableColumn, tableRows, {\n//     startY: 40\n//     // theme: \"\",\n//   });\n//    finalY = doc.lastAutoTable.finalY + 10;\n//    tableRows = [];\n\n//   // doc.text(`Total Barang\t: ${total}`, 14, finalY + 5);\n//   doc.text(`User\t             : ${username}`, 14, finalY + 10);\n//   doc.text(`Tgl Cetak             : ${getToday()}`, 14, finalY + 16);\n\n//   doc.autoPrint();\n//   doc.save(`Laporan Keuangan Detail.pdf`);\n//   // var string = doc.output(\"datauristring\");\n//   // var embed = \"<div style='width: 100%; height: 100%'><embed style='margin:-10px; margin-bottom:-10px;min-height:100vh; margin-left:-10px' width='100%' height='100%' src='\" + string + \"'/></div>\";\n//   // var x = window.open();\n//   // x.document.open();\n//   // x.document.write(embed);\n//   // x.document.close();\n// };\n\n// export default CetakLaporanTerimaBarang;\n","import React, { Component } from \"react\";\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\nimport { getUserdata, localStoragedecryp } from \"../../../../../components/helpers/function\";\nclass LaporanKeaunagnRekap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n\n    let total_masuk = 0;\n    let total_keluar = 0;\n    this.props.data.forEach((item, index) => {\n        total_masuk = total_masuk + item.jumlah_in;\n        total_keluar = total_keluar + item.jumlah_in_fee;\n    });\n    return (\n      <>\n        <ReactHTMLTableToExcel\n          id=\"test-table-xls-button\"\n          className=\"btn btn-success btn-block\"\n          table=\"table-to-xls\"\n          filename=\"Laporan Keuangan Non Cash Rekap\"\n          sheet=\"Laporan Keuangan Non Cash Rekap\"\n          buttonText=\"Export Exel\"\n        />\n        <table rowkey=\"kode_member\" id=\"table-to-xls\" style={{ display: \"none\" }}>\n        <thead>\n          <tr>\n            <th colSpan=\"3\" style={{ textAlign: \"center\" }}>\n              {\" \"}\n              LAPORAN KEUANGAN NON CASH REKAP\n            </th>\n          </tr>\n          <tr>\n                <th colSpan=\"3\"> Tanggal  </th>\n          </tr>\n          <tr>\n                <th colSpan=\"3\"> {localStoragedecryp('tgl_laporan').length === 0 ? null : JSON.parse(localStoragedecryp('tgl_laporan')).tanggal } </th>\n          </tr>\n          <tr>\n              <th colSpan=\"3\"> TOKO :  {getUserdata().nama_toko} </th>\n            </tr>\n           \n            <tr>\n              <th colSpan=\"3\"> ALAMAT :  {getUserdata().alamat_toko} </th>\n            </tr>\n          <tr>\n              <th colSpan=\"3\"></th>\n            </tr>\n            <tr >\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>Kategori</th>\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign: \"right\"  }}>Uang Masuk</th>\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign: \"right\"  }}>Uang Masuk + Fee</th>\n            </tr>\n        </thead>\n        <tbody>\n          {this.props.data.map((item, index) => (\n            <tr key={index}>\n                <td> {item.kategori}</td>\n                <td style={{textAlign: \"right\" }}> {item.jumlah_in.toLocaleString(\"kr-KO\")}</td>\n                <td style={{textAlign: \"right\" }}> {item.jumlah_in_fee.toLocaleString(\"kr-KO\")}</td>\n            </tr>\n        ))}\n        </tbody>\n          <tfoot>\n          <tr>\n          <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }} > </th>\n            <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\", textAlign: \"right\" }}>{ total_masuk.toLocaleString(\"kr-KO\")} </th>\n            <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign : \"right\" }}>{total_keluar.toLocaleString(\"kr-KO\")}</th>\n          </tr>\n          </tfoot>\n\n        </table>\n      </>\n    );\n  }\n}\nexport default LaporanKeaunagnRekap;\n","import React, { Component } from \"react\";\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\nimport { getUserdata, localStoragedecryp } from \"../../../../../components/helpers/function\";\nclass LaporanKeuanganDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  deskripsi(e){\n    let hasil = e.split('<br/>');\n    return e === undefined ? \"-\" : <> {hasil[1]} <br/> {hasil[2]} </>;\n  }\n  render() {\n    let total_masuk = 0;\n    let total_keluar = 0;\n        this.props.data.forEach((item, index) => {\n            total_masuk = total_masuk + item.jumlah_in;\n            total_keluar = total_keluar + item.jumlah_in_fee;\n        });\n   \n    return (\n      <>\n        <ReactHTMLTableToExcel\n          id=\"test-table-xls-button\"\n          className=\"btn btn-success btn-block\"\n          table=\"table-to-xls\"\n          filename=\"Laporan Keuangan Non Cash Detail\"\n          sheet=\"Laporan Keuangan Non Cash Detail\"\n          buttonText=\"Export Exel\"\n        />\n        <table rowkey=\"kode_member\" id=\"table-to-xls\" style={{ display: \"none\" }}>\n        <thead>\n          <tr>\n            <th colSpan=\"5\" style={{ textAlign: \"center\" }}>\n              {\" \"}\n              LAPORAN KEUANGAN NON CASH DETAIL{\" \"}\n            </th>\n          </tr>\n          <tr>\n                <th colSpan=\"5\"> Tanggal  </th>\n          </tr>\n          <tr>\n                <th colSpan=\"5\"> {localStoragedecryp('tgl_laporan').length === 0 ? null : JSON.parse(localStoragedecryp('tgl_laporan')).tanggal} </th>\n          </tr>\n          <tr>\n              <th colSpan=\"5\"> TOKO :  {getUserdata().nama_toko} </th>\n            </tr>\n           \n            <tr>\n              <th colSpan=\"5\"> ALAMAT :  {getUserdata().alamat_toko} </th>\n            </tr>\n          <tr>\n              <th colSpan=\"5\"></th>\n            </tr>\n            <tr >\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>Kategori</th>\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>Deskripsi</th>\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign: \"right\" }}>Fee</th>\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign: \"right\" }}>Uang Masuk</th>\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign: \"right\" }}>Uang Masuk + Fee</th>\n            </tr>\n        </thead>\n        <tbody>\n            \n          {this.props.data.map((item, index) => (\n            <tr key={index} style={{verticalAlign:\"top\" }}>\n                <td> {item.kategori}</td>\n                <td> { this.deskripsi(item.deskripsi || \"-\") }</td>\n                <td style={{textAlign: \"right\" }}> {item.fee}%</td>\n                <td style={{textAlign: \"right\" }}> {item.jumlah_in=== undefined  || item.jumlah_in === null ? 0 : item.jumlah_in.toLocaleString(\"kr-KO\")}</td>\n                <td style={{textAlign: \"right\" }}> {item.jumlah_in_fee === undefined || item.jumlah_in_fee === null ? 0 : item.jumlah_in_fee.toLocaleString(\"kr-KO\")}</td>\n            </tr>\n        ))}\n        </tbody>\n          <tfoot>\n          <tr>\n          <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }} > </th>\n            <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\", textAlign: \"right\" }} colSpan=\"2\"></th>\n            <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\", textAlign: \"right\" }}>{ total_masuk.toLocaleString(\"kr-KO\")} </th>\n            <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign : \"right\" }}>{total_keluar.toLocaleString(\"kr-KO\")}</th>\n          </tr>\n          </tfoot>\n\n        </table>\n      </>\n    );\n  }\n}\nexport default LaporanKeuanganDetail;\n","import {\n  React,\n  connect,\n  Component,\n  reduxForm,\n  Field,\n  InputDate,\n  Tabel,\n  Loading,\n  getTglSystem,\n  ReanderSelect,\n} from \"../../../../components/helpers/library\";\nimport CetakLaporanRekap from \"./pdf/CetakLaporanRekap\";\nimport CetakLaporanKeuanganDetail from \"./pdf/CetakLaporanKeuanganDetail\";\nimport LaporanKeaunagnRekap from \"./exel/LaporanKeaunagnRekap\";\nimport LaporanKeuanganDetail from \"./exel/LaporanKeuanganDetail\";\nclass HeadFormNonCash extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: new Date(),\n      columnsdetail: [\n        {\n          dataField: \"kategori\",\n          text: \"Kategori\",\n          formatter: (data) => {\n            return data === undefined ? \"-\" : data;\n          },\n          csvFormatter: (data) => {\n            return data === undefined ? \"-\" : data;\n          },\n          footerAttrs: {\n            colSpan: \"3\",\n          },\n          footer: \"Total\",\n        },\n        {\n          dataField: \"deskripsi\",\n          text: \"Deskripsi\",\n          formatter: (data) => {\n            // console.log(data);\n            let row = data || \"-\";\n            let hasil = row.split(\"<br/>\");\n            return data === undefined ? (\n              \"-\"\n            ) : (\n              <>\n                {\" \"}\n                {hasil[1]} <br /> {hasil[2]}{\" \"}\n              </>\n            );\n          },\n          csvFormatter: (data) => {\n            return data === undefined ? \"-\" : data;\n          },\n        },\n        {\n          dataField: \"fee\",\n          text: \"Fee\",\n          headerClasses: \"text-right\",\n          formatter: (data) => {\n            return <div className=\"text-right\"> {data === undefined ? \"-\" : data + '%'} </div>;\n          },\n        },\n        \n        {\n          dataField: \"jumlah_in\",\n          text: \"Uang Masuk\",\n          headerClasses: \"text-right\",\n          formatter: (data) => {\n            return (\n              <div className=\"text-right\">\n                {\" \"}\n                {data === undefined || null\n                  ? 0\n                  : parseFloat(data).toLocaleString(\"kr-KO\")}\n              </div>\n            );\n          },\n          csvFormatter: (data) => {\n            return (\n              <div className=\"text-right\">\n                {\" \"}\n                {data === undefined || null ? \"0\" : data}{\" \"}\n              </div>\n            );\n          },\n          footer: (columnData) => (\n            <div className=\"text-right\">\n              {\" \"}\n              {parseInt(\n                columnData.reduce((acc, item) => acc + item, 0)\n              ).toLocaleString(\"kr-KO\")}{\" \"}\n            </div>\n          ),\n        },\n        {\n          dataField: \"jumlah_in_fee\",\n          text: \"Uang Masuk + Fee\",\n          headerClasses: \"text-right\",\n          formatter: (data) => {\n            return (\n              <div className=\"text-right\">\n                {\" \"}\n                {data === undefined || null\n                  ? 0\n                  : parseFloat(data).toLocaleString(\"kr-KO\")}\n              </div>\n            );\n          },\n          csvFormatter: (data) => {\n            return (\n              <div className=\"text-right\">\n                {\" \"}\n                {data === undefined || null ? \"0\" : data}{\" \"}\n              </div>\n            );\n          },\n          footer: (columnData) => (\n            <div className=\"text-right\">\n              {\" \"}\n              {parseInt(\n                columnData.reduce((acc, item) => acc + item, 0)\n              ).toLocaleString(\"kr-KO\")}{\" \"}\n            </div>\n          ),\n        },\n      ],\n      columnsrekap: [\n        {\n          dataField: \"kategori\",\n          text: \"Kategori\",\n          footer: \"Total\",\n          formatter: (data) => {\n            return data === undefined ? \"-\" : data;\n          },\n        },\n        {\n          dataField: \"jumlah_in\",\n          text: \"Uang Masuk\",\n          headerClasses: \"text-right\",\n          formatter: (data) => {\n            return (\n              <div className=\"text-right\">\n                {\" \"}\n                {data === undefined || null\n                  ? 0\n                  : parseFloat(data).toLocaleString(\"kr-KO\")}\n              </div>\n            );\n          },\n          csvFormatter: (data) => {\n            return (\n              <div className=\"text-right\">\n                {\" \"}\n                {data === undefined || null ? \"0\" : data}{\" \"}\n              </div>\n            );\n          },\n          footer: (columnData) => (\n            <div className=\"text-right\">\n              {\" \"}\n              {parseInt(\n                columnData.reduce((acc, item) => acc + item, 0)\n              ).toLocaleString(\"kr-KO\")}{\" \"}\n            </div>\n          ),\n        },\n        {\n          dataField: \"jumlah_in_fee\",\n          text: \"Uang Masuk + Fee\",\n          headerClasses: \"text-right\",\n          formatter: (data) => {\n            return (\n              <div className=\"text-right\">\n                {\" \"}\n                {data === undefined || null\n                  ? 0\n                  : parseFloat(data).toLocaleString(\"kr-KO\")}\n              </div>\n            );\n          },\n          csvFormatter: (data) => {\n            return (\n              <div className=\"text-right\">\n                {\" \"}\n                {data === undefined || null ? \"0\" : data}{\" \"}\n              </div>\n            );\n          },\n          footer: (columnData) => (\n            <div className=\"text-right\">\n              {\" \"}\n              {parseInt(\n                columnData.reduce((acc, item) => acc + item, 0)\n              ).toLocaleString(\"kr-KO\")}{\" \"}\n            </div>\n          ),\n        },\n      ],\n    };\n    this.setStartDate = this.setStartDate.bind(this);\n    this.setLastDate = this.setLastDate.bind(this);\n  }\n\n  exportPdfRekap() {\n    CetakLaporanRekap(this.props.datalaporancash);\n  }\n  exportPdfDetail() {\n    CetakLaporanKeuanganDetail(this.props.datalaporancash);\n  }\n\n  componentDidMount() {\n    this.props.change(\"type\", \"REKAP\");\n    this.props.change(\"filter\", \"TRANSFER\");\n  }\n  setStartDate(date) {\n    this.setState({\n      tgl_awal: new Date(date),\n    });\n  }\n  setLastDate(date) {\n    this.setState({\n      tgl_akhir: new Date(date),\n    });\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.props.handleSubmit} autoComplete=\"off\">\n        <div className=\"row\">\n          <div className=\"col-lg-4\">\n            <Field\n              name=\"tgl_awal\"\n              component={InputDate}\n              label=\"Tanggal Dari\"\n              type=\"text\"\n              selected={this.state.tgl_awal}\n              onChange={(date) => this.setStartDate(date)}\n              placeholder=\"Masukan Tanggal Dari\"\n            />\n          </div>\n\n          <div className=\"col-lg-4\">\n            <Field\n              name=\"type\"\n              component={ReanderSelect}\n              onChange={(e) => this.props.onChange(e)}\n              options={[\n                { value: \"DETAIL\", name: \"DETAIL\" },\n                { value: \"REKAP\", name: \"REKAP\" },\n              ]}\n              label=\"Type\"\n              placeholder=\"Pilih Type\"\n            />\n          </div>\n          <div className=\"col-lg-4\">\n            <Field\n              name=\"filter\"\n              component={ReanderSelect}\n              onChange={(e) => this.props.onChange(e)}\n              options={[\n                { value: \"TRANSFER\", name: \"TRANSFER\" },\n                { value: \"DEBET\", name: \"DEBET\" },\n                { value: \"CREDIT\", name: \"KREDIT\" },\n              ]}\n              label=\"Filter\"\n              placeholder=\"Filter Type Pembayaran\"\n            />\n          </div>\n          <div className=\"col-lg-12\">\n            <div className=\"text-right\">\n              <label>&nbsp;</label>\n              <button\n                type=\"submit\"\n                value=\"PDF\"\n                name=\"type_btn\"\n                className=\"btn btn-primary btn-block\"\n              >\n                {this.props.isLoading ? (\n                  <>\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\n                    Mencari\n                  </>\n                ) : (\n                  \"Cari Laporan\"\n                )}\n              </button>\n            </div>\n          </div>\n         \n          <div className=\"col-lg-12\">\n            <Tabel\n              keyField=\"kategori\"\n              data={this.props.datalaporancash}\n              columns={\n                this.props.istypeRekap\n                  ? this.state.columnsrekap\n                  : this.state.columnsdetail\n              }\n              empty={true}\n              textEmpty=\"Data Keuangan Non Cash Kosong\"\n            />\n          </div>\n          <div className={this.props.export ? \"col-lg-12\" : \"col-lg-12 d-none\"}>\n            <label htmlFor=\"\">&nbsp;</label>\n            <div className=\"row\">\n              <div className=\"col-lg-6\">\n                {this.props.istypeRekap ? (\n                  <button\n                    onClick={() => this.exportPdfRekap()}\n                    className=\"btn btn-warning btn-block\"\n                  >\n                    {\" \"}\n                    Export Rekap PDF{\" \"}\n                  </button>\n                ) : (\n                  <button\n                    onClick={() => this.exportPdfDetail()}\n                    className=\"btn btn-warning btn-block\"\n                  >\n                    {\" \"}\n                    Export Detail PDF{\" \"}\n                  </button>\n                )}\n              </div>\n              <div className=\"col-lg-6\">\n                {this.props.istypeRekap ? (\n                  <LaporanKeaunagnRekap data={this.props.datalaporancash} />\n                  ) : (\n                  <LaporanKeuanganDetail data={this.props.datalaporancash} />\n                  )}\n              </div>\n            </div>\n          </div>\n        </div>\n        {this.props.isLoading ? (\n          <Loading\n            loading\n            background=\"rgba(0, 0, 0, 0.35)\"\n            loaderColor=\"rgba(94, 147, 117, 1)\"\n          />\n        ) : null}\n      </form>\n    );\n  }\n}\n\nHeadFormNonCash = reduxForm({\n  form: \"HeadFormNonCash\",\n  enableReinitialize: true,\n})(HeadFormNonCash);\n// export default connect()(HeadFormNonCash);\nexport default connect((state) => {\n  return {\n    initialValues: {\n      tgl_awal: getTglSystem(),\n    },\n  };\n})(HeadFormNonCash);\n","import {\n  React,\n  connect,\n  Link,\n  reduxForm,\n  Panel,\n  PanelHeader,\n  getData,\n  formatDate,\n  moment,\n  localStorageencryp,\n  ToastNotification,\n} from \"../../../../components/helpers/library\";\nimport HeadFormNonCash from \"./HeadFormNonCash\";\n\nclass LaporanNonCash extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      hidden: false,\n      istypeRekap: true,\n      tanggal: false,\n      datalaporancash: [],\n      datamember: [],\n      export: false\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(data) {\n    this.setState({\n      isLoading: true,\n    })\n    let data_post = {\n      tanggal : formatDate(moment(new Date(data.tgl_awal)).format('YYYY-MM-DD')),\n    };\n    getData(`report-non-cash?type=${data.type}&tanggal=${data_post.tanggal}&jenis=${data.filter}`).then((res) => {\n      if (res.data.length === 0) {\n        ToastNotification(\"info\", \"Data Yang Di Cari Tidak Ada !!!\");\n        this.setState({\n          isLoading: false,\n        })\n      } else {\n        ToastNotification(\"success\", \"Laporan Keuangan Non Cash Tersedia\");\n        // console.log(res.data);\n        this.setState({\n          datalaporancash: res.data,\n          isLoading: false,\n          export: true\n        })\n      }\n      localStorageencryp('tgl_laporan',JSON.stringify(data_post))\n\n    }).catch((err) => {\n      ToastNotification(\"info\", \"Data Yang Di Cari Tidak Ada !!!\");\n      this.setState({\n        isLoading: false,\n        export : false\n        \n      })\n      console.log(err);\n    })\n  }\n  onChange(e) {\n    if (e.type === \"REKAP\") {\n      this.setState({ istypeRekap: true,datalaporancash : [] });\n    } else {\n      this.setState({ istypeRekap: false,datalaporancash : [] });\n    }\n  }\n  render() {\n    return (\n      <div>\n        <ol className=\"breadcrumb float-xl-right\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"#\">Laporan Keuangan</Link>\n          </li>\n          <li className=\"breadcrumb-item active\">Laporan Keuangan Non Cash</li>\n        </ol>\n        <h1 className=\"page-header\">Laporan Keuangan Non Cash </h1>\n        <Panel>\n          <PanelHeader>Laporan Keuangan Non Cash</PanelHeader>\n          <br />\n          {/* Laporan Keuangan Non Cash */}\n          <div className=\"container\">\n            <HeadFormNonCash\n              onChange={(data) => this.onChange(data)}\n              isLoading={this.state.isLoading}\n              export={this.state.export}\n              datalaporancash={this.state.datalaporancash}\n              istypeRekap={this.state.istypeRekap}\n              onSubmit={(data) => this.handleSubmit(data)}\n            />\n          </div>\n          <br />\n          {/* End Tambah Laporan Keuangan Non Cash  */}\n        </Panel>\n      </div>\n    );\n  }\n}\n\nLaporanNonCash = reduxForm({\n  form: \"LaporanNonCash\",\n  enableReinitialize: true,\n})(LaporanNonCash);\nexport default connect()(LaporanNonCash);\n"],"sourceRoot":""}