{"version":3,"sources":["pages/utility/SettingToko/FormInput.jsx","pages/utility/SettingToko/index.jsx"],"names":["FormInput","props","_this","Object","classCallCheck","this","_super","call","state","isLoading","handleSubmit","bind","assertThisInitialized","library","createElement","onSubmit","onKeyPress","e","key","preventDefault","autoComplete","className","name","label","placeholder","text","component","ReanderField","normalize","NumberOnly","disabled","type","Fragment","React","Component","reduxForm","form","enableReinitialize","connect","initialValues","nama_toko","getUserdata","no_hp","no_telp","alamat","alamat_toko","SettingToko","data","kode_toko","hasil","putData","then","res","row","akses","toUpperCase","level","tgl_system","token","user_id","user_name","localStorageencryp","JSON","stringify","ToastNotification","catch","er","_this2","to","SettingToko_FormInput"],"mappings":"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","file":"static/js/126.59505ed1.chunk.js","sourcesContent":["import { getUserdata } from \"../../../components/helpers/function\";\nimport {\n  React,\n  connect,\n  reduxForm,\n  ReanderField,\n  Field,\n  NumberOnly,\n} from \"../../../components/helpers/library\";\n\nconst maptostate = (state) => {\n    return {\n        initialValues: {\n            nama_toko : getUserdata().nama_toko,\n            no_hp : getUserdata().no_telp,\n            alamat : getUserdata().alamat_toko,\n        }\n    };\n  };\nclass FormInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit() {}\n\n  componentDidMount() {}\n\n  render() {\n    return (\n      <form\n        onSubmit={this.props.handleSubmit}\n        onKeyPress={(e) => {\n          e.key === \"Enter\" && e.preventDefault();\n        }}\n        autoComplete=\"off\"\n      >\n        <div className=\"row\">\n          <div className=\"col-4\">\n            <Field\n              name=\"nama_toko\"\n              label=\"Nama Toko\"\n              placeholder=\"Masukan Nama Toko\"\n              text=\"text\"\n              component={ReanderField}\n            />\n          </div>\n          <div className=\"col-4\">\n            <Field\n              name=\"no_hp\"\n              label=\"No Telp\"\n              placeholder=\"Masukan No Telp\"\n              text=\"text\"\n              normalize={NumberOnly}\n              component={ReanderField}\n            />\n          </div>\n          <div className=\"col-4\">\n            <Field\n              name=\"alamat\"\n              label=\"Alamat\"\n              placeholder=\"Masukan Alamat\"\n              text=\"text\"\n              component={ReanderField}\n            />\n          </div>\n          <div className=\"col-12 text-right\">\n            <label> &nbsp;</label>\n            <button\n              className=\"btn btn-primary\"\n              disabled={this.props.isLoading}\n              type=\"submit\"\n            >\n              {this.props.isLoading ? (\n                <>\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\n                  Menyimpan\n                </>\n              ) : (\n                \"Simpan Data\"\n              )}\n            </button>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nFormInput = reduxForm({\n  form: \"FormInput\",\n  enableReinitialize: true,\n})(FormInput);\nexport default connect(maptostate,null)(FormInput);\n","import { getUserdata, localStorageencryp } from \"../../../components/helpers/function\";\nimport {\n  React,\n  connect,\n  Link,\n  reduxForm,\n  Panel,\n  PanelHeader,\n  ToastNotification,\n} from \"../../../components/helpers/library\";\nimport { putData } from \"../../../config/axios\";\nimport FormInput from \"./FormInput\";\n\nclass SettingToko extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n    handleSubmit(data) {\n        let kode_toko = getUserdata().kode_toko;\n        let hasil = {\n            nama_toko : data.nama_toko,\n            no_hp : data.no_hp,\n            alamat : data.alamat,\n        }\n        putData('system/edit/' + kode_toko, hasil).then((res) => {\n            let row = {\n                akses : getUserdata().akses,\n                alamat_toko : data.alamat.toUpperCase(),\n                nama_toko : data.nama_toko.toUpperCase(),\n                no_telp : data.no_hp,\n                kode_toko : getUserdata().kode_toko,\n                level : getUserdata().level,\n                tgl_system : getUserdata().tgl_system,\n                token : getUserdata().token,\n                user_id : getUserdata().user_id,\n                user_name : getUserdata().user_name,\n            }\n            localStorageencryp(\"userdata\", JSON.stringify(row));\n            ToastNotification('success','Data Berhasil Di Update')\n        }).catch((er) => {\n            ToastNotification('info','Data Gagal Di Update')\n        })\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return (\n      <div>\n        <ol className=\"breadcrumb float-xl-right\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"#\">Utility</Link>\n          </li>\n          <li className=\"breadcrumb-item active\">Setting Toko</li>\n        </ol>\n        <h1 className=\"page-header\">Setting Toko </h1>\n        <Panel>\n          <PanelHeader>Setting Toko</PanelHeader>\n          <br />\n          {/* Setting Toko */}\n          <div className=\"container\">\n            <FormInput\n              isLoading={this.state.isLoading}\n              onSubmit={(data) => this.handleSubmit(data)}\n            />\n          </div>\n          <br />\n          {/* End Tambah Setting Toko  */}\n        </Panel>\n      </div>\n    );\n  }\n}\n\nSettingToko = reduxForm({\n  form: \"SettingToko\",\n  enableReinitialize: true,\n})(SettingToko);\nexport default connect(null)(SettingToko);\n"],"sourceRoot":""}