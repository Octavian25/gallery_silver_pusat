{"version":3,"sources":["pages/DataMaster/ParameterHargaEmas/HeadHargaEmas.jsx","pages/DataMaster/ParameterHargaEmas/FormhargaEmas.jsx"],"names":["currencyMask","createNumberMask","prefix","locale","HeadHargaEmas","state","aktif","this","props","dispatch","GetDataGroup","setTimeout","document","getElementById","focus","_this2","react_default","a","createElement","onSubmit","handleSubmit","autoComplete","onKeyPress","e","key","preventDefault","Field","label","name","options","datagroup","filter","list","undefined","kode_group","map","value","nama_group","disabled","isEdit","placeholder","component","ReanderSelect","Object","assign","id","tabIndex","ReanderField","type","onBlur","setState","className","onClick","hideModal","isLoading","Fragment","loading_default","loading","background","loaderColor","Component","reduxForm","form","enableReinitialize","connect","datamaster","ShowModalParameterHargaEmas","initialValues","harga","FormhargaEmas","_this","classCallCheck","_super","call","modalDialog","columns","dataField","text","sort","formatter","cell","parseFloat","toLocaleString","csvExport","headerClasses","rowcontent","row","dataEdit","formEditParameterHargaEmas","bind","assertThisInitialized","getParameterHargaEmas","getMasterToko","data","data_post","putDataNoTImeOut","then","ToastNotification","reset","LoopingEditData","catch","error","ErrorHandling","kode_sales","showModal","_this3","react_router_dom","to","panel","tabel","keyField","exportCsv","ParameterHargaEmas","empty","textEmpty","ModalGlobal","size","title","content","ParameterHargaEmas_HeadHargaEmas","React"],"mappings":"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","file":"static/js/63.86a23cda.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { GetDataGroup, hideModal } from \"../../../actions/datamaster_action\";\nimport { ReanderField, ReanderSelect } from \"../../../components/helpers/field\";\n// import ValidasiMasterSales from \"../../../Validasi/ValidasiMasterSales.jsx\";\nimport { createNumberMask } from \"redux-form-input-masks\";\nimport Loading from 'react-fullscreen-loading';\n\n\nconst currencyMask = createNumberMask({\n  prefix: \"Rp. \",\n  locale: \"kr-KO\",\n});\nconst maptostate = (state) => {\n  if (state.datamaster.ShowModalParameterHargaEmas !== null) {\n    //   console.log(state.datamaster.ShowModalParameterHargaEmas);\n    return {\n      datagroup: state.datamaster.GetDataGroup,\n      initialValues: {\n        kode_group: state.datamaster.ShowModalParameterHargaEmas.kode_group,\n        harga: state.datamaster.ShowModalParameterHargaEmas.harga,\n      },\n    };\n  }\n};\n\nclass HeadHargaEmas extends Component {\n  state = {\n    aktif : false\n  };\n  componentDidMount() {\n    this.props.dispatch(GetDataGroup());\n    setTimeout(() => {\n         document.getElementById(\"harga\").focus();\n    }, 100);\n  }\n  render() {\n    return (\n      <form onSubmit={this.props.handleSubmit}  autoComplete=\"off\"\n      onKeyPress={(e) => {\n        e.key === \"Enter\" && e.preventDefault();\n      }}>\n        <Field\n          label=\"Kode Group\"\n          name=\"kode_group\"\n          options={this.props.datagroup\n            .filter((list) => list.kode_group !== undefined)\n            .map((list) => {\n              let data = {\n                value: list.kode_group,\n                name: list.kode_group + \" - \" + list.nama_group,\n              };\n              return data;\n            })}\n          value={this.props.kode_group}\n          disabled={this.props.isEdit}\n          placeholder={\"Silahkan Pilih Kode Group\"}\n          component={ReanderSelect}\n        />\n        <Field\n          id=\"harga\"\n          name=\"harga\"\n          tabIndex=\"1\"\n          {...currencyMask}\n          component={ReanderField}\n          type=\"text\"\n          label=\"Jumlah Harga\"\n          onBlur={() => this.setState({ aktif: true })}\n          placeholder=\"Masukan Jumlah Harga\"\n        />\n        <div className=\"row\">\n          <div className=\"col-12 text-right\">\n            <button\n              className=\"btn btn-white\"\n              onClick={() => this.props.dispatch(hideModal())}\n              type=\"button\"\n            >\n              Batal\n            </button>\n            &nbsp;\n            <button\n              tabIndex=\"2\"\n              className={this.state.aktif ? \"btn btn-primary\" : \"btn btn-white\"}\n              disabled={this.props.isLoading}\n              type=\"submit\"\n            >\n              {this.props.isLoading ? (\n                <>\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\n                  Menyimpan\n                </>\n              ) : (\n                \"Simpan Data\"\n              )}\n            </button>\n          </div>\n        </div>\n        {this.props.isLoading ? (\n        <Loading \n        loading\n        background=\"rgba(0, 0, 0, 0.35)\"\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\n      ) : null}\n      </form>\n    );\n  }\n}\n\nHeadHargaEmas = reduxForm({\n  form: \"HeadHargaEmas\",\n  enableReinitialize: true,\n  //   validate: ValidasiMasterSales,\n})(HeadHargaEmas);\nexport default connect(maptostate, null)(HeadHargaEmas);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Panel, PanelHeader } from \"../../../components/panel/panel.jsx\";\n\nimport {\n  showModal,\n  hideModal,\n  getParameterHargaEmas,\n  ShowModalParameterHargaEmas,\n  getMasterToko,\n} from \"../../../actions/datamaster_action.jsx\";\nimport { connect } from \"react-redux\";\nimport { ToastNotification } from \"../../../components/helpers/notification.jsx\";\nimport { reset } from \"redux-form\";\nimport { putDataNoTImeOut } from \"../../../config/axios.jsx\";\nimport { ErrorHandling, LoopingEditData } from \"../../../components/helpers/function.jsx\";\nimport Tabel from \"../../../components/helpers/tabel.jsx\";\nimport HeadHargaEmas from \"./HeadHargaEmas.jsx\";\nimport ModalGlobal from \"../../../components/helpers/ModalGlobal.jsx\";\n\nconst maptostate = (state) => {\n  return {\n    ParameterHargaEmas: state.datamaster.getParameterHargaEmas,\n    hideModal: state.datamaster.modalDialog,\n  };\n};\n\nclass FormhargaEmas extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEdit: false,\n      modalDialog: false,\n      isLoading: false,\n      columns: [\n        {\n          dataField: \"kode_group\",\n          text: \"Kode Group\",\n          sort: true,\n        },\n        {\n          dataField: \"nama_group\",\n          text: \"Nama Group\",\n        },\n        {\n          dataField: \"harga\",\n          text: \"Harga\",\n          formatter: (cell) => {\n            return <span>{parseFloat(cell).toLocaleString(\"kr-KO\")}</span>;\n          },\n        },\n        {\n          dataField: \"action\",\n          text: \"Action\",\n          csvExport: false,\n          headerClasses: \"text-center\",\n          formatter: (rowcontent, row) => {\n            let dataEdit = {\n              kode_group: row.kode_group,\n              harga: row.harga,\n            };\n             \n            return (\n              <div className=\"row text-center\">\n                <div className=\"col-12\">\n                  <button\n                    onClick={() => this.formEditParameterHargaEmas(dataEdit)}\n                    className=\"btn btn-primary mr-3\"\n                  >\n                    {\" \"}\n                    <i className=\"fa fa-edit\"></i>\n                  </button>\n                </div>\n              </div>\n            );\n          },\n        },\n      ],\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  componentDidMount() {\n    this.props.dispatch(getParameterHargaEmas());\n    this.props.dispatch(getMasterToko())\n  }\n  handleSubmit(data) {\n    this.setState({\n      isLoading: true,\n    });\n\n    let data_post = {\n      kode_group: data.kode_group,\n      harga: data.harga,\n    };\n    putDataNoTImeOut(\"paraemas/edit/by-kode-group\", data_post)\n      .then(() => {\n        this.props.dispatch(hideModal());\n      })\n      .then(() => {\n        ToastNotification(\"success\", \"Data Berhasil Diedit\");\n      })\n      .then(() => {\n        this.props.dispatch(getParameterHargaEmas());\n      })\n      .then(() => {\n        this.setState({ isLoading: false });\n      })\n      .then(() => {\n        this.props.dispatch(reset(\"HeadHargaEmas\"));\n      })\n      .then((()=> {\n        this.props.dispatch(LoopingEditData(\"paraemas/edit/by-kode-group\", data_post))\n      }))\n      .catch((error) => {\n        ErrorHandling(\n          error,\n          \"sales/reactive/by-kode-sales/\",\n          data.kode_sales,\n          data_post,\n          this.props.dispatch,\n          getParameterHargaEmas(),\n          hideModal(),\n          \"HeadHargaEmas\"\n        ).then(() => {\n          this.setState({ isLoading: false });\n        });\n      });\n  }\n  formEditParameterHargaEmas(dataEdit) {\n    this.props.dispatch(showModal());\n    this.props.dispatch(ShowModalParameterHargaEmas(dataEdit));\n    this.setState({\n      isEdit: true,\n    });\n  }\n  render() {\n    return (\n      <div>\n        <ol className=\"breadcrumb float-xl-right\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"#\">Data Master</Link>\n          </li>\n          <li className=\"breadcrumb-item active\">Parameter Harga Emas</li>\n        </ol>\n        <h1 className=\"page-header\">Parameter Harga Emas </h1>\n        <Panel>\n          <PanelHeader>Parameter Harga Emas</PanelHeader>\n          <br />\n      \n          {/* Parameter Pint */}\n          <div className=\"container\">\n            <Tabel\n              keyField=\"kode_group\"\n              exportCsv={true}\n              data={this.props.ParameterHargaEmas}\n              columns={this.state.columns}\n              empty={this.props.ParameterHargaEmas}\n              textEmpty=\"Parameter Harga Emas Kosong\"\n            />\n          </div>\n          <br />\n          {/* End Master Sales */}\n          <ModalGlobal\n            size=\"P\"\n            title={\n              this.state.isEdit\n                ? \"Edit Parameter Harga Emas\"\n                : \"Tambah Parameter Harga Emas\"\n            }\n            content={\n              <HeadHargaEmas\n                isLoading={this.state.isLoading}\n                isEdit={this.state.isEdit}\n                onSubmit={(data) => this.handleSubmit(data)}\n              />\n            }\n          />\n\n          {/* <Modal  title={ this.state.isEdit ? 'Edit Parameter HargaEmas' : 'Tambah Parameter HargaEmas' } content={ <FormModalKategori isEdit={this.state.isEdit} /> } isOpen={ this.props.hideModal} onSubmit={ (data)=>this.handleSubmit(data) } /> */}\n\n          {/* End Tambah Master Sales  */}\n        </Panel>\n      </div>\n    );\n  }\n}\n\nexport default connect(maptostate, null)(FormhargaEmas);\n"],"sourceRoot":""}