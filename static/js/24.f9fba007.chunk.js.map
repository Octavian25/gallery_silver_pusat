{"version":3,"sources":["pages/ManageUsers/DataUsers/FormDataUser.jsx","pages/ManageUsers/DataUsers/DataUsers.jsx","Validasi/ManageUsers/ValidasiDataUsers.jsx"],"names":["options","value","name","FormTambahUser","state","_this2","this","setTimeout","props","isEdit","document","getElementById","focus","_this3","react_default","a","createElement","onSubmit","handleSubmit","autoComplete","onKeyPress","e","key","preventDefault","Field","id","label","nouperCase","readOnly","placeholder","component","ReanderField","type","className","level","ReanderSelect","Fragment","disabled","submitting","isLoading","onClick","dispatch","hideModal","loading_default","loading","background","loaderColor","Component","reduxForm","form","enableReinitialize","validate","ValidasiDataUsers","connect","manageusers","ShowModalTambahUser","initialValues","user_id","usere_name","SearchBar","Search","ExportCSVButton","CSVExport","hapusDataUser","params","Swal","fire","html","icon","position","cancelButtonText","showCancelButton","confirmButtonText","showConfirmButton","then","result","isConfirmed","deleteData","data","NotifSucces","getDataUser","DataUsers","_this","Object","classCallCheck","_super","call","modalDialog","columns","dataField","text","sort","csvExport","headerClasses","formatter","rowcontent","row","dataEdit","formEditBaki","bind","assertThisInitialized","setState","undefined","NotifInfo","data_edit","user_name","data_post","password","retype_password","putData","reset","catch","error","NotifError","response","test","postData","showModal","react_router_dom","to","panel","react_bootstrap_table2_toolkit_lib_default","keyField","search","exportCSV","fileName","searchProps","lib_default","assign","pagination","paginationFactory","baseProps","csvProps","ModalGlobal","title","size","content","FormDataUser","React","datamaster","errors"],"mappings":"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","file":"static/js/24.f9fba007.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { hideModal } from \"../../../actions/datamaster_action\";\nimport { ReanderField, ReanderSelect } from \"../../../components/helpers/field\";\nimport ValidasiDataUsers from \"../../../Validasi/ManageUsers/ValidasiDataUsers\";\nimport Loading from 'react-fullscreen-loading';\n\nconst options = [\n  { value: \"ADMIN\", name: \"ADMIN\" },\n  { value: \"OWN\", name: \"OWNER\" },\n  { value: \"KASIR\", name: \"KASIR\" },\n  { value: \"SPV\", name: \"SUPERVISOR\" },\n];\nconst maptostate = (state) => {\n  if (state.manageusers.ShowModalTambahUser !== null) {\n    return {\n      initialValues: {\n        user_id: state.manageusers.ShowModalTambahUser.user_id,\n        usere_name: state.manageusers.ShowModalTambahUser.usere_name,\n        level: state.manageusers.ShowModalTambahUser.level,\n        // password: state.manageusers.ShowModalTambahUser.password,\n        // retype_password: state.manageusers.ShowModalTambahUser.retype_password,\n      },\n    };\n  }\n};\nclass FormTambahUser extends Component {\n  state = {};\n  componentDidMount() {\n    setTimeout(() => {\n      this.props.isEdit\n        ? document.getElementById(\"usere_name\").focus()\n        : document.getElementById(\"user_id\").focus();\n    }, 100);\n  }\n  render() {\n    return (\n      <form\n        onSubmit={this.props.handleSubmit}\n        autoComplete=\"off\"\n        onKeyPress={(e) => {\n          e.key === \"Enter\" && e.preventDefault();\n        }}\n      >\n        <Field\n          id=\"user_id\"\n          label=\"User Id\"\n          name=\"user_id\"\n          nouperCase\n          readOnly={this.props.isEdit}\n          placeholder={\"Silahkan Masukan User Id\"}\n          component={ReanderField}\n        />\n        <Field\n          id=\"usere_name\"\n          name=\"usere_name\"\n          component={ReanderField}\n          type=\"text\"\n          nouperCase\n          label=\"Username\"\n          placeholder=\"Masukan Username\"\n        />\n        <div className=\"form-group\">\n          <Field\n            label=\"Level\"\n            name=\"level\"\n            options={options}\n            value={this.props.level}\n            // disabled={this.props.isEdit}\n            placeholder={\"Silahkan Pilih Level\"}\n            component={ReanderSelect}\n          />\n        </div>\n        {!this.props.isEdit ? (\n          <>\n            <Field\n              name=\"password\"\n              component={ReanderField}\n              type=\"password\"\n              label=\"Password\"\n              nouperCase\n              placeholder=\"Masukan Passsword\"\n            />\n          </>\n        ) : null}\n        <div className=\"row\">\n          <div className=\"col-12 text-right\">\n            <button\n              className=\"btn btn-primary\"\n              disabled={this.props.submitting}\n              type=\"submit\"\n            >\n              {this.props.isLoading ? (\n                <>\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\n                  Menyimpan\n                </>\n              ) : (\n                \"Simpan Data\"\n              )}\n            </button>\n            &nbsp;\n            <button\n              className=\"btn btn-white\"\n              onClick={() => this.props.dispatch(hideModal())}\n              type=\"button\"\n              disabled={this.props.isLoading}\n            >\n              Batal\n            </button>\n          </div>\n        </div>\n        {this.props.isLoading ? (\n        <Loading \n        loading\n        background=\"rgba(0, 0, 0, 0.35)\"\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\n      ) : null}\n      </form>\n    );\n  }\n}\n\nFormTambahUser = reduxForm({\n  form: \"ModalTambahUsers\",\n  enableReinitialize: true,\n  validate: ValidasiDataUsers,\n})(FormTambahUser);\nexport default connect(maptostate, null)(FormTambahUser);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Panel, PanelHeader } from \"../../../components/panel/panel.jsx\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport ToolkitProvider, {\n  Search,\n  CSVExport,\n} from \"react-bootstrap-table2-toolkit\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport { hideModal, showModal } from \"../../../actions/datamaster_action.jsx\";\nimport {\n  getDataUser,\n  ShowModalTambahUser,\n} from \"../../../actions/mageuser_action.jsx\";\nimport { connect } from \"react-redux\";\nimport Swal from \"sweetalert2\";\nimport {\n  NotifError,\n  NotifInfo,\n  NotifSucces,\n} from \"../../../components/helpers/notification.jsx\";\nimport { deleteData, postData, putData } from \"../../../config/axios.jsx\";\nimport { reset } from \"redux-form\";\nimport ModalGlobal from \"../../../components/helpers/ModalGlobal.jsx\";\nimport FormDataUser  from \"./FormDataUser.jsx\"\n\nconst { SearchBar } = Search;\nconst { ExportCSVButton } = CSVExport;\n\nconst maptostate = (state) => {\n  return {\n    DataUsers: state.manageusers.getDataUser,\n    hideModal: state.datamaster.modalDialog,\n  };\n};\n\nconst hapusDataUser = (params, dispatch) => {\n  Swal.fire({\n    // title: \"Anda Yakin !!\",\n    // text: \"Ingin Menghapus Data Ini ?\",\n    html:\n      \"Apakah Anda Yakin Ingin \" +\n      \"Menghapus \" +\n      \"<h1><b>User Id \" +\n      params +\n      \"</b> ?</h1>\",\n    icon: \"warning\",\n    position: \"top-center\",\n    cancelButtonText: \"Tidak\",\n    showCancelButton: true,\n    confirmButtonText: \"OK\",\n    showConfirmButton: true,\n  }).then((result) => {\n    if (result.isConfirmed) {\n      deleteData(\"users/delete/id/\" + params, {\n        data: {\n          user_id: params,\n        },\n      }).then(() => {\n        NotifSucces(\"Data Berhasil Di Hapus\").then(() =>\n          dispatch(getDataUser())\n        );\n      });\n    }\n  });\n};\nclass DataUsers extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEdit: false,\n      modalDialog: false,\n      isLoading: false,\n      columns: [\n        {\n          dataField: \"user_id\",\n          text: \"User Id \",\n          sort: true,\n        },\n        {\n          dataField: \"usere_name\",\n          text: \"User Name\",\n        },\n        {\n          dataField: \"level\",\n          text: \"Level\",\n        },\n        {\n          dataField: \"action\",\n          text: \"Action\",\n          csvExport: false,\n          headerClasses: \"text-center\",\n          formatter: (rowcontent, row) => {\n            let dataEdit = {\n              user_id: row.user_id,\n              usere_name: row.usere_name,\n              level: row.level,\n            };\n             \n            return (\n              <div className=\"row text-center\">\n                <div className=\"col-12\">\n                  <button\n                    onClick={() => this.formEditBaki(dataEdit)}\n                    className=\"btn btn-primary mr-3\"\n                  >\n                    <i className=\"fa fa-edit\"></i>\n                  </button>\n                  <button\n                    onClick={() =>\n                      hapusDataUser(row.user_id, this.props.dispatch)\n                    }\n                    className=\"btn btn-danger\"\n                  >\n                    <i className=\"fa fa-trash\"></i>\n                  </button>\n                </div>\n              </div>\n            );\n          },\n        },\n      ],\n      //   DataBaki: [\n      //     {\n      //       user_id: \"TK\",\n      //       usere_name: \"CCKL\",\n      //       level: \"KALUNG MUDA\",\n      //     },\n      //   ],\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  componentDidMount() {\n    this.props.dispatch(getDataUser());\n  }\n  handleSubmit(data) {\n    this.setState({ isLoading: true });\n    if (data.level === undefined) {\n      NotifInfo(\"Silahkan Pilih Status\");\n      return false;\n    }\n    if (data.level === 3) {\n      NotifInfo(\"Silahkan Pilih Status\");\n      return false;\n    }\n    let data_edit = {\n      user_name: data.usere_name,\n      level: data.level,\n      // password_lama: data.password_lama,\n      // password: data.password,\n    };\n    let data_post = {\n      user_id: data.user_id,\n      user_name: data.usere_name,\n      level: data.level,\n      password: data.password,\n      retype_password: data.password,\n    }\n    this.state.isEdit\n      ? putData(\"users/update/id/\" + data.user_id, data_edit)\n          .then(() => {\n            this.props.dispatch(hideModal());\n          })\n          // .then()\n        .then(() => {\n            NotifSucces(\"Data Berhasil Di Edit\")\n            this.props.dispatch(getDataUser());\n          })\n          .then(() => {\n            this.props.dispatch(reset(\"ModalTambahUsers\"));\n          })\n          .then(() => {\n            this.setState({ isLoading: false });\n          })\n          .catch((error) => {\n            this.setState({\n              isLoading: false\n            })\n            NotifError(error.response === undefined ? \"Terjadi Kesalahan Saat Menyimpan Data\" :  /e11000/i.test(error.response.data) ? \"User Id Sudah Terdaftar\" : error.response.data)\n          })\n      : postData(\"users/add/user\", data_post)\n          .then(() => {\n            this.props.dispatch(hideModal());\n          })\n          // .then(NotifSucces(\"Data Berhasil Di Simpan\"))\n        .then(() => {\n          NotifSucces(\"Data Berhasil Di Simpan\")\n            this.props.dispatch(getDataUser());\n          })\n          .then(() => {\n            this.setState({ isLoading: false });\n          })\n          .then(() => {\n            this.props.dispatch(reset(\"ModalTambahUsers\"));\n          })\n          .catch((error) => {\n            this.setState({\n              isLoading: false\n            })\n            NotifError(error.response === undefined ? \"Terjadi Kesalahan Saat Menyimpan Data\" :  /e11000/i.test(error.response.data) ? \"User Id Sudah Terdaftar\" : error.response.data)\n            // NotifError(error.response === undefined ? \"Terjadi Kesalahan Saat Menyimpan Data\" : error.response.data)\n          });\n  }\n  formEditBaki(dataEdit) {\n    this.props.dispatch(showModal());\n    this.props.dispatch(ShowModalTambahUser(dataEdit));\n    this.setState({\n      isEdit: true,\n    });\n  }\n  ShowModalTambahUser() {\n    this.props.dispatch(showModal());\n    this.props.dispatch(ShowModalTambahUser(false));\n    this.setState({\n      isEdit: false,\n    });\n  }\n  render() {\n    return (\n      <div>\n        <ol className=\"breadcrumb float-xl-right\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"#\">Manage Users</Link>\n          </li>\n          <li className=\"breadcrumb-item active\">Data Users</li>\n        </ol>\n        <h1 className=\"page-header\">Data Users </h1>\n        <Panel>\n          <PanelHeader>Data Users</PanelHeader>\n          <br />\n          <div className=\"container\">\n            <ToolkitProvider\n              keyField=\"user_id\"\n              data={this.props.DataUsers || []}\n              columns={this.state.columns}\n              search\n              exportCSV={{\n                fileName: \"Export Data Users.csv\",\n              }}\n            >\n              {(props) => (\n                <div className=\"row\">\n                  <div className=\"col-6\">\n                    <button\n                      onClick={() => this.ShowModalTambahUser()}\n                      className=\"btn btn-primary\"\n                    >\n                      {\" \"}\n                      <i className=\"fa fa-plus\"></i>{\" \"}\n                    </button>\n                  </div>\n                  <div className=\"col-6\">\n                    <div className=\"text-right\">\n                      <SearchBar {...props.searchProps} />\n                    </div>\n                  </div>\n                  <hr />\n                  <div className=\"col-12\">\n                    <BootstrapTable\n                      pagination={paginationFactory()}\n                      {...props.baseProps}\n                    />\n                    <br />\n                  </div>\n                  <div className=\"col-6\">\n                    <ExportCSVButton {...props.csvProps}>\n                        Export CSV!!\n                      </ExportCSVButton>\n                  </div>\n                </div>\n              )}\n            </ToolkitProvider>\n          </div>\n          <br />\n          {/* End Data Users */}\n          <ModalGlobal\n            title={this.state.isEdit ? \"Edit Data Users\" : \"Tambah Data Users\"}\n            size=\"P\"\n            content={\n              <FormDataUser\n                isLoading={this.state.isLoading}\n                isEdit={this.state.isEdit}\n                onSubmit={(data) => this.handleSubmit(data)}\n              />\n            }\n          />\n\n          {/* End Tambah Data Users  */}\n        </Panel>\n      </div>\n    );\n  }\n}\n\nexport default connect(maptostate, null)(DataUsers);\n","const ValidasiDataUsers = (value) => {\n    const errors = {};\n    if (!value.user_id) {\n        errors.user_id = \"User Id Tidak Boleh Kosong\";\n    }\n    if (!value.user_name) {\n        errors.user_name = \"Username Tidak Boleh Kosong\";\n    }\n\n    if (!value.level) {\n        errors.level = \"Level Harus Dipilih \";\n    }\n    // if (!value.password) {\n    //     errors.password = \"Hassword Harus Diisi \";\n    // }\n    // if (!value.retype_password) {\n    //     errors.retype_password = \"Retype Password Harus Diisi \";\n    // }\n\n    return errors;\n}\n\nexport default ValidasiDataUsers;\n\n\n"],"sourceRoot":""}