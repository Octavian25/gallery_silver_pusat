{"version":3,"sources":["pages/Laporan/LaporanPenjualan/LaporanPenjualanTukar/pdf/ExportPenjualanTukar.jsx","pages/Laporan/LaporanPenjualan/LaporanPenjualanTukar/exel/LaporanExelPenjualanTukar.jsx","pages/Laporan/LaporanPenjualan/LaporanPenjualanTukar/HeadFormLaporanPenjualanTukar.jsx"],"names":["ExportBatalPenjualan","tableColumn","data","arguments","length","undefined","doc","jsPDF","tableRows","footRows","finalY","total_baraang","total_qty","total_harga_gram","total_harga_beli","total_berat","setFontSize","text","getUserdata","nama_toko","jml_alamat","alamat_toko","slice","setProperties","title","concat","localStoragedecryp","JSON","parse","tgl_awal","tgl_akhir","content","styles","halign","forEach","item","index","header","no_faktur_group_user","colSpan","push","detail_barang","rows","nama_barang","parseInt","qty","pembulatan","harga_gram","toLocaleString","berat","toFixed","harga_beli","parseFloat","footer","fillColor","textColor","printed","user_id","getToday","fontStyle","autoTable","head","body","foot","startY","theme","rowPageBreak","margin","top","footStyles","fontSize","bodyStyles","headStyles","tableLineColor","tableLineWidth","autoTableEndPosY","pages","internal","getNumberOfPages","pageWidth","pageSize","width","pageHeight","height","j","horizontalPos","verticalPos","setPage","align","string","output","x","window","open","document","write","LaporanExelPenjualanTukar","props","_this","Object","classCallCheck","this","_super","call","state","total_barang","barang","react_default","a","createElement","Fragment","react_html_table_to_excel_default","id","className","table","filename","sheet","buttonText","style","display","textAlign","backgroundColor","color","map","row","Component","HeadFormLaporanPenjualanTukar","date","Date","setStartDate","bind","assertThisInitialized","setLastDate","LaporanDataPenjualan","setState","_this2","databarang","element","detail","kadar","harga_nota","columns","dataField","footerAttrs","cell","num","headerClasses","formatter","onSubmit","handleSubmit","autoComplete","Field","name","component","InputDate","label","type","selected","onChange","placeholder","value","isLoading","tabel","keyField","export","empty","textEmpty","onClick","exportPdf","exel_LaporanExelPenjualanTukar","loading_default","loading","background","loaderColor","reduxForm","form","enableReinitialize","validate","ValidasiTanggalLaporan","connect","initialValues","getTglSystem"],"mappings":"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","file":"static/js/99.a2446619.chunk.js","sourcesContent":["import jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport {\n  getToday,\n  getUserdata,\n  localStoragedecryp,\n  pembulatan,\n} from \"../../../../../components/helpers/function\";\n// Date Fns is used to format the dates we receive\n\n// define a generatePDF function that accepts a tickets argument\nconst ExportBatalPenjualan = (\n  data = \"\",\n  username = \"\",\n  tanggal_dari = \"\",\n  tanggal_sampai = \"\"\n) => {\n  // initialize jsPDF\n  const doc = new jsPDF(\"l\", \"mm\", [297, 210]);\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\n  let tableRows = [];\n  let footRows = [];\n  let tableColumn = [];\n  let finalY = 30;\n  let total_baraang = 0;\n  let total_qty = 0;\n  let total_harga_gram = 0;\n  let total_harga_beli = 0;\n  let total_berat = 0;\n\n  doc.setFontSize(15);\n  doc.text(\"LAPORAN BARANG TUKAR\", 14, 15);\n  doc.setFontSize(20);\n  doc.text(getUserdata().nama_toko, 200, 15);\n  doc.setFontSize(8);\n  let jml_alamat = getUserdata().alamat_toko.length;\n  if (jml_alamat > 20) {\n    doc.text(getUserdata().alamat_toko.slice(0,48), 200, 20);\n  }\n  if (jml_alamat > 50) {\n    doc.text(getUserdata().alamat_toko.slice(48,90), 200, 25);\n  }\n  doc.setFontSize(10);\n  doc.setProperties({\n    title: \"LAPORAN BARANG TUKAR\",\n  });\n  //row 1\n  doc.text(\n    `PERIODE : ${\n      localStoragedecryp(\"tgl_laporan\").length === 0\n        ? null\n        : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\n          \" s/d \" +\n          JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_akhir\n    }`,\n    14,\n    25\n  );\n  tableColumn = [\n    [\n      {\n        content: `NAMA BARANG`,\n      },\n      {\n        content: `QTY`,\n        styles: {\n          halign: 'right'\n        },\n      },\n      {\n        content: `HARGA/GRAM`,\n        styles: {\n          halign: 'right'\n        },\n      },\n      {\n        content: `BERAT`,\n        styles: {\n          halign: 'right'\n        },\n      },\n      \n      {\n        content: `TOTAL HARGA`,\n        styles: {\n          halign: 'right'\n        },\n      },\n    ],\n  ];\n  data.forEach((item, index) => {\n    let tot_qty = 0;\n    let tot_berat = 0;\n    let tot_harga_beli = 0;\n    let tot_harga_gram = 0;\n    let header = [\n      {\n        content: `Nomor Faktur Group : ${\n          item.no_faktur_group_user\n        }`,\n        colSpan: 5,\n      },\n    ];\n    tableRows.push(header);\n    item.detail_barang.forEach((item, index) => {\n      let rows = [\n        item.nama_barang,\n        {\n          content: parseInt(item.qty),\n          styles: {\n            halign: 'right',\n          },\n        },\n        {\n          content:pembulatan(parseInt(item.harga_gram)).toLocaleString(\"kr-KO\"),\n          styles: {\n            halign: 'right',\n          },\n        },\n        {\n          content: item.berat.toFixed(2),\n          styles: {\n            halign: 'right',\n          },\n        },\n        \n        {\n          content:  parseInt(item.harga_beli).toLocaleString(\"kr-KO\"),\n          styles: {\n            halign: 'right',\n          },\n        },\n\n      ];\n      total_qty = parseFloat(total_qty) + parseFloat(item.qty);\n      total_harga_gram = total_harga_gram + parseInt(item.harga_gram);\n      total_berat = total_berat + parseFloat(item.berat);\n      total_harga_beli = total_harga_beli + parseInt(item.harga_beli);\n\n      tot_qty = tot_qty + parseFloat(item.qty);\n      tot_harga_gram = tot_harga_gram + parseInt(item.harga_gram);\n      tot_berat = tot_berat + parseFloat(item.berat);\n      tot_harga_beli = tot_harga_beli + parseInt(item.harga_beli);\n\n      tableRows.push(rows);\n    });\n\n    total_baraang = total_baraang + item.detail_barang.length;\n    // localStorage.setItem('hasil',JSON.stringify(item.detail.length))\n    // console.log();\n    // let total = [\n    //   {\n    //     content: `Sub Total : ${item.detail_barang.length}`,\n    //     colSpan: 1,\n    //     styles: {\n    //       halign: 'center',\n    //       fillColor: \"#E8E5E5\",\n    //       textColor: \"#000\",\n    //     },\n    //   },\n    //   {\n    //     content: `${tot_qty}`,\n    //     styles: {\n    //       halign: 'right',\n    //       fillColor: \"#E8E5E5\",\n    //       textColor: \"#000\",\n    //     },\n    //   },\n    //   {\n    //     content: `${parseInt(tot_harga_gram).toLocaleString(\"kr-KO\")}`,\n    //     styles: {\n    //       halign: 'right',\n    //       fillColor: \"#E8E5E5\",\n    //       textColor: \"#000\",\n    //     },\n    //   },\n    //   {\n    //     content: `${formatGram(tot_berat,3)}`,\n    //     styles: {\n    //       halign: 'right',\n    //       fillColor: \"#E8E5E5\",\n    //       textColor: \"#000\",\n    //     },\n    //   },\n     \n    //   {\n    //     content: `${parseInt(tot_harga_beli).toLocaleString(\"kr-KO\")}`,\n    //     styles: {\n    //       halign: 'right',\n    //       fillColor: \"#E8E5E5\",\n    //       textColor: \"#000\",\n    //     },\n    //   },\n    // ];\n    // tableRows.push(total);\n\n  });\n  let footer = [\n    {\n      content: `Grand Total Barang : ${total_baraang}`,\n      colSpan: 1,\n      styles: {\n        halign: 'center',\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n      },\n    },\n    {\n      content: `${total_qty}`,\n      styles: {\n        halign: 'right',\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n      },\n    },\n    {\n      content: `${pembulatan(parseInt(total_harga_gram)).toLocaleString(\"kr-KO\")}`,\n      styles: {\n        halign: 'right',\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n      },\n    },\n    {\n      content: `${total_berat.toFixed(2)}`,\n      styles: {\n        halign: 'right',\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n      },\n    },\n   \n    {\n      content: `${parseInt(total_harga_beli).toLocaleString(\"kr-KO\")}`,\n      styles: {\n        halign: 'right',\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n      },\n    },\n  ];\n  tableRows.push(footer);\n\n  let printed = [\n    {\n      content: `Printed By ${JSON.parse(localStoragedecryp(\"userdata\")).user_id} / ${getToday()}`,\n      colSpan: 11,\n      styles: {\n        // lineWidth: 0.1,\n        fontStyle: \"italic\",\n        textColor: \"#000\",\n        // fillColor: \"#E8E5E5\"\n      },\n    },\n  ]\n  tableRows.push(printed);\n\n  doc.autoTable({\n    head: tableColumn,\n    body: tableRows,\n    foot: footRows,\n    startY: finalY,\n    theme: \"plain\",\n    rowPageBreak: \"avoid\",\n    // pageBreak: \"avoid\",\n    margin: { top: 10 },\n    footStyles: {\n      // lineWidth: 0.02,\n      // lineColor: \"#000\",\n      fontSize: 8,\n    },\n    bodyStyles: {\n      // lineWidth: 0.02,\n      // lineColor: \"#000\",\n      fontSize: 8,\n    },\n    headStyles: {\n      fontSize: 8,\n      // lineWidth: 0.02,\n      // lineColor: \"#000\",\n      textColor: \"#000\",\n      fillColor: \"#E8E5E5\",\n    },\n    tableLineColor: [255, 255, 255],\n    tableLineWidth: 1,\n  });\n  finalY = doc.autoTableEndPosY() + 3;\n  tableRows = [];\n  footRows = [];\n  // total_baraang = 0;\n  // tot_berat = 0;\n  // tot_onkos = 0;\n  // tot_harga_jual = 0;\n  // tot_harga_gram = 0;\n  // tot_berat_atribut = 0;\n  // tot_harga_atribut = 0;\n  // tot_harga_total = 0;\n  // const date = Date().split(\" \");\n  // we use a date string to generate our filename.\n  // const dateStr = date[2] + date[3] + date[4];\n  // ticket title. and margin-top + margin-left\n  // doc.text(\n  //   `User                           :  ${\n  //     JSON.parse(localStoragedecryp(\"userdata\")).user_id\n  //   }`,\n  //   14,\n  //   finalY + 10\n  // );\n  // doc.text(`Cetak                        : ${getToday()}`, 14, finalY + 16);\n  // doc.text(`Total Barang Yang Di batal : ${total_baraang}`, 14, finalY + 20);\n  const pages = doc.internal.getNumberOfPages();\n  const pageWidth = doc.internal.pageSize.width; //Optional\n  const pageHeight = doc.internal.pageSize.height; //Optional\n  doc.setFontSize(10); //Optional\n  for (let j = 1; j < pages + 1; j++) {\n    let horizontalPos = pageWidth / 2; //Can be fixed number\n    let verticalPos = pageHeight - 10; //Can be fixed number\n    doc.setPage(j);\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\n      align: \"center\",\n    });\n  }\n  // doc.autoPrint();\n  // doc.save(`LAPORAN BATAL PENJUALAN.pdf`);\n  var string = doc.output(\"datauristring\");\n  // var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\n  var x = window.open();\n  x.document.open();\n  x.document.write(\n    \"<html><head><title>LAPORAN BARANG TUKAR</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\n      string +\n      \"></embed></body></html>\"\n  );\n  // x.document.write(embed);\n  // setInterval(() => {\n  //   x.close();\n  // }, 1000);\n};\n\nexport default ExportBatalPenjualan;\n","import React, { Component } from \"react\";\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\nimport { getUserdata, localStoragedecryp, pembulatan } from \"../../../../../components/helpers/function\";\nclass LaporanExelPenjualanTukar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    let qty = 0;\n    let berat = 0;\n    let harga_beli = 0;\n    let harga_gram = 0;\n    let total_barang = 0;\n    this.props.data.forEach((barang, index) => {\n      barang.detail_barang.forEach((item, index) => {\n        qty = qty + item.qty;\n        berat = berat + item.berat;\n        harga_beli = harga_beli + item.harga_beli;\n        harga_gram = harga_gram + item.harga_gram\n      });\n      total_barang = total_barang + barang.detail_barang.length;\n    });\n    return (\n      <>\n        <ReactHTMLTableToExcel\n          id=\"test-table-xls-button\"\n          className=\"btn btn-success btn-block\"\n          table=\"table-to-xls\"\n          filename=\"Laporan Barang Tukar\"\n          sheet=\"Laporan Barang Tukar\"\n          buttonText=\"Export Exel\"\n        />\n        <table id=\"table-to-xls\" style={{ display: \"none\" }}>\n          <thead>\n            <tr>\n              <th colSpan=\"5\" style={{ textAlign: \"center\" }}>\n                {\" \"}\n                LAPORAN BARANG TUKAR{\" \"}\n              </th>\n            </tr>\n            <tr>\n              <th colSpan=\"5\"> Periode </th>\n            </tr>\n            <tr>\n              <th colSpan=\"5\">\n                {\" \"}\n                {localStoragedecryp(\"tgl_laporan\").length === 0\n                  ? null\n                  : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\n                    \" s/d \" +\n                    JSON.parse(localStoragedecryp(\"tgl_laporan\"))\n                      .tgl_akhir}{\" \"}\n              </th>\n            </tr>\n            <tr>\n              <th colSpan=\"5\"> TOKO :  {getUserdata().nama_toko} </th>\n            </tr>\n           \n            <tr>\n              <th colSpan=\"5\"> ALAMAT :  {getUserdata().alamat_toko} </th>\n            </tr>\n            <tr></tr>\n            <tr>\n                  <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\n                    NAMA BARANG\n                  </td>\n                  <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\n                    QTY\n                  </td>\n                  <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\n                    HARGA/GRAM\n              </td>\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\n                    BERAT\n                  </td>\n                  <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign: \"right\" }}>\n                    TOTAL HARGA\n                  </td>\n                </tr>\n          </thead>\n          {this.props.data.map((item, index) => (\n            <>\n              <tbody>\n                {item.detail_barang.map((row, index) => (\n                  <tr>\n                    <td>\n                      {row.nama_barang}\n                    </td>\n                    <td>\n                      {row.qty}\n                    </td>\n                    <td style={{textAlign: \"right\"}}>\n                      {pembulatan(row.harga_gram).toLocaleString(\"kr-KO\")}\n                    </td>\n                    <td style={{textAlign: \"right\"}}>\n                      {row.berat.toFixed(2)}\n                    </td>\n                    <td style={{textAlign: \"right\"}}>\n                      {row.harga_beli.toLocaleString(\"kr-KO\")}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n             \n            </>\n          ))}\n          <tfoot>\n          <tr>\n                  <td colSpan=\"1\" style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",  textAlign: \"center\" }}>\n                    Grand Total Barang : {total_barang}\n                  </td>\n                  <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\", textAlign: \"right\"  }}>\n                    {\" \"}\n                    {qty}{\" \"}\n                  </td>\n                  <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign: \"right\"   }}>\n                    {\" \"}\n                    {pembulatan(harga_gram).toLocaleString(\"kr-KO\")}{\" \"}\n                  </td>\n                  <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\", textAlign: \"right\"  }}>\n                    {\" \"}\n                    {berat.toFixed(2)}{\" \"}\n                  </td>\n                \n                  <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\", textAlign: \"right\"  }}>\n                    {\" \"}\n                    {harga_beli.toLocaleString(\"kr-KO\")}{\" \"}\n                  </td>\n            </tr>\n            </tfoot>\n        </table>\n      </>\n    );\n  }\n}\nexport default LaporanExelPenjualanTukar;\n","import React, { Component } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { InputDate } from \"../../../../components/helpers/field\";\nimport { getTglSystem, pembulatan } from \"../../../../components/helpers/function\";\nimport Tabel from \"../../../../components/helpers/tabel\";\nimport ValidasiTanggalLaporan from \"../../../../Validasi/ValidasiTanggalLaporan\";\n// import LaporanBatalServiceExel from \"./exel/LaporanBatalServiceExel\";\nimport ExportBatalPenjualan from \"./pdf/ExportPenjualanTukar\";\nimport Loading from 'react-fullscreen-loading';\nimport LaporanExelPenjualanTukar from \"./exel/LaporanExelPenjualanTukar\";\n\nclass HeadFormLaporanPenjualanTukar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: new Date(),\n    };\n    // this.handleSubmit = this.handleSubmit.bind(this);\n    this.setStartDate = this.setStartDate.bind(this);\n    this.setLastDate = this.setLastDate.bind(this);\n  }\n\n  exportPdf() {\n    ExportBatalPenjualan(this.props.LaporanDataPenjualan);\n  }\n  setStartDate(date) {\n    this.setState({\n      tgl_awal: new Date(date),\n    });\n  }\n  setLastDate(date) {\n    this.setState({\n      tgl_akhir: new Date(date),\n    });\n  }\n\n  render() {\n    let databarang = [];\n    let qty = 0;\n    let kadar = 0;\n    let berat = 0;\n    let harga_nota = 0;\n    let harga_beli = 0;\n    let harga_gram = 0;\n    this.props.LaporanDataPenjualan.forEach((element) => {\n      element.detail_barang.forEach((detail) => {\n        databarang.push(detail);\n        qty = qty + detail.qty\n        kadar = kadar + detail.kadar\n        berat = berat + detail.berat\n        harga_nota = harga_nota + detail.harga_nota\n        harga_beli = harga_beli + detail.harga_beli\n        harga_gram = harga_gram + detail.harga_gram\n      });\n    });\n    const columns = [\n      // {\n      //   dataField: \"kode_dept\",\n      //   text: \"Jenis\",\n      //   footer: '',\n      // },\n      {\n        dataField: \"nama_barang\",\n        text: \"Nama Barang\",\n        footerAttrs: {\n          colSpan: \"1\",\n        },\n        footer: (cell, row, num, index) => {\n          return <div>Total Barang  : {databarang.length} </div>;\n        },\n      },\n     \n      {\n        dataField: \"qty\",\n        text: \"Qty\",\n        headerClasses: 'text-right',\n        footer: (cell, row, num, index) => {\n          return <div className=\"text-right\">{qty} </div>;\n        },\n        formatter: (cell) => {\n          return <div className=\"text-right\">{cell}</div>;\n        },\n      },\n\n      {\n        dataField: \"harga_gram\",\n        text: \"Harga/Gram\",\n        headerClasses: 'text-right',\n        footer: (cell, row, num, index) => {\n          return <div className=\"text-right\">{pembulatan(harga_gram).toLocaleString(\"kr-KO\")} </div>;\n        },\n        formatter: (cell) => {\n          return <div className=\"text-right\">{pembulatan(cell).toLocaleString(\"kr-KO\")}</div>;\n        },\n      },\n     \n      {\n        dataField: \"berat\",\n        text: \"Berat\",\n        headerClasses: 'text-right',\n        footer: (cell, row, num, index) => {\n          return <div className=\"text-right\">{berat.toFixed(2)} </div>;\n        },\n        formatter: (cell) => {\n          return <div className=\"text-right\">{cell.toFixed(2)}</div>;\n        },\n      },\n      {\n        dataField: \"harga_beli\",\n        text: \"Total Harga\",\n        headerClasses: 'text-right',\n        footer: (cell, row, num, index) => {\n          return <div className=\"text-right\">{harga_beli.toLocaleString(\"kr-KO\")} </div>;\n        },\n        formatter: (cell) => {\n          return <div className=\"text-right\">{cell.toLocaleString(\"kr-KO\")}</div>;\n        },\n      }\n    ];\n    return (\n      <form onSubmit={this.props.handleSubmit} autoComplete=\"off\">\n        <div className=\"row\">\n          <div className=\"col-lg-4\">\n            <Field\n              name=\"tgl_awal\"\n              component={InputDate}\n              label=\"Tanggal Dari\"\n              type=\"text\"\n              selected={this.state.tgl_awal}\n              onChange={(date) => this.setStartDate(date)}\n              placeholder=\"Masukan Tanggal Dari\"\n            />\n          </div>\n\n          <div className=\"col-lg-4\">\n            <Field\n              name=\"tgl_akhir\"\n              component={InputDate}\n              type=\"text\"\n              selected={this.state.tgl_akhir}\n              onChange={(date) => this.setLastDate(date)}\n              label=\"Tanggal Akhir\"\n              placeholder=\"Masukan Tanggal Akhir\"\n            />\n          </div>\n          <div className=\"col-lg-4\">\n            <div className=\"text-right\">\n              <label>&nbsp;</label>\n              <button\n                type=\"submit\"\n                value=\"PDF\"\n                name=\"type_btn\"\n                className=\"btn btn-primary btn-block\"\n              >\n                {this.props.isLoading ? (\n                  <>\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\n                    Mencari\n                  </>\n                ) : (\n                  \"Cari Laporan\"\n                )}\n              </button>\n            </div>\n          </div>\n          <div className=\"col-12\">\n            <Tabel\n              keyField=\"kode_barcode\"\n              data={this.props.export ? databarang  :  []}\n              columns={columns}\n              empty={true}\n              textEmpty=\"Data Laporan Batal Penjualan Kosong\"\n            />\n          </div>\n          \n          <div className={this.props.export ? \"col-lg-12\" : \"col-lg-12 d-none\"}>\n            {/* <label htmlFor=\"\">&nbsp;</label> */}\n            <div className=\"row\">\n              <div className=\"col-lg-6\">\n                <button\n                  type=\"button\"\n                  onClick={() => this.exportPdf()}\n                  className=\"btn btn-warning btn-block\"\n                >\n                  {\" \"}\n                  Export PDF{\" \"}\n                </button>\n              </div>\n              <div className=\"col-lg-6\">\n                <LaporanExelPenjualanTukar data={this.props.LaporanDataPenjualan} />\n              </div>\n            </div>\n          </div>\n        </div>\n        {this.props.isLoading ? (\n        <Loading \n        loading\n        background=\"rgba(0, 0, 0, 0.35)\"\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\n      ) : null}\n      </form>\n    );\n  }\n}\n\nHeadFormLaporanPenjualanTukar = reduxForm({\n  form: \"HeadFormLaporanPenjualanTukar\",\n    enableReinitialize: true,\n  validate: ValidasiTanggalLaporan \n})(HeadFormLaporanPenjualanTukar);\nexport default connect((state) => {\n  return {\n    initialValues: {\n      tgl_awal: getTglSystem(),\n      tgl_akhir: getTglSystem(),\n    },\n  };\n})(HeadFormLaporanPenjualanTukar);\n\n\n// import React, { Component } from \"react\";\n// import { connect } from \"react-redux\";\n// import { Field, reduxForm } from \"redux-form\";\n// import { ReanderField } from \"../../../../components/helpers/field\";\n// import { getToday } from \"../../../../components/helpers/function\";\n// import ValidasiLaporanPenjualanSales from \"../../../../Validasi/Penjualan/ValidasiLaporanPenjualanSales\";\n\n// class HeadFormLaporanPenjualanTukar extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       date: new Date(),\n//     };\n//   }\n//   render() {\n//     return (\n//       <form onSubmit={this.props.handleSubmit} autoComplete=\"off\">\n//         <div className=\"row\">\n//           <div className=\"col-lg-4\">\n//             <Field\n//               name=\"tanggal_awal\"\n//               component={ReanderField}\n//               type=\"date\"\n//               label=\"Dari Tanggal\"\n//               placeholder=\"Masukan Tanggal Awal\"\n//             />\n//           </div>\n//           <div className=\"col-lg-4\">\n//             <Field\n//               name=\"sampai_tgl\"\n//               component={ReanderField}\n//               type=\"date\"\n//               label=\"Sampai Tanggal\"\n//             />\n//           </div>\n\n//           <div className=\"col-lg-4\">\n//             <div className=\"text-right\">\n//               <label>&nbsp;</label>\n//               <button\n//                 type=\"submit\"\n//                 value=\"PDF\"\n//                 name=\"type_btn\"\n//                 className=\"btn btn-primary btn-block\"\n//                 disabled={this.props.isLoading}\n//               >\n//                 {this.props.isLoading ? (\n//                   <>\n//                     <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\n//                     Mencari\n//                   </>\n//                 ) : (\n//                   \"Cari Laporan\"\n//                 )}\n//               </button>\n//             </div>\n//           </div>\n//         </div>\n//       </form>\n//     );\n//   }\n// }\n\n// HeadFormLaporanPenjualanTukar = reduxForm({\n//   form: \"HeadFormLaporanPenjualanTukar\",\n//   enableReinitialize: true,\n//   validate: ValidasiLaporanPenjualanSales,\n// })(HeadFormLaporanPenjualanTukar);\n// // export default connect(null)(HeadFormLaporanPenjualanTukar);\n\n// export default connect((state) => {\n//   return {\n//     initialValues: {\n//       tanggal_awal : getToday(),\n//       sampai_tgl : getToday(),\n//     },\n//   };\n// })(HeadFormLaporanPenjualanTukar);\n"],"sourceRoot":""}