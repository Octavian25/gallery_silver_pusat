{"version":3,"sources":["Validasi/ValidasiMasterKodeTransaksi.jsx","pages/DataMaster/DataKodeTransaksi/FormModalKodeTransaksi.jsx","pages/DataMaster/DataKodeTransaksi/MasterKodeTransaksi.jsx"],"names":["ValidasiMasterKodeTransaksi","value","event","errors","kode_transaksi","FormModalKodeTrransaksi","state","aktif","setTimeout","document","getElementById","focus","_this2","this","react_default","a","createElement","onSubmit","props","handleSubmit","autoComplete","onKeyPress","e","key","preventDefault","isEdit","Fragment","Field","name","component","HiidenFiled","type","readOnly","tabIndex","id","ReanderField","label","placeholder","onBlur","setState","className","onClick","dispatch","hideModal","disabled","isLoading","submitting","loading_default","loading","background","loaderColor","Component","reduxForm","form","enableReinitialize","validate","connect","datamaster","ShowModalKodeTransaksi","initialValues","kode_transaksi_lama","HapusDataKodeTransaksi","params","listToko","Swal","fire","html","icon","position","cancelButtonText","showCancelButton","confirmButtonText","showConfirmButton","then","result","isConfirmed","map","data","deleteParameterHarga","portal","_id","catch","err","ToastNotification","response","deleteData","NotifSucces","getParamterTransaksi","MasterKodeTransaksi","_this","Object","classCallCheck","_super","call","modalDialog","columns","dataField","text","sort","csvExport","headerClasses","formatter","rowcontent","row","dataEdit","FormEditKodeTransaksi","getMasterToko","dataKodeTransaksi","bind","assertThisInitialized","data_edit","data_post","putParameterHarga","reset","error","undefined","putData","console","log","postParameterHarga","_error$response$data","postData","ErrorHandling","showModal","_this3","react_router_dom","to","panel","tabel","keyField","tambahData","handleClick","showModalKodeTranaksi","exportCsv","DataTransaksi","empty","textEmpty","ModalGlobal","title","size","content","FormModalKodeTransaksi","React"],"mappings":"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","file":"static/js/56.938eb110.chunk.js","sourcesContent":["const ValidasiMasterKodeTransaksi = (value,event) => {\r\n    const errors = {};\r\n    // console.log(event.charCode==13);\r\n    if (!value.kode_transaksi) {\r\n        errors.kode_transaksi = \"Kode Transaksi Tidak Boleh Kosong\";\r\n    }\r\n   \r\n    return errors;\r\n}\r\n\r\nexport default ValidasiMasterKodeTransaksi;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { hideModal } from \"../../../actions/datamaster_action\";\r\nimport { HiidenFiled, ReanderField } from \"../../../components/helpers/field\";\r\nimport ValidasiMasterKodeTransaksi from \"../../../Validasi/ValidasiMasterKodeTransaksi.jsx\";\r\nimport Loading from 'react-fullscreen-loading';\r\n\r\nconst maptostate = (state) => {\r\n  if (state.datamaster.ShowModalKodeTransaksi !== null) {\r\n    return {\r\n      initialValues: {\r\n        id: state.datamaster.ShowModalKodeTransaksi.id,\r\n        kode_transaksi: state.datamaster.ShowModalKodeTransaksi.kode_transaksi,\r\n        kode_transaksi_lama:\r\n          state.datamaster.ShowModalKodeTransaksi.kode_transaksi,\r\n      },\r\n    };\r\n  }\r\n};\r\n\r\nclass FormModalKodeTrransaksi extends Component {\r\n  state = {\r\n    aktif: false,\r\n  };\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      document.getElementById(\"kode_transaksi\").focus();\r\n    }, 100);\r\n  }\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit}\r\n        autoComplete=\"off\"\r\n        onKeyPress={(e) => {\r\n          e.key === \"Enter\" && e.preventDefault();\r\n        }}\r\n      >\r\n         {\r\n          this.props.isEdit ? <>\r\n             <Field\r\n              name=\"id\"\r\n              component={HiidenFiled}\r\n              type=\"hidden\"\r\n              readOnly={this.props.isEdit}\r\n            />\r\n          </> : null\r\n        }\r\n        <input type=\"hidden\" name=\"kode_transaksi_lama\" />\r\n        <Field\r\n          tabIndex=\"1\"\r\n          id=\"kode_transaksi\"\r\n          name=\"kode_transaksi\"\r\n          component={ReanderField}\r\n          type=\"text\"\r\n          label=\"Kode Transaksi\"\r\n          placeholder=\"Masukan Kode Transaksi\"\r\n          onBlur={() => this.setState({ aktif: true })}\r\n        />\r\n        {/* <Select options={options} /> */}\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-12 text-right\">\r\n            <button\r\n              className=\"btn btn-white\"\r\n              onClick={() => this.props.dispatch(hideModal())}\r\n              type=\"button\"\r\n              disabled={this.props.isLoading}\r\n            >\r\n              Batal\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              tabIndex=\"2\"\r\n              className={this.state.aktif ? \"btn btn-primary\" : \"btn btn-white\"}\r\n              disabled={this.props.submitting}\r\n              type=\"submit\"\r\n            >\r\n              {this.props.isLoading ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                  Menyimpan\r\n                </>\r\n              ) : (\r\n                \"Simpan Data\"\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {this.props.isLoading ? (\r\n        <Loading \r\n        loading\r\n        background=\"rgba(0, 0, 0, 0.35)\"\r\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\r\n      ) : null}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormModalKodeTrransaksi = reduxForm({\r\n  form: \"ModalKodeTrransaksi\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiMasterKodeTransaksi,\r\n})(FormModalKodeTrransaksi);\r\nexport default connect(maptostate, null)(FormModalKodeTrransaksi);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Panel, PanelHeader } from \"../../../components/panel/panel.jsx\";\r\nimport {\r\n  ShowModalKodeTransaksi,\r\n  showModal,\r\n  getParamterTransaksi,\r\n  hideModal,\r\n  getMasterToko,\r\n} from \"../../../actions/datamaster_action.jsx\";\r\nimport { connect } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n  NotifSucces,\r\n  ToastNotification,\r\n} from \"../../../components/helpers/notification.jsx\";\r\nimport {\r\n  deleteData,\r\n  deleteParameterHarga,\r\n  postData,\r\n  postParameterHarga,\r\n  putData,\r\n  putParameterHarga,\r\n} from \"../../../config/axios.jsx\";\r\nimport { reset } from \"redux-form\";\r\nimport { ErrorHandling } from \"../../../components/helpers/function.jsx\";\r\nimport Tabel from \"../../../components/helpers/tabel.jsx\";\r\nimport ModalGlobal from \"../../../components/helpers/ModalGlobal.jsx\";\r\nimport FormModalKodeTransaksi from \"./FormModalKodeTransaksi.jsx\";\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    DataTransaksi: state.datamaster.getParamterTransaksi,\r\n    hideModal: state.datamaster.modalDialog,\r\n    getMasterToko: state.datamaster.getMasterToko,\r\n  };\r\n};\r\n\r\nconst HapusDataKodeTransaksi = (params, dispatch, listToko) => {\r\n  Swal.fire({\r\n    // title: \"Anda Yakin !!\",\r\n    // text: \"Ingin Menghapus Data Ini ?\",\r\n    html:\r\n      \"Apakah Anda Yakin Ingin \" +\r\n      \"Menghapus \" +\r\n      \"<h1><b>Kode Transaksi \" +\r\n      params.kode_transaksi +\r\n      \"</b> ?</h1>\",\r\n    icon: \"warning\",\r\n    position: \"top-center\",\r\n    cancelButtonText: \"Tidak\",\r\n    showCancelButton: true,\r\n    confirmButtonText: \"OK\",\r\n    showConfirmButton: true,\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      listToko.map((data) => {\r\n        deleteParameterHarga(\r\n          data.portal +\r\n            \"/api/v1/paratransaksi/delete/by-kode-transaksi/\" +\r\n            params._id\r\n        ).catch((err) => {\r\n          ToastNotification(\"error\", err.response.data);\r\n        });\r\n        return true;\r\n      });\r\n      deleteData(\"paratransaksi/delete/by-kode-transaksi/\" + params._id)\r\n        .then(() => {\r\n          NotifSucces(\"Data Berhasil Di Hapus\").then(() =>\r\n            dispatch(getParamterTransaksi())\r\n          );\r\n        })\r\n        .catch((err) => {\r\n          ToastNotification(\"error\", err.response.data);\r\n        });\r\n    }\r\n  });\r\n};\r\nclass MasterKodeTransaksi extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEdit: false,\r\n      modalDialog: false,\r\n      isLoading: false,\r\n      columns: [\r\n        {\r\n          dataField: \"kode_transaksi\",\r\n          text: \"Kode Transaksi \",\r\n          sort: true,\r\n        },\r\n        {\r\n          dataField: \"action\",\r\n          text: \"Action\",\r\n          csvExport: false,\r\n          headerClasses: \"text-center\",\r\n          formatter: (rowcontent, row) => {\r\n            let dataEdit = {\r\n              id: row._id,\r\n              kode_transaksi: row.kode_transaksi,\r\n            };\r\n\r\n            return (\r\n              <div className=\"row text-center\">\r\n                <div className=\"col-12\">\r\n                  <button\r\n                    onClick={() => this.FormEditKodeTransaksi(dataEdit)}\r\n                    className=\"btn btn-primary mr-3\"\r\n                  >\r\n                    <i className=\"fa fa-edit\"></i>\r\n                  </button>\r\n                  <button\r\n                    onClick={() =>\r\n                      HapusDataKodeTransaksi(\r\n                        row,\r\n                        this.props.dispatch,\r\n                        this.props.getMasterToko\r\n                      )\r\n                    }\r\n                    className=\"btn btn-danger\"\r\n                  >\r\n                    <i className=\"fa fa-trash\"></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n      dataKodeTransaksi: [\r\n        {\r\n          kode_transaksi: \"Uang Makan\",\r\n        },\r\n      ],\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getParamterTransaksi());\r\n    this.props.dispatch(getMasterToko());\r\n  }\r\n\r\n  handleSubmit(data) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    let data_edit = {\r\n      kode_transaksi: data.kode_transaksi,\r\n    };\r\n    let data_post = {\r\n      id: data.id,\r\n      kode_transaksi: data.kode_transaksi,\r\n    };\r\n    let listToko = this.props.getMasterToko;\r\n    if (this.state.isEdit) {\r\n      listToko.map((data) => {\r\n        putParameterHarga(\r\n          data.portal +\r\n            \"/api/v1/paratransaksi/edit/by-kode-transaksi/\" +\r\n            data.id,\r\n          data_edit\r\n        )\r\n          .then(() => {\r\n            this.setState({\r\n              isLoading: false,\r\n            });\r\n            this.props.dispatch(hideModal());\r\n          })\r\n          .then(() => {\r\n            this.setState({ isLoading: false });\r\n          })\r\n          .then(() => {\r\n            this.props.dispatch(reset(\"ModalKodeTrransaksi\"));\r\n          })\r\n          .catch((error) => {\r\n            ToastNotification(\r\n              \"info\",\r\n              error.response === undefined\r\n                ? \"Terjadi Kesalahan Saat Megirim Data \"\r\n                : error.response.data\r\n            );\r\n            this.setState({ isLoading: false });\r\n          });\r\n        return true;\r\n      });\r\n      putData(\"paratransaksi/edit/by-kode-transaksi/\" + data.id, data_edit)\r\n        .then(() => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          this.props.dispatch(hideModal());\r\n        })\r\n        .then(() => ToastNotification(\"success\", \"Data Berhasil Diedit\"))\r\n        .then(() => {\r\n          this.props.dispatch(getParamterTransaksi());\r\n        })\r\n        .then(() => {\r\n          this.setState({ isLoading: false });\r\n        })\r\n        .then(() => {\r\n          this.props.dispatch(reset(\"ModalKodeTrransaksi\"));\r\n        })\r\n        .catch((error) => {\r\n          ToastNotification(\r\n            \"info\",\r\n            error.response === undefined\r\n              ? \"Terjadi Kesalahan Saat Megirim Data \"\r\n              : error.response.data\r\n          );\r\n          this.setState({ isLoading: false });\r\n        });\r\n    } else {\r\n      listToko.map((data) => {\r\n        console.log(data.portal);\r\n        // return false;\r\n        postParameterHarga(data.portal + \"/api/v1/paratransaksi/add\", data_post)\r\n          .then(() => {\r\n            this.setState({\r\n              isLoading: false,\r\n            });\r\n            this.props.dispatch(hideModal());\r\n          })\r\n          .then(() => {\r\n            this.props.dispatch(reset(\"ModalKodeTrransaksi\"));\r\n          })\r\n          .then(() => {\r\n            this.setState({ isLoading: false });\r\n          })\r\n          .catch((error) => {\r\n            ToastNotification(\"error\", error.response.data ?? \"Error\");\r\n          });\r\n        return true;\r\n      });\r\n      postData(\"paratransaksi/add\", data_post)\r\n        .then(() => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          this.props.dispatch(hideModal());\r\n        })\r\n        .then(() => {\r\n          ToastNotification(\"success\", \"Data Berhasil Disimpan\");\r\n        })\r\n        .then(() => {\r\n          this.props.dispatch(getParamterTransaksi());\r\n        })\r\n        .then(() => {\r\n          this.props.dispatch(reset(\"ModalKodeTrransaksi\"));\r\n        })\r\n        .then(() => {\r\n          this.setState({ isLoading: false });\r\n        })\r\n        .catch((error) =>\r\n          ErrorHandling(\r\n            error,\r\n            \"paratransaksi/reactive/by-kode-transaksi/\",\r\n            // data.kode_transaksi,\r\n            data_post,\r\n            this.props.dispatch,\r\n            getParamterTransaksi(),\r\n            hideModal(),\r\n            \"ModalKodeTrransaksi\"\r\n          ).then(() => {\r\n            this.setState({ isLoading: false });\r\n          })\r\n        );\r\n    }\r\n  }\r\n\r\n  FormEditKodeTransaksi(dataEdit) {\r\n    this.props.dispatch(showModal());\r\n    this.props.dispatch(ShowModalKodeTransaksi(dataEdit));\r\n    this.setState({\r\n      isEdit: true,\r\n    });\r\n  }\r\n  showModalKodeTranaksi() {\r\n    this.props.dispatch(showModal());\r\n    this.props.dispatch(ShowModalKodeTransaksi(false));\r\n    this.setState({\r\n      isEdit: false,\r\n      isLoading: false,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Data Master</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Master Kode Transaksi</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Master Kode Transaksi </h1>\r\n        <Panel>\r\n          <PanelHeader>Master Kode Transaksi</PanelHeader>\r\n          <br />\r\n\r\n          {/* Master Kode Transaksi */}\r\n          <div className=\"container\">\r\n            <Tabel\r\n              keyField=\"kode_transaksi\"\r\n              tambahData={true}\r\n              handleClick={() => this.showModalKodeTranaksi()}\r\n              exportCsv={true}\r\n              data={this.props.DataTransaksi}\r\n              columns={this.state.columns}\r\n              empty={this.props.DataTransaksi}\r\n              textEmpty=\"Data Jenis Kosong\"\r\n            />\r\n            {/* <ToolkitProvider\r\n              keyField=\"kode_transaksi\"\r\n              data={this.props.DataTransaksi || []}\r\n              columns={this.state.columns}\r\n              search\r\n              exportCSV={{\r\n                fileName: \"Export Master Kondisi Transaksi.csv\",\r\n              }}\r\n            >\r\n              {(props) => (\r\n                <div className=\"row\">\r\n                  <div className=\"col-6\">\r\n                    <button\r\n                      onClick={() => this.showModalKodeTranaksi()}\r\n                      className=\"btn btn-primary\"\r\n                    >\r\n                      {\" \"}\r\n                      <i className=\"fa fa-plus\"></i>{\" \"}\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"col-6\">\r\n                    <div className=\"text-right\">\r\n                      <SearchBar {...props.searchProps} />\r\n                    </div>\r\n                  </div>\r\n                  <hr />\r\n                  <div className=\"col-12\">\r\n                    <BootstrapTable\r\n                      pagination={paginationFactory()}\r\n                      {...props.baseProps}\r\n                    />\r\n                    <br />\r\n                    <ExportCSVButton {...props.csvProps}>\r\n                      Export CSV!!\r\n                    </ExportCSVButton>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </ToolkitProvider> */}\r\n          </div>\r\n          <br />\r\n          {/* End Master Kode Transaksi */}\r\n          <ModalGlobal\r\n            title={\r\n              this.state.isEdit\r\n                ? \"Edit Data Kode Transaksi\"\r\n                : \"Tambah Data Kode Transaksi\"\r\n            }\r\n            size=\"P\"\r\n            content={\r\n              <FormModalKodeTransaksi\r\n                isLoading={this.state.isLoading}\r\n                onSubmit={(data) => this.handleSubmit(data)}\r\n              />\r\n            }\r\n          />\r\n\r\n          {/* End Tambah Master Kode Transaksi  */}\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptostate, null)(MasterKodeTransaksi);\r\n"],"sourceRoot":""}