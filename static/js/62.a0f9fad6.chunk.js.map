{"version":3,"sources":["Validasi/ValidasiMasterKondisiPinjaman.jsx","pages/DataMaster/KondisiPinjaman/FormModalKondisiPinjaman.jsx","pages/DataMaster/KondisiPinjaman/MasterKondisiPinjaman.jsx"],"names":["ValidasiMasterKondisiPinjaman","value","event","errors","kondisi_pinjaman","FormModalKondisiPinjaman","state","aktif","setTimeout","document","getElementById","focus","_this2","this","react_default","a","createElement","onSubmit","props","handleSubmit","autoComplete","type","name","Field","id","tabIndex","component","ReanderField","label","onBlur","setState","placeholder","className","onClick","dispatch","hideModal","disabled","isLoading","Fragment","loading_default","loading","background","loaderColor","Component","reduxForm","form","enableReinitialize","validate","connect","datamaster","ShowModalKondisiPinjaman","initialValues","kondisi_barang_lama","kondisi_barang","hapusDataKondisiPinjaman","params","Swal","fire","html","icon","position","cancelButtonText","showCancelButton","confirmButtonText","showConfirmButton","then","result","isConfirmed","deleteData","NotifSucces","getKondisiPinjaman","catch","err","ToastNotification","response","data","MasterKondisiPinjaman","_this","Object","classCallCheck","_super","call","isEdit","modalDialog","columns","dataField","text","sort","csvExport","headerClasses","formatter","rowcontent","row","dataEdit","formEditKondisiPinjaman","bind","assertThisInitialized","data_edit","data_post","putData","reset","error","postData","ErrorHandling","showModal","_this3","react_router_dom","to","panel","tabel","keyField","tambahData","handleClick","exportCsv","DataKondisiPinjaman","empty","textEmpty","ModalGlobal","title","size","content","KondisiPinjaman_FormModalKondisiPinjaman","React"],"mappings":"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","file":"static/js/62.a0f9fad6.chunk.js","sourcesContent":["const ValidasiMasterKondisiPinjaman = (value, event) => {\n  const errors = {};\n  // console.log(event.charCode==13);\n  if (!value.kondisi_pinjaman) {\n    errors.kondisi_pinjaman = \"Kondisi Pinjaman Tidak Boleh Kosong\";\n  }\n\n  return errors;\n};\n\nexport default ValidasiMasterKondisiPinjaman;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { hideModal } from \"../../../actions/datamaster_action\";\nimport { ReanderField } from \"../../../components/helpers/field\";\nimport ValidasiMasterKondisiPinjaman from \"../../../Validasi/ValidasiMasterKondisiPinjaman.jsx\";\nimport Loading from 'react-fullscreen-loading';\n\nconst maptostate = (state) => {\n  if (state.datamaster.ShowModalKondisiPinjaman !== null) {\n    return {\n      initialValues: {\n        kondisi_barang_lama:\n          state.datamaster.ShowModalKondisiPinjaman.kondisi_barang,\n        kondisi_barang:\n          state.datamaster.ShowModalKondisiPinjaman.kondisi_barang,\n      },\n    };\n  }\n};\nclass FormModalKondisiPinjaman extends Component {\n  state = {\n    aktif: false,\n  };\n\n  componentDidMount() {\n    setTimeout(() => {\n      document.getElementById(\"kondisi_barang\").focus();\n    }, 100);\n  }\n  render() {\n    return (\n      <form onSubmit={this.props.handleSubmit} autoComplete=\"off\">\n        <input type=\"hidden\" name=\"kondisi_barang_lama\" />\n        <Field\n          id=\"kondisi_barang\"\n          tabIndex=\"1\"\n          name=\"kondisi_barang\"\n          component={ReanderField}\n          type=\"text\"\n          label=\" Kondisi Pinjaman\"\n          onBlur={() => this.setState({ aktif: true })}\n          placeholder=\"Masukan  Kondisi Pinjaman\"\n        />\n        <div className=\"row\">\n          <div className=\"col-12 text-right\">\n            <button\n              className=\"btn btn-white\"\n              onClick={() => this.props.dispatch(hideModal())}\n              type=\"button\"\n              disabled={this.props.isLoading}\n            >\n              Batal\n            </button>\n            &nbsp;\n            <button\n              tabIndex=\"2\"\n              className={this.state.aktif ? \"btn btn-primary\" : \"btn btn-white\"}\n              disabled={this.props.isLoading}\n              type=\"submit\"\n            >\n              {this.props.isLoading ? (\n                <>\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\n                  Menyimpan\n                </>\n              ) : (\n                \"Simpan Data\"\n              )}\n            </button>\n          </div>\n        </div>\n        {this.props.isLoading ? (\n        <Loading \n        loading\n        background=\"rgba(0, 0, 0, 0.35)\"\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\n      ) : null}\n      </form>\n    );\n  }\n}\n\nFormModalKondisiPinjaman = reduxForm({\n  form: \"ModalKondisiPinjaman\",\n  enableReinitialize: true,\n  validate: ValidasiMasterKondisiPinjaman,\n})(FormModalKondisiPinjaman);\nexport default connect(maptostate, null)(FormModalKondisiPinjaman);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Panel, PanelBody, PanelHeader } from \"../../../components/panel/panel.jsx\";\nimport {\n  ShowModalKondisiPinjaman,\n  showModal,\n  hideModal,\n  getKondisiPinjaman,\n} from \"../../../actions/datamaster_action.jsx\";\nimport { connect } from \"react-redux\";\nimport Swal from \"sweetalert2\";\nimport {\n  NotifSucces,\n  ToastNotification,\n} from \"../../../components/helpers/notification.jsx\";\nimport { deleteData, postData, putData } from \"../../../config/axios.jsx\";\nimport { reset } from \"redux-form\";\nimport { ErrorHandling } from \"../../../components/helpers/function.jsx\";\nimport Tabel from \"../../../components/helpers/tabel.jsx\";\nimport FormModalKondisiPinjaman from \"./FormModalKondisiPinjaman.jsx\";\nimport ModalGlobal from \"../../../components/helpers/ModalGlobal.jsx\";\n\nconst maptostate = (state) => {\n  return {\n    DataKondisiPinjaman: state.datamaster.getKondisiPinjaman,\n    hideModal: state.datamaster.modalDialog,\n  };\n};\nconst hapusDataKondisiPinjaman = (params, dispatch) => {\n  Swal.fire({\n    // title: \"Anda Yakin !!\",\n    // text: \"Ingin Menghapus Data Ini ?\",\n    html:\n      \"Apakah Anda Yakin Ingin \" +\n      \"Menghapus \" +\n      \"<h1><b>Nama Kondisi \" +\n      params +\n      \"</b> ?</h1>\",\n    icon: \"warning\",\n    position: \"top-center\",\n    cancelButtonText: \"Tidak\",\n    showCancelButton: true,\n    confirmButtonText: \"OK\",\n    showConfirmButton: true,\n  }).then((result) => {\n    if (result.isConfirmed) {\n      deleteData(\"parapinjaman/delete/by-kode-kondisi/\" + params, {}).then(\n        () => {\n          NotifSucces(\"Data Berhasil Di Hapus\").then(() =>\n            dispatch(getKondisiPinjaman())\n          );\n        }\n      );\n    }\n  }).catch((err) => {\n    ToastNotification(\"error\", err.response.data)\n  })\n};\nclass MasterKondisiPinjaman extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEdit: false,\n      isLoading: false,\n      modalDialog: false,\n      columns: [\n        {\n          dataField: \"kondisi_barang\",\n          text: \"Nama Kondisi\",\n          sort: true,\n        },\n        {\n          dataField: \"action\",\n          text: \"Action\",\n          csvExport: false,\n          headerClasses: \"text-center\",\n          formatter: (rowcontent, row) => {\n            let dataEdit = {\n              kondisi_barang: row.kondisi_barang,\n            };\n             \n            return (\n              <div className=\"row text-center\">\n                <div className=\"col-12\">\n                  <button\n                    onClick={() => this.formEditKondisiPinjaman(dataEdit)}\n                    className=\"btn btn-primary mr-3\"\n                  >\n                    <i className=\"fa fa-edit\"></i>\n                  </button>\n                  <button\n                    onClick={() =>\n                      hapusDataKondisiPinjaman(\n                        row.kondisi_barang,\n                        this.props.dispatch\n                      )\n                    }\n                    className=\"btn btn-danger\"\n                  >\n                    <i className=\"fa fa-trash\"></i>\n                  </button>\n                </div>\n              </div>\n            );\n          },\n        },\n      ],\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  componentDidMount() {\n    this.props.dispatch(getKondisiPinjaman());\n  }\n  handleSubmit(data) {\n    this.setState({ isLoading: true });\n    let data_edit = {\n      kondisi_barang: data.kondisi_barang,\n    };\n    let data_post = {\n      kondisi_barang: data.kondisi_barang,\n    };\n    this.state.isEdit\n      ? putData(\n          \"parapinjaman/edit/by-kode-kondisi/\" + data.kondisi_barang_lama,\n          data_edit\n        )\n          .then(() => {\n            this.props.dispatch(hideModal());\n          })\n          .then(() => ToastNotification(\"success\", \"Data Berhasil Diedit\"))\n          .then(() => {\n            this.props.dispatch(getKondisiPinjaman());\n          })\n          .then(() => {\n            this.setState({ isLoading: false });\n          })\n          .then(() => {\n            this.props.dispatch(reset(\"ModalKondisiPinjaman\"));\n          })\n        .catch((error) => {\n          ToastNotification(\"info\", \"Terjadi Kesalahan Saat Mengirim Data\")\n          this.setState({ isLoading: false });\n          })\n      : postData(\"parapinjaman/add\", data_post)\n          .then(() => {\n            this.props.dispatch(hideModal());\n          })\n          .then(() => {\n            ToastNotification(\"success\", \"Data Berhasil Disimpan\");\n          })\n          .then(() => {\n            this.props.dispatch(getKondisiPinjaman());\n          })\n          .then(() => {\n            this.props.dispatch(reset(\"ModalKondisiPinjaman\"));\n          })\n          .then(() => {\n            this.setState({ isLoading: false });\n          })\n          .catch((error) =>\n            ErrorHandling(\n              error,\n              \"parapinjaman/reactive/by-kode-kondisi/\",\n              data.kondisi_barang,\n              data_post,\n              this.props.dispatch,\n              getKondisiPinjaman(),\n              hideModal(),\n              \"ModalKondisiPinjaman\"\n            ).then(() => {\n              this.setState({ isLoading: false });\n            })\n          );\n  }\n\n  formEditKondisiPinjaman(dataEdit) {\n    this.props.dispatch(showModal());\n    this.props.dispatch(ShowModalKondisiPinjaman(dataEdit));\n    this.setState({\n      isEdit: true,\n    });\n  }\n  ShowModalKondisiPinjaman() {\n    this.props.dispatch(showModal());\n    this.props.dispatch(ShowModalKondisiPinjaman(false));\n    this.setState({\n      isEdit: false,\n    });\n  }\n  render() {\n    return (\n      <div>\n        <ol className=\"breadcrumb float-xl-right\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"#\">Data Master</Link>\n          </li>\n          <li className=\"breadcrumb-item active\">Master Kondisi Pinjaman</li>\n        </ol>\n        <h1 className=\"page-header\">Master Kondisi Pinjaman </h1>\n        <Panel>\n          <PanelHeader>Master Kondisi Pinjaman</PanelHeader>\n          <br />\n\n          {/* Master Kondisi Pinjaman */}\n          <PanelBody>\n            <Tabel\n              keyField=\"kondisi\"\n              tambahData={true}\n              handleClick={() => this.ShowModalKondisiPinjaman()}\n              exportCsv={true}\n              data={this.props.DataKondisiPinjaman}\n              columns={this.state.columns}\n              empty={this.props.DataKondisiPinjaman}\n              textEmpty=\"Data Kondisi Pinjaman Kosong\"\n            />\n          </PanelBody>\n          <br />\n          {/* End Master Pinjaman */}\n          <ModalGlobal\n            title={\n              this.state.isEdit\n                ? \"Edit Data Kondisi Pinjaman\"\n                : \"Tambah Data Kondisi Pinjaman\"\n            }\n            size=\"P\"\n            content={\n              <FormModalKondisiPinjaman\n                isEdit={this.state.isEdit}\n                isLoading={this.state.isLoading}\n                onSubmit={(data) => this.handleSubmit(data)}\n              />\n            }\n          />\n\n          {/* End Tambah Master Kondisi Pinjaman  */}\n        </Panel>\n      </div>\n    );\n  }\n}\n\nexport default connect(maptostate, null)(MasterKondisiPinjaman);\n"],"sourceRoot":""}