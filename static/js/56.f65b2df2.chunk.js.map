{"version":3,"sources":["Validasi/ValidasiMasterKodeTransaksi.jsx","pages/DataMaster/DataKodeTransaksi/FormModalKodeTransaksi.jsx","pages/DataMaster/DataKodeTransaksi/MasterKodeTransaksi.jsx"],"names":["ValidasiMasterKodeTransaksi","value","event","errors","kode_transaksi","FormModalKodeTrransaksi","state","aktif","setTimeout","document","getElementById","focus","_this2","this","react_default","a","createElement","onSubmit","props","handleSubmit","autoComplete","onKeyPress","e","key","preventDefault","isEdit","Fragment","Field","name","component","HiidenFiled","type","readOnly","tabIndex","id","ReanderField","label","placeholder","onBlur","setState","className","onClick","dispatch","hideModal","disabled","isLoading","submitting","loading_default","loading","background","loaderColor","Component","reduxForm","form","enableReinitialize","validate","connect","datamaster","ShowModalKodeTransaksi","initialValues","kode_transaksi_lama","HapusDataKodeTransaksi","params","Swal","fire","html","icon","position","cancelButtonText","showCancelButton","confirmButtonText","showConfirmButton","then","result","isConfirmed","deleteData","_id","NotifSucces","getParamterTransaksi","LoopingDeleteData","catch","err","ToastNotification","response","data","MasterKodeTransaksi","_this","Object","classCallCheck","_super","call","modalDialog","columns","dataField","text","sort","csvExport","headerClasses","formatter","rowcontent","row","dataEdit","FormEditKodeTransaksi","dataKodeTransaksi","bind","assertThisInitialized","getMasterToko","data_edit","data_edit_lama","data_post","putData","reset","LoopingEditData","error","undefined","postData","LoopingSendData","ErrorHandling","showModal","_this3","react_router_dom","to","panel","tabel","keyField","tambahData","handleClick","showModalKodeTranaksi","exportCsv","DataTransaksi","empty","textEmpty","ModalGlobal","title","size","content","FormModalKodeTransaksi","React"],"mappings":"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","file":"static/js/56.f65b2df2.chunk.js","sourcesContent":["const ValidasiMasterKodeTransaksi = (value,event) => {\n    const errors = {};\n    // console.log(event.charCode==13);\n    if (!value.kode_transaksi) {\n        errors.kode_transaksi = \"Kode Transaksi Tidak Boleh Kosong\";\n    }\n   \n    return errors;\n}\n\nexport default ValidasiMasterKodeTransaksi;","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { hideModal } from \"../../../actions/datamaster_action\";\nimport { HiidenFiled, ReanderField } from \"../../../components/helpers/field\";\nimport ValidasiMasterKodeTransaksi from \"../../../Validasi/ValidasiMasterKodeTransaksi.jsx\";\nimport Loading from 'react-fullscreen-loading';\n\nconst maptostate = (state) => {\n  if (state.datamaster.ShowModalKodeTransaksi !== null) {\n    return {\n      initialValues: {\n        id: state.datamaster.ShowModalKodeTransaksi.id,\n        kode_transaksi: state.datamaster.ShowModalKodeTransaksi.kode_transaksi,\n        kode_transaksi_lama:\n          state.datamaster.ShowModalKodeTransaksi.kode_transaksi,\n      },\n    };\n  }\n};\n\nclass FormModalKodeTrransaksi extends Component {\n  state = {\n    aktif: false,\n  };\n  componentDidMount() {\n    setTimeout(() => {\n      document.getElementById(\"kode_transaksi\").focus();\n    }, 100);\n  }\n  render() {\n    return (\n      <form\n        onSubmit={this.props.handleSubmit}\n        autoComplete=\"off\"\n        onKeyPress={(e) => {\n          e.key === \"Enter\" && e.preventDefault();\n        }}\n      >\n         {\n          this.props.isEdit ? <>\n             <Field\n              name=\"id\"\n              component={HiidenFiled}\n              type=\"hidden\"\n              readOnly={this.props.isEdit}\n            />\n          </> : null\n        }\n        <input type=\"hidden\" name=\"kode_transaksi_lama\" />\n        <Field\n          tabIndex=\"1\"\n          id=\"kode_transaksi\"\n          name=\"kode_transaksi\"\n          component={ReanderField}\n          type=\"text\"\n          label=\"Kode Transaksi\"\n          placeholder=\"Masukan Kode Transaksi\"\n          onBlur={() => this.setState({ aktif: true })}\n        />\n        {/* <Select options={options} /> */}\n\n        <div className=\"row\">\n          <div className=\"col-12 text-right\">\n            <button\n              className=\"btn btn-white\"\n              onClick={() => this.props.dispatch(hideModal())}\n              type=\"button\"\n              disabled={this.props.isLoading}\n            >\n              Batal\n            </button>\n            &nbsp;\n            <button\n              tabIndex=\"2\"\n              className={this.state.aktif ? \"btn btn-primary\" : \"btn btn-white\"}\n              disabled={this.props.submitting}\n              type=\"submit\"\n            >\n              {this.props.isLoading ? (\n                <>\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\n                  Menyimpan\n                </>\n              ) : (\n                \"Simpan Data\"\n              )}\n            </button>\n          </div>\n        </div>\n        {this.props.isLoading ? (\n        <Loading \n        loading\n        background=\"rgba(0, 0, 0, 0.35)\"\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\n      ) : null}\n      </form>\n    );\n  }\n}\n\nFormModalKodeTrransaksi = reduxForm({\n  form: \"ModalKodeTrransaksi\",\n  enableReinitialize: true,\n  validate: ValidasiMasterKodeTransaksi,\n})(FormModalKodeTrransaksi);\nexport default connect(maptostate, null)(FormModalKodeTrransaksi);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Panel, PanelHeader } from \"../../../components/panel/panel.jsx\";\nimport {\n  ShowModalKodeTransaksi,\n  showModal,\n  getParamterTransaksi,\n  hideModal,\n  getMasterToko,\n} from \"../../../actions/datamaster_action.jsx\";\nimport { connect } from \"react-redux\";\nimport Swal from \"sweetalert2\";\nimport {\n  NotifSucces,\n  ToastNotification,\n} from \"../../../components/helpers/notification.jsx\";\nimport { deleteData, postData, putData } from \"../../../config/axios.jsx\";\nimport { reset } from \"redux-form\";\nimport { ErrorHandling, LoopingDeleteData, LoopingEditData, LoopingSendData } from \"../../../components/helpers/function.jsx\";\nimport Tabel from \"../../../components/helpers/tabel.jsx\";\nimport ModalGlobal from \"../../../components/helpers/ModalGlobal.jsx\";\nimport FormModalKodeTransaksi from \"./FormModalKodeTransaksi.jsx\";\n\nconst maptostate = (state) => {\n  return {\n    DataTransaksi: state.datamaster.getParamterTransaksi,\n    hideModal: state.datamaster.modalDialog,\n  };\n};\n\nconst HapusDataKodeTransaksi = (params, dispatch) => {\n  Swal.fire({\n    // title: \"Anda Yakin !!\",\n    // text: \"Ingin Menghapus Data Ini ?\",\n    html:\n      \"Apakah Anda Yakin Ingin \" +\n      \"Menghapus \" +\n      \"<h1><b>Kode Transaksi \" +\n      params.kode_transaksi +\n      \"</b> ?</h1>\",\n    icon: \"warning\",\n    position: \"top-center\",\n    cancelButtonText: \"Tidak\",\n    showCancelButton: true,\n    confirmButtonText: \"OK\",\n    showConfirmButton: true,\n  }).then((result) => {\n    if (result.isConfirmed) {\n      deleteData(\"paratransaksi/delete/by-kode-transaksi/\" + params._id).then(() => {\n        NotifSucces(\"Data Berhasil Di Hapus\").then(() =>\n          dispatch(getParamterTransaksi())\n        );\n      }).then(() => dispatch(LoopingDeleteData(\"paratransaksi/delete/by-kode-transaksi\", {kode_transaksi: params.kode_transaksi}))).catch((err) => {\n        ToastNotification(\"error\", err.response.data)\n      })\n    }\n  });\n};\nclass MasterKodeTransaksi extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEdit: false,\n      modalDialog: false,\n      isLoading: false,\n      columns: [\n        {\n          dataField: \"kode_transaksi\",\n          text: \"Kode Transaksi \",\n          sort: true,\n        },\n        {\n          dataField: \"action\",\n          text: \"Action\",\n          csvExport: false,\n          headerClasses: \"text-center\",\n          formatter: (rowcontent, row) => {\n            let dataEdit = {\n              id: row._id,\n              kode_transaksi: row.kode_transaksi,\n            };\n             \n            return (\n              <div className=\"row text-center\">\n                <div className=\"col-12\">\n                  <button\n                    onClick={() => this.FormEditKodeTransaksi(dataEdit)}\n                    className=\"btn btn-primary mr-3\"\n                  >\n                    <i className=\"fa fa-edit\"></i>\n                  </button>\n                  <button\n                    onClick={() =>\n                      HapusDataKodeTransaksi(\n                        row,\n                        this.props.dispatch\n                      )\n                    }\n                    className=\"btn btn-danger\"\n                  >\n                    <i className=\"fa fa-trash\"></i>\n                  </button>\n                </div>\n              </div>\n            );\n          },\n        },\n      ],\n      dataKodeTransaksi: [\n        {\n          kode_transaksi: \"Uang Makan\",\n        },\n      ],\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.dispatch(getParamterTransaksi());\n    this.props.dispatch(getMasterToko())\n  }\n\n  handleSubmit(data) {\n    this.setState({\n      isLoading: true,\n    });\n    let data_edit = {\n      kode_transaksi: data.kode_transaksi,\n    };\n    let data_edit_lama = {\n      kode_transaksi_lama: data.kode_transaksi_lama,\n      kode_transaksi: data.kode_transaksi,\n    };\n    let data_post = {\n      id: data.id,\n      kode_transaksi: data.kode_transaksi,\n    };\n    this.state.isEdit\n      ? putData(\n          \"paratransaksi/edit/by-kode-transaksi/\" + data.id,data_edit)\n          .then(() => {\n            this.setState({\n              isLoading: false,\n            });\n            this.props.dispatch(hideModal());\n          })\n          .then(() => ToastNotification(\"success\", \"Data Berhasil Diedit\"))\n          .then(() => {\n            this.props.dispatch(getParamterTransaksi());\n          })\n          .then(() => {\n            this.setState({ isLoading: false });\n          })\n          .then(() => {\n            this.props.dispatch(reset(\"ModalKodeTrransaksi\"));\n          })\n          .then(()=> {\n            this.props.dispatch(LoopingEditData(\"paratransaksi/edit/by-kode-transaksi\", data_edit_lama))\n          })\n          .catch((error) => {\n            ToastNotification(\"info\", error.response === undefined ? \"Terjadi Kesalahan Saat Megirim Data \" : error.response.data)\n          this.setState({ isLoading: false });  \n          })\n      : postData(\"paratransaksi/add\", data_post)\n          .then(() => {\n            this.setState({\n              isLoading: false,\n            });\n            this.props.dispatch(hideModal());\n          })\n          .then(() => {\n            ToastNotification(\"success\", \"Data Berhasil Disimpan\");\n          })\n          .then(() => {\n            this.props.dispatch(getParamterTransaksi());\n          })\n          .then(() => {\n            this.props.dispatch(reset(\"ModalKodeTrransaksi\"));\n          })\n          .then(() => {\n            this.setState({ isLoading: false });\n          })\n          .then(() => {\n            this.props.dispatch(LoopingSendData(\"paratransaksi/add\", data_post))\n          })\n          .catch((error) =>\n            ErrorHandling(\n              error,\n              \"paratransaksi/reactive/by-kode-transaksi/\",\n              // data.kode_transaksi,\n              data_post,\n              this.props.dispatch,\n              getParamterTransaksi(),\n              hideModal(),\n              \"ModalKodeTrransaksi\"\n            ).then(() => {\n              this.setState({ isLoading: false });\n            }).then(() => {\n              this.props.dispatch(LoopingSendData(\"paratransaksi/add\", data_post))\n            })\n          );\n  }\n\n  FormEditKodeTransaksi(dataEdit) {\n    this.props.dispatch(showModal());\n    this.props.dispatch(ShowModalKodeTransaksi(dataEdit));\n    this.setState({\n      isEdit: true,\n    });\n  }\n  showModalKodeTranaksi() {\n    this.props.dispatch(showModal());\n    this.props.dispatch(ShowModalKodeTransaksi(false));\n    this.setState({\n      isEdit: false,\n      isLoading: false,\n    });\n  }\n  render() {\n    return (\n      <div>\n        <ol className=\"breadcrumb float-xl-right\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"#\">Data Master</Link>\n          </li>\n          <li className=\"breadcrumb-item active\">Master Kode Transaksi</li>\n        </ol>\n        <h1 className=\"page-header\">Master Kode Transaksi </h1>\n        <Panel>\n          <PanelHeader>Master Kode Transaksi</PanelHeader>\n          <br />\n\n          {/* Master Kode Transaksi */}\n          <div className=\"container\">\n            <Tabel\n              keyField=\"kode_transaksi\"\n              tambahData={true}\n              handleClick={() => this.showModalKodeTranaksi()}\n              exportCsv={true}\n              data={this.props.DataTransaksi}\n              columns={this.state.columns}\n              empty={this.props.DataTransaksi}\n              textEmpty=\"Data Jenis Kosong\"\n            />\n            {/* <ToolkitProvider\n              keyField=\"kode_transaksi\"\n              data={this.props.DataTransaksi || []}\n              columns={this.state.columns}\n              search\n              exportCSV={{\n                fileName: \"Export Master Kondisi Transaksi.csv\",\n              }}\n            >\n              {(props) => (\n                <div className=\"row\">\n                  <div className=\"col-6\">\n                    <button\n                      onClick={() => this.showModalKodeTranaksi()}\n                      className=\"btn btn-primary\"\n                    >\n                      {\" \"}\n                      <i className=\"fa fa-plus\"></i>{\" \"}\n                    </button>\n                  </div>\n                  <div className=\"col-6\">\n                    <div className=\"text-right\">\n                      <SearchBar {...props.searchProps} />\n                    </div>\n                  </div>\n                  <hr />\n                  <div className=\"col-12\">\n                    <BootstrapTable\n                      pagination={paginationFactory()}\n                      {...props.baseProps}\n                    />\n                    <br />\n                    <ExportCSVButton {...props.csvProps}>\n                      Export CSV!!\n                    </ExportCSVButton>\n                  </div>\n                </div>\n              )}\n            </ToolkitProvider> */}\n          </div>\n          <br />\n          {/* End Master Kode Transaksi */}\n          <ModalGlobal\n            title={\n              this.state.isEdit\n                ? \"Edit Data Kode Transaksi\"\n                : \"Tambah Data Kode Transaksi\"\n            }\n            size=\"P\"\n            content={\n              <FormModalKodeTransaksi\n                isLoading={this.state.isLoading}\n                onSubmit={(data) => this.handleSubmit(data)}\n              />\n            }\n          />\n\n          {/* End Tambah Master Kode Transaksi  */}\n        </Panel>\n      </div>\n    );\n  }\n}\n\nexport default connect(maptostate, null)(MasterKodeTransaksi);\n"],"sourceRoot":""}