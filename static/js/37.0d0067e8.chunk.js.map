{"version":3,"sources":["pages/DataMaster/DataJenis/FormModalDataJenis.jsx","pages/DataMaster/DataJenis/MasterJenis.jsx","Validasi/ValidasiMasterJenis.jsx"],"names":["FormModalDataJenis","props","_this","Object","classCallCheck","this","_super","call","state","listgroup","aktif","_this2","getData","then","res","setState","data","catch","err","console","log","setTimeout","isEdit","document","getElementById","focus","_this3","react_default","a","createElement","onSubmit","handleSubmit","onKeyPress","e","key","preventDefault","autoComplete","Fragment","Field","name","component","HiidenFiled","type","readOnly","className","onChange","setIndex","tabIndex","id","label","options","filter","list","undefined","kode_group","map","value","nama_group","disabled","placeholder","ReanderSelect","ReanderField","onBlur","onClick","dispatch","hideModal","isLoading","submitting","loading_default","loading","background","loaderColor","Component","reduxForm","form","enableReinitialize","validate","ValidasiMasterJenis","connect","datamaster","ShowModalJenis","initialValues","kode_dept","nama_dept","hapusDataJenis","kode","params","Swal","fire","html","icon","position","cancelButtonText","showCancelButton","confirmButtonText","showConfirmButton","result","isConfirmed","deleteData","NotifSucces","getDataJenis","LoopingDeleteData","ToastNotification","response","MasterJenis","modalDialog","columns","dataField","text","sort","csvExport","headerClasses","formatter","rowcontent","row","dataEdit","_id","fomrEditDataJenis","bind","assertThisInitialized","getMasterToko","title","data_edit","data_edit_cabang","data_post","putData","reset","LoopingEditData","error","postData","LoopingSendData","ErrorHandling","showModal","react_router_dom","to","panel","tabel","keyField","tambahData","handleClick","exportCsv","DataJenis","empty","textEmpty","ModalGlobal","size","content","DataJenis_FormModalDataJenis","React","event","errors","kode_kategori","kode_jenis","nama_jenis"],"mappings":"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","file":"static/js/37.0d0067e8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { hideModal } from \"../../../actions/datamaster_action\";\n\nimport { HiidenFiled, ReanderField, ReanderSelect } from \"../../../components/helpers/field\";\nimport { getData } from \"../../../config/axios\";\nimport ValidasiMasterJenis from \"../../../Validasi/ValidasiMasterJenis.jsx\";\nimport Loading from 'react-fullscreen-loading';\n\nconst maptostate = (state) => {\n  if (state.datamaster.ShowModalJenis !== null) {\n    return {\n      initialValues: {\n        // DataGroup: state.datamaster.GetDataGroup,\n        id: state.datamaster.ShowModalJenis.id,\n        kode_group: state.datamaster.ShowModalJenis.kode_group,\n        kode_dept: state.datamaster.ShowModalJenis.kode_dept,\n        nama_dept: state.datamaster.ShowModalJenis.nama_dept,\n      },\n    };\n  }\n};\nclass FormModalDataJenis extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listgroup: [],\n      aktif: false\n    };\n  }\n  componentDidMount() {\n    getData(\"group/get/all\")\n      .then((res) => {\n        this.setState({\n          listgroup: res.data,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    setTimeout(() => {\n      if (this.props.isEdit) {\n        document.getElementById('nama_dept').focus()\n      } else {\n        document.getElementById('kode_group').focus()\n      }\n    }, 100);\n   \n  }\n  setIndex() {\n    document.getElementById('kode_dept').focus()\n  }\n  render() {\n    return (\n      <form\n        onSubmit={this.props.handleSubmit}\n        onKeyPress={(e) => {\n          e.key === \"Enter\" && e.preventDefault();\n        }}\n        autoComplete=\"off\"\n      >\n        {\n          this.props.isEdit ? <>\n             <Field\n              name=\"id\"\n              component={HiidenFiled}\n              type=\"hidden\"\n              readOnly={this.props.isEdit}\n            />\n          </> : null\n        }\n        <div className=\"form-group\">\n          <Field\n            onChange={()=>this.setIndex()}\n            tabIndex=\"1\"\n            id=\"kode_group\"\n            label=\"Kode Group\"\n            name=\"kode_group\"\n            options={this.state.listgroup\n              .filter((list) => list.kode_group !== undefined)\n              .map((list) => {\n                let data = {\n                  value: list.kode_group,\n                  name: list.kode_group + \" - \" + list.nama_group,\n                };\n                return data;\n              })}\n            value={this.props.kode_group}\n            disabled={this.props.isEdit}\n            placeholder={\"Silahkan Pilih Kode Group\"}\n            component={ReanderSelect}\n          />\n        </div>\n        <Field\n          id=\"kode_dept\"\n          tabIndex=\"2\"\n          name=\"kode_dept\"\n          component={ReanderField}\n          type=\"text\"\n          label=\"Kode Jenis\"\n          readOnly={this.props.isEdit}\n          placeholder=\"Masukan Kode Jenis\"\n        />\n        <Field\n          tabIndex=\"3\"\n          id=\"nama_dept\"\n          name=\"nama_dept\"\n          component={ReanderField}\n          type=\"text\"\n          label=\"Nama Jenis\"\n          onBlur={() => this.setState({ aktif: true })}\n          placeholder=\"Masukan Nama Jenis\"\n        />\n\n        <div className=\"row\">\n          <div className=\"col-12 text-right\">\n            <button\n              className=\"btn btn-white\"\n              onClick={() => this.props.dispatch(hideModal())}\n              type=\"button\"\n              disabled={this.props.isLoading}\n            >\n              Batal\n            </button>\n            &nbsp;\n            <button\n              tabIndex=\"3\"\n              className={\n                this.state.aktif ? \"btn btn-primary\" : \"btn btn-white\"\n              }\n              disabled={this.props.submitting}\n              type=\"submit\"\n            >\n              {this.props.isLoading ? (\n                <>\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\n                  Menyimpan\n                </>\n              ) : (\n                \"Simpan Data\"\n              )}\n            </button>\n          </div>\n        </div>\n        {this.props.isLoading ? (\n        <Loading \n        loading\n        background=\"rgba(0, 0, 0, 0.35)\"\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\n      ) : null}\n      </form>\n    );\n  }\n}\n\nFormModalDataJenis = reduxForm({\n  form: \"ModalDataJenis\",\n  enableReinitialize: true,\n  validate: ValidasiMasterJenis,\n})(FormModalDataJenis);\nexport default connect(maptostate, null)(FormModalDataJenis);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Panel, PanelBody, PanelHeader } from \"../../../components/panel/panel.jsx\";\nimport {\n  ShowModalJenis,\n  showModal,\n  getDataJenis,\n  hideModal,\n  getMasterToko,\n} from \"../../../actions/datamaster_action.jsx\";\nimport { connect } from \"react-redux\";\nimport Swal from \"sweetalert2\";\nimport {\n  NotifSucces,\n  ToastNotification,\n} from \"../../../components/helpers/notification.jsx\";\nimport { reset } from \"redux-form\";\nimport { deleteData, postData, putData } from \"../../../config/axios.jsx\";\nimport { ErrorHandling, LoopingDeleteData, LoopingEditData, LoopingSendData } from \"../../../components/helpers/function.jsx\";\nimport Tabel from \"../../../components/helpers/tabel.jsx\";\nimport ModalGlobal from \"../../../components/helpers/ModalGlobal.jsx\";\nimport FormModalDataJenis from \"./FormModalDataJenis.jsx\";\nconst maptostate = (state) => {\n  return {\n    DataJenis: state.datamaster.getDataJenis,\n    hideModal: state.datamaster.modalDialog,\n  };\n};\n\nconst hapusDataJenis = (kode,params, dispatch) => {\n  Swal.fire({\n    // title: 'Anda Yakin !!',\n    // text: 'Ingin Menghapus Data Ini ?',\n    html:\n      \"Apakah Anda Yakin Ingin \" +\n      \"Menghapus \" +\n      \"<h1><b>Kode Jenis \" +\n      kode +\n      \"</b> ?</h1>\",\n    icon: \"warning\",\n    position: \"top-center\",\n    cancelButtonText: \"Tidak\",\n    showCancelButton: true,\n    confirmButtonText: \"OK\",\n    showConfirmButton: true,\n  }).then((result) => {\n    if (result.isConfirmed) {\n      deleteData(\"jenis/delete/by-kode-jenis/\" + params, {\n        data: {\n          kode_group: params,\n        },\n      }).then(() => {\n        NotifSucces(\"Data Berhasil Di Hapus\").then(() =>\n          dispatch(getDataJenis())\n        );\n      })\n      .then(() => dispatch(LoopingDeleteData(\"jenis/delete/by-kode-jenis\", {kode_dept: kode})))\n      .catch((err) => {\n        ToastNotification(\"error\", err.response.data)\n      })\n    }\n  });\n};\nclass MasterJenis extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEdit: false,\n      modalDialog: false,\n      isLoading: false,\n      columns: [\n        {\n          dataField: \"kode_group\",\n          text: \"Kode Group\",\n        },\n        {\n          dataField: \"kode_dept\",\n          text: \"Kode Dept \",\n          sort: true,\n        },\n        {\n          dataField: \"nama_dept\",\n          text: \"Nama Dept\",\n        },\n\n        {\n          dataField: \"action\",\n          text: \"Action\",\n          csvExport: false,\n          headerClasses: \"text-center\",\n          formatter: (rowcontent, row) => {\n            let dataEdit = {\n              id: row._id,\n              kode_dept: row.kode_dept,\n              nama_dept: row.nama_dept,\n              kode_group: row.kode_group,\n            };\n            return (\n              <div className=\"row text-center\">\n                <div className=\"col-12\">\n                  <button\n                    onClick={() => this.fomrEditDataJenis(dataEdit)}\n                    className=\"btn btn-primary mr-3\"\n                  >\n                    {\" \"}\n                    <i className=\"fa fa-edit\"></i>\n                  </button>\n                  <button\n                    onClick={() =>\n                      hapusDataJenis(row.kode_dept,row._id, this.props.dispatch)\n                    }\n                    className=\"btn btn-danger\"\n                  >\n                    <i className=\"fa fa-trash\"></i>\n                  </button>\n                </div>\n              </div>\n            );\n          },\n        },\n      ],\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  componentDidMount() {\n    this.props.dispatch(getDataJenis());\n    this.props.dispatch(getMasterToko())\n  }\n  handleSubmit(data) {\n    this.setState({ isLoading: true });\n    // console.log(data);\n    if (data.kode_dept === undefined) {\n      Swal.fire({\n        title: \"Oopss!! \",\n        text: \"Kode Group Harus Diisi !!!\",\n        icon: \"info\",\n      });\n      this.setState({ isLoading: false });\n      return false;\n    }\n    let data_edit = {\n      nama_dept: data.nama_dept,\n    };\n    let data_edit_cabang = {\n      kode_dept: data.kode_dept,\n      nama_dept: data.nama_dept,\n    };\n    let data_post = {\n      kode_dept: data.kode_dept,\n      nama_dept: data.nama_dept,\n      kode_group: data.kode_group,\n    };\n    console.log(data);\n    console.log(data.id);\n    this.state.isEdit\n      ? putData(\"jenis/edit/by-kode-jenis/\" + data.id, data_edit)\n          .then(() => {\n            this.props.dispatch(hideModal());\n          })\n          .then(() => {\n            ToastNotification(\"success\", \"Data Berhasil Diedit\");\n          })\n          .then(() => {\n            this.props.dispatch(getDataJenis());\n          })\n          .then(() => {\n            this.setState({ isLoading: false });\n          })\n          .then(() => {\n            this.props.dispatch(reset(\"ModalDataJenis\"));\n          })\n          .then(() => this.props.dispatch(LoopingEditData(\"jenis/edit/by-kode-jenis\", data_edit_cabang)))\n        .catch((error) => {\n          ToastNotification(\"info\", error.response === undefined ? \"Terjadi Kesalahan Saat Megirim Data \" : error.response.data)\n          this.setState({ isLoading: false });\n        })\n      : postData(\"jenis/add\", data_post)\n          .then(() => {\n            this.props.dispatch(hideModal());\n          })\n          .then(() => {\n            ToastNotification(\"success\", \"Data Berhasil Disimpan\");\n          })\n          .then(() => {\n            this.props.dispatch(getDataJenis());\n          })\n          .then(() => {\n            this.props.dispatch(reset(\"ModalDataJenis\"));\n          })\n          .then(() => {\n            this.setState({ isLoading: false });\n          })\n          .then(() => this.props.dispatch(LoopingSendData(\"jenis/add\", data_post)))\n          .catch((error) =>\n            ErrorHandling(\n              error,\n              \"jenis/reactive/by-kode-jenis/\",\n              // data.kode_dept,\n              data_post,\n              this.props.dispatch,\n              getDataJenis(),\n              hideModal(),\n              \"ModalDataJenis\"\n            ).then(() => {\n              this.setState({ isLoading: false });\n            })\n          .then(() => this.props.dispatch(LoopingSendData(\"jenis/add\", data_post)))\n          );\n  }\n\n  fomrEditDataJenis(dataEdit) {\n    this.props.dispatch(showModal());\n    this.props.dispatch(ShowModalJenis(dataEdit));\n    this.setState({\n      isEdit: true,\n    });\n  }\n  ShowModalJenis() {\n    this.props.dispatch(showModal());\n    this.props.dispatch(ShowModalJenis(false));\n    this.setState({\n      isEdit: false,\n    });\n  }\n  render() {\n    return (\n      <div>\n        <ol className=\"breadcrumb float-xl-right\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"#\">Data Master</Link>\n          </li>\n          <li className=\"breadcrumb-item active\">Master Jenis</li>\n        </ol>\n        <h1 className=\"page-header\">Master Jenis </h1>\n        <Panel>\n          <PanelHeader>Master Jenis</PanelHeader>\n          <br />\n\n          {/* Master Jenis */}\n          <PanelBody>\n            <Tabel\n              keyField=\"kode_dept\"\n              tambahData={true}\n              handleClick={() => this.ShowModalJenis()}\n              exportCsv={true}\n              data={this.props.DataJenis}\n              columns={this.state.columns}\n              empty={this.props.DataJenis}\n              textEmpty=\"Data Jenis Kosong\"\n            />\n          </PanelBody>\n          <br />\n          {/* End Master Jenis */}\n          <ModalGlobal\n            size=\"P\"\n            title={this.state.isEdit ? \"Edit Data Jenis\" : \"Tambah Data Jenis\"}\n            content={\n              <FormModalDataJenis\n                isLoading={this.state.isLoading}\n                isEdit={this.state.isEdit}\n                onSubmit={(data) => this.handleSubmit(data)}\n              />\n            }\n          />\n\n          {/* End Tambah Master Jenis  */}\n        </Panel>\n      </div>\n    );\n  }\n}\n\nexport default connect(maptostate, null)(MasterJenis);\n","const ValidasiMasterJenis = (value,event) => {\n    const errors = {};\n    // console.log(event.charCode==13);\n    if (!value.kode_group) {\n        errors.kode_kategori = \"Kode Kategori Tidak Boleh Kosong\";\n    }\n    if (!value.kode_jenis) {\n        errors.kode_jenis = \"Kode Jenis Tidak Boleh Kosong\";\n    }\n    if (!value.nama_jenis) {\n        errors.nama_jenis = \"Nama Jenis Tidak Boleh Kosong\";\n    }\n    // console.log(value.kode_group);\n   \n    return errors;\n}\n\nexport default ValidasiMasterJenis;"],"sourceRoot":""}