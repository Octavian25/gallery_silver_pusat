{"version":3,"sources":["pages/Pesanan/LihatPesanan/HeadPesanan.jsx","pages/Pesanan/LihatPesanan/HeadInputPembayaran.jsx","pages/Pesanan/LihatPesanan/ModalPembayaran.jsx","pages/Pesanan/LihatPesanan/index.jsx","Validasi/Penjualan/ValidasiPembayaran.jsx"],"names":["HeadPesanan","props","_this","Object","classCallCheck","this","_super","call","state","date","Date","setStartDate","bind","assertThisInitialized","setLastDate","data","setState","tgl_awal","tgl_akhir","_this2","library","createElement","onSubmit","handleSubmit","onKeyPress","e","key","preventDefault","autoComplete","className","name","component","InputDate","label","type","selected","onChange","placeholder","value","isLoading","Fragment","loading_default","a","loading","background","loaderColor","React","Component","reduxForm","form","enableReinitialize","connect","initialValues","getTglSystem","currencyMask","createNumberMask","prefix","locale","jenis_pembayaran","HeadInputPembayaran","type_pembayaran","columns","dataField","text","footerAttrs","colSpan","footer","dispatch","getDataSales","data_barang_penjualan","JSON","parse","localStoragedecryp","setTimeout","localStorage","getItem","total","forEach","element","nominal","total_bayar","NumberOnly","document","getElementById","change","parseInt","total_harga","focus","kembali","nominal_kembali","_this3","assign","id","ReanderField","hitungTotal","readOnly","options","pilihPembyaran","ReanderSelect","style","display","tabIndex","normalize","validate","ValidasiPembayaran","selector","formValueSelector","_selector","cash","grand_total_pembayaran","hasil","parseFloat","harus_bayar_rp","toString","replace","nominal_cash","ModalPembayaran","kembalian","formatter","cell","toLocaleString","columnData","reduce","acc","item","csvExport","headerClasses","rowcontent","row","index","disabled","status","onClick","hapusdata","Swal","fire","title","icon","position","cancelButtonText","showCancelButton","confirmButtonText","showConfirmButton","then","result","isConfirmed","splice","setItem","undefined","no_card","jenis","ToastNotification","datacek","total_transaksi","sisa_bayar","nama_bank","length","console","log","b","findIndex","keterangan","fee","push","masuk","data_pembayaran","map","element2","LihatPesanan_HeadInputPembayaran","simpanPembayaran","keyField","exportCsv","empty","pagination","textEmpty","isLoadingPembayran","data_barang","no_titip_group","no_pesanan","LihatPesanan","datapesanan","status_pesanan","data-tooltip","batalPesanan","pembyaran","pembayaran","jumlah_rp","postData2","res","showModal","catch","err","tanggal","putData2","getData2","pesanan","nama_customer","no_hp","jumlah_bayar","tanggal_transaksi","detail_barang","error","test","response","message","_this4","data_post","formatDate","moment","format","_this5","expandRow","renderer","detail","kode_kategori","perkiraan_berat","toFixed","perkiraan_kadar","harga_gram","attribut","harga_atribut","kode_barcode","ongkos","sub_total","deskripsi","deskripsi_contoh","showExpandColumn","to","LihatPesanan_HeadPesanan","size","content","LihatPesanan_ModalPembayaran","isLoadingPembayranTitipan","bayarTitipan","simpanPembayaranAmbilPesanan","errors"],"mappings":"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","file":"static/js/29.d5184ac7.chunk.js","sourcesContent":["import { React, connect, reduxForm, InputDate, Field, getTglSystem } from \"../../../components/helpers/library\";\nimport Loading from 'react-fullscreen-loading';\n\nclass HeadPesanan extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: new Date(),\n    };\n    this.setStartDate = this.setStartDate.bind(this);\n    this.setLastDate = this.setLastDate.bind(this);\n  }\n\n  handleSubmit(data) {}\n  setStartDate(date) {\n    this.setState({\n      tgl_awal: new Date(date),\n    });\n  }\n  setLastDate(date) {\n    this.setState({\n      tgl_akhir: new Date(date),\n    });\n  }\n  render() {\n    return (\n      <div>\n        <form\n          onSubmit={this.props.handleSubmit}\n          onKeyPress={(e) => {\n            e.key === \"Enter\" && e.preventDefault();\n          }}\n          autoComplete=\"off\"\n        >\n          <div className=\"row\">\n            <div className=\"col-lg-4\">\n              <Field\n                name=\"tgl_awal\"\n                component={InputDate}\n                label=\"Tanggal Dari\"\n                type=\"text\"\n                selected={this.state.tgl_awal}\n                onChange={(date) => this.setStartDate(date)}\n                placeholder=\"Masukan Tanggal Dari\"\n              />\n            </div>\n\n            <div className=\"col-lg-4\">\n              <Field\n                name=\"tgl_akhir\"\n                component={InputDate}\n                type=\"text\"\n                selected={this.state.tgl_akhir}\n                onChange={(date) => this.setLastDate(date)}\n                label=\"Tanggal Akhir\"\n                placeholder=\"Masukan Tanggal Akhir\"\n              />\n            </div>\n\n            <div className=\"col-lg-4\">\n              <div className=\"text-right\">\n                <label>&nbsp;</label>\n                <button\n                  type=\"submit\"\n                  value=\"PDF\"\n                  name=\"type_btn\"\n                  className=\"btn btn-primary btn-block\"\n                >\n                  {this.props.isLoading ? (\n                    <>\n                      <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\n                      Mencari\n                    </>\n                  ) : (\n                    \"Cari Pesanan\"\n                  )}\n                </button>\n              </div>\n            </div>\n          </div>\n          {this.props.isLoading ? (\n        <Loading \n        loading\n        background=\"rgba(0, 0, 0, 0.35)\"\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\n      ) : null}\n        </form>\n      </div>\n    );\n  }\n}\n\nHeadPesanan = reduxForm({\n  form: \"HeadPesanan\",\n  enableReinitialize: true,\n})(HeadPesanan);\n\nexport default connect((state) => {\n  return {\n    initialValues: {\n      tgl_awal: getTglSystem(),\n      tgl_akhir: getTglSystem(),\n    },\n  };\n})(HeadPesanan);\n","import {\n  React,\n  Component,\n  connect,\n  Field,\n  createNumberMask,\n  formValueSelector,\n  reduxForm,\n  NumberOnly,\n  localStoragedecryp,\n  ReanderField,\n  ReanderSelect,\n} from \"../../../components/helpers/library\";\nimport { getDataSales } from \"../../../actions/datamaster_action\";\nimport ValidasiPembayaran from \"../../../Validasi/Penjualan/ValidasiPembayaran\";\n\nconst currencyMask = createNumberMask({\n  prefix: \"Rp. \",\n  locale: \"kr-KO\",\n});\nconst jenis_pembayaran = [\n  {\n    value: \"CASH\",\n    name: \"CASH\",\n  },\n  {\n    value: \"DEBET\",\n    name: \"DEBET\",\n  },\n  {\n    value: \"TRANSFER\",\n    name: \"TRANSFER\",\n  },\n  {\n    value: \"CREDIT\",\n    name: \"CREDIT\",\n  },\n];\nclass HeadInputPembayaran extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      type_pembayaran: \"CASH\",\n      columns: [\n        // {\n        //   dataField: \"nama_bank\",\n        //   text: \"Nama Bank\",\n        //   footerAttrs: {\n        //     colSpan: \"2\",\n        //   },\n        //   footer: \"Grand Total\",\n        // },\n        {\n          dataField: \"type\",\n          text: \"Type\",\n          footerAttrs: {\n            colSpan: \"1\",\n          },\n          footer: \"Grand Total\",\n        },\n        {\n          dataField: \"Total\",\n          text: \"Total\",\n          footer: \"\",\n        },\n      ],\n    };\n  }\n  componentDidMount() {\n    this.props.dispatch(getDataSales());\n    let data_barang_penjualan = JSON.parse(\n      localStoragedecryp(\"data_barang_ambil_pesanan\")\n    );\n\n    setTimeout(() => {\n      // console.log();\n      let data = JSON.parse(localStorage.getItem(\"trx_pemabayran_ambil_pesanan\")) || [];\n      let total = 0;\n      data.forEach((element) => {\n        total = element.nominal + total;\n      });\n      let total_bayar = NumberOnly(document.getElementById('grand_total_pembayaran').value);\n      this.props.change('harus_bayar_rp',parseInt(total_bayar) - parseInt(total))\n    }, 100);\n\n    // let total_dp = getItem(\"total_dp\");\n    // this.props.change(\"total_dp\", total_dp);\n  \n    this.props.change(\"grand_total_pembayaran\", data_barang_penjualan.total_harga);\n    // this.props.change(\"harus_bayar_rp\", total);\n    this.props.change(\"jenis\", \"CASH\");\n    setTimeout(() => {\n      document.getElementById(\"cash_trx_penjualan\").focus();\n    }, 100);\n  }\n  hitungTotal() {\n    // console.log(this.props.nominal_kembali);\n    this.props.change(\"kembali\", this.props.kembali);\n    this.props.change(\"nominal_kembali\", this.props.nominal_kembali);\n  }\n\n  pilihPembyaran(e) {\n    if (e === \"CASH\") {\n      this.setState({\n        type_pembayaran: \"CASH\",\n      });\n    } else if (e === \"TRANSFER\") {\n      this.setState({\n        type_pembayaran: \"TRANSFER\",\n      });\n    } else if (e === \"DEBET\") {\n      this.setState({\n        type_pembayaran: \"DEBET\",\n      });\n    } else {\n      this.setState({\n        type_pembayaran: \"CREDIT\"\n      })\n    }\n    this.props.change(\"cash\", \"\");\n\n  }\n  render() {\n    return (\n      <form\n        onSubmit={this.props.handleSubmit}\n        onKeyPress={(e) => {\n          e.key === \"Enter\" && e.preventDefault();\n        }}\n        autoComplete=\"off\"\n      >\n        <div className=\"row\">\n          <div className=\"col-6\">\n            <Field\n              id=\"grand_total_pembayaran\"\n              name=\"grand_total_pembayaran\"\n              component={ReanderField}\n              type=\"text\"\n              onChange={this.hitungTotal()}\n              readOnly={true}\n              {...currencyMask}\n              label=\"Total Harga Jual\"\n              placeholder=\"Total Harga Jual\"\n            />\n          </div>\n          \n          <div className=\"col-6\">\n            <Field\n              id=\"harus_bayar_rp\"\n              name=\"harus_bayar_rp\"\n              component={ReanderField}\n              type=\"text\"\n              onChange={this.hitungTotal()}\n              readOnly={true}\n              {...currencyMask}\n              label=\"Harus Bayar Rp\"\n              placeholder=\"Harus Bayar Rp\"\n            />\n          </div>\n          <div className=\"col-6\">\n            <Field\n              name=\"jenis\"\n              label=\"Pilih Jenis Bayar\"\n              placeholder=\"Pilih Jenis Pembayaran\"\n              options={jenis_pembayaran}\n              onChange={(e) => this.pilihPembyaran(e)}\n              component={ReanderSelect}\n            />\n          </div>\n\n          <div\n            className=\"col-6\"\n            style={{\n              display:\n                this.state.type_pembayaran === \"CASH\"\n                  ? \"none\"\n                  : this.state.type_pembayaran === \"DEBET\"\n                  ? \"block\"\n                  : \"block\",\n            }}\n          >\n            <Field\n              tabIndex=\"1\"\n              name=\"nama_bank\"\n              id=\"nama_bank\"\n              component={ReanderField}\n              type=\"text\"\n              label=\"Bank\"\n              placeholder=\"Masukan Nama Bank\"\n            />\n          </div>\n          <div\n            className=\"col-6\"\n            style={{\n              display:\n                this.state.type_pembayaran === \"CASH\"\n                  ? \"none\"\n                  : this.state.type_pembayaran === \"DEBET\"\n                  ? \"none\"\n                  : \"block\",\n            }}\n          >\n            <Field\n              tabIndex=\"1\"\n              name=\"no_card\"\n              id=\"no_card\"\n              component={ReanderField}\n              type=\"text\"\n              label=\"Card No\"\n              placeholder=\"Masukan Card No\"\n            />\n          </div>\n          <div className=\"col-6\">\n            <Field\n              tabIndex=\"1\"\n              name=\"cash\"\n              id=\"cash_trx_penjualan\"\n              component={ReanderField}\n              type=\"text\"\n              label=\"Nominal\"\n              onChange={this.hitungTotal()}\n              {...currencyMask}\n              normalize={NumberOnly}\n              placeholder=\"Masukan Nominal\"\n            />\n          </div>\n          <div className=\"col-6\" \n          style={{\n              display:\n                this.state.type_pembayaran === \"CREDIT\"\n                  ? \"block\"\n                  : \"none\"\n            }}>\n            <Field\n              tabIndex=\"1\"\n              name=\"fee\"\n              id=\"fee\"\n              component={ReanderField}\n              type=\"text\"\n              label=\"Fee (%)\"\n              normalize={NumberOnly}\n              placeholder=\"5\"\n            />\n          </div>\n          <div className=\"col-6 d-none\">\n            <Field\n              tabIndex=\"1\"\n              name=\"nominal_kembali\"\n              component={ReanderField}\n              type=\"text\"\n              label=\"Nominal\"\n              placeholder=\"Masukan Nominal\"\n            />\n          </div>\n          <div className=\"col-6\">\n            <Field\n              name=\"kembali\"\n              id=\"sisa_bayar\"\n              component={ReanderField}\n              type=\"text\"\n              readOnly={true}\n              label=\"Sisa\"\n              //   {...currencyMask}\n              normalize={NumberOnly}\n              placeholder=\"Sisa Pembayaran\"\n            />\n          </div>\n          <div\n            className={\n              this.state.type_pembayaran === \"CASH\"\n                ? \"col-6 text-right\"\n                : this.state.type_pembayaran === \"TRANSFER\"\n                ? \"col-6 text-right\"\n                : \"col-12 text-right\"\n            }\n          >\n            <br />\n            <label>&nbsp;</label>\n            <button tabIndex=\"2\" className=\"btn btn-primary\">\n              {\" \"}\n              <i className=\"fa fa-plus\"></i>\n            </button>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nHeadInputPembayaran = reduxForm({\n  form: \"HeadInputPembayaran\",\n  enableReinitialize: true,\n  validate: ValidasiPembayaran,\n})(HeadInputPembayaran);\n\nconst selector = formValueSelector(\"HeadInputPembayaran\"); // <-- same as form name\n\nexport default connect((state) => {\n  const { cash,grand_total_pembayaran } = selector(\n    state,\n    \"grand_total_pembayaran\",\n    \"cash\"\n  );\n  let data = JSON.parse(localStorage.getItem(\"trx_pemabayran_ambil_pesanan\")) || [];\n  let total = 0;\n  data.forEach((element) => {\n    total = element.nominal + total;\n  });\n  let hasil = parseFloat(total || 0) - parseFloat(grand_total_pembayaran || 0);\n  return {\n    harus_bayar_rp: hasil,\n    kembali: hasil.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\n    nominal_cash: cash,\n    nominal_kembali : hasil + parseInt(cash)\n  };\n})(HeadInputPembayaran);\n","import {\n  React,\n  reduxForm,\n  Component,\n  connect,\n  getItem,\n  setItem,\n  Tabel,\n  Swal,\n  ToastNotification,\n} from \"../../../components/helpers/library\";\n\nimport ValidasiPembayaran from \"../../../Validasi/Penjualan/ValidasiPembayaran\";\nimport HeadInputPembayaran from \"./HeadInputPembayaran\";\n\n// data_barang_penjualan_tmp\n\nconst maptostate = (state) => {\n  let data_barang = getItem(\"data_barang_pesanan\") || [];\n  let status = \"PENJUALAN\";\n  data_barang.forEach((element) => {\n    if (element.no_titip_group === \"-\") {\n      status = \"PENJUALAN\";\n    } if (element.no_pesanan === \"-\") {\n      status = \"PESANAN\";\n    } else {\n      status = \"TITIPAN\";\n    }\n  });\n  return {\n    status: status,\n  };\n};\nclass ModalPembayaran extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      type_pembayaran: \"CASH\",\n      kembalian: \"\",\n      columns: [\n        {\n          dataField: \"jenis\",\n          text: \"Jenis\",\n          footerAttrs: {\n            colSpan: \"2\",\n          },\n          footer: \"Grand Total\",\n        },\n        {\n          dataField: \"keterangan\",\n          text: \"Keterangan\",\n        },\n        {\n          dataField: \"nominal\",\n          text: \"Total\",\n          formatter: (cell) => {\n            return <span>{parseInt(cell).toLocaleString(\"kr-KO\")}</span>;\n          },\n          footer: (columnData) =>\n            parseInt(\n              columnData.reduce((acc, item) => acc + item, 0)\n            ).toLocaleString(\"kr-KO\"),\n        },\n        {\n          dataField: \"action\",\n          text: \"Action\",\n          csvExport: false,\n          headerClasses: \"text-center\",\n          formatter: (rowcontent, row, index) => {\n            return (\n              <div className=\"row text-center\">\n                <div className=\"col-12\">\n                  <button\n                    type=\"button\"\n                    disabled={row.status === \"DONE\" ? true : false}\n                    onClick={() => this.hapusdata(index)}\n                    className=\"btn btn-danger mr-3\"\n                  >\n                    <i className=\"fa fa-trash\"></i>\n                  </button>\n                </div>\n              </div>\n            );\n          },\n          footer: \"\",\n        },\n      ],\n    };\n  }\n  hapusdata(id) {\n    Swal.fire({\n      title: \"Anda Yakin !!\",\n      text: \"Ingin Menghapus Data Ini ?\",\n      icon: \"warning\",\n      position: \"top-center\",\n      cancelButtonText: \"Tidak\",\n      showCancelButton: true,\n      confirmButtonText: \"OK\",\n      showConfirmButton: true,\n    }).then((result) => {\n      // console.log(id);\n      if (result.isConfirmed) {\n        let data = getItem(\"trx_pemabayran_ambil_pesanan\");\n        data.splice(id, 1);\n        setItem(\"trx_pemabayran_ambil_pesanan\", data);\n        this.setState({\n          status: \"berhasil\",\n        });\n        // deleteLocalItemBarcode(\"data_barang_hancur_tmp\", id);\n        // this.props.dispatch(getListReturnSupplier());\n      }\n    });\n  }\n  simpanPembayaran(row) {\n    if(row.no_card === undefined && row.jenis !== \"CASH\" && row.jenis !== \"DEBET\"){\n      ToastNotification(\"info\", \"Nomor kartu tidak boleh kosong\");\n      return false;\n    }\n    let datacek = {\n      total_transaksi : row.grand_total_pembayaran,\n      sisa_bayar : row.nominal_kembali\n    }\n    // console.log(row);\n    if(row.nama_bank === undefined && row.jenis !== \"CASH\"){\n      ToastNotification(\"info\", \"Nama Bank tidak boleh kosong\");\n      return false;\n    }\n    if(row.cash === undefined || row.cash === \"0\"){\n      ToastNotification(\"info\", \"Nominal tidak boleh kosong\");\n      return false;\n    }\n    setItem('sisa_bayar_pesanan',datacek)\n    let data = JSON.parse(localStorage.getItem(\"trx_pemabayran_ambil_pesanan\")) || [];\n    if (row.jenis !== \"CASH\" && !data.length) {\n      if (row.kembali.replace(/[^0-9]/g, \"\") - row.cash < 0) {\n        ToastNotification(\"info\", \"Pembayaran tidak boleh lebih dari sisa\");\n        return false;\n      }\n    } else {\n      if(row.jenis !== \"CASH\"){\n      if (row.kembali.replace(/[^0-9]/g, \"\") - row.cash < 0 && parseInt(row.kembali) !== 0){\n        ToastNotification(\"info\", \"Pembayaran tidak boleh lebih dari sisa\");\n        return false;\n      } else {\n        console.log(row.grand_total_pembayaran);\n        if (data.reduce((a, b) => a + b.nominal, 0) >= row.grand_total_pembayaran) {\n          ToastNotification(\"info\", \"Pembayaran Sudah Cukup1\");\n          return false;\n        }\n        }\n      }\n    }\n   \n\n    let cash = data.findIndex((hasil) => hasil.jenis === \"CASH\");\n    if (cash >= 0) {\n      if (row.kembali.replace(/[^0-9]/g, \"\") - row.cash < 0 && data.reduce((a, b) => a + b.nominal, 0) > row.grand_total_pembayaran) {\n        ToastNotification(\"info\", \"Pembayaran Sudah Cukup2\");\n        return false;\n      } else {\n        if (data.reduce((a, b) => a + b.nominal, 0) >= row.grand_total_pembayaran) {\n          ToastNotification(\"info\", \"Pembayaran Sudah Cukup3\");\n          return false;\n        }\n      }\n    }\n\n    let index = data.findIndex((hasil) => hasil.jenis === row.jenis);\n    if (index === -1) {\n      let keterangan = \"\";\n      if (row.jenis === \"CASH\") {\n        keterangan = \"CASH\";\n      } else if (row.jenis === \"TRANSFER\") {\n        keterangan = row.no_card + \" - \" + row.nama_bank;\n      } else {\n        keterangan = row.nama_bank;\n      }\n      let hasil = {\n        jenis: row.jenis,\n        nominal: parseInt(row.cash) * parseInt(row.fee || 0) / 100 + parseInt(row.cash),\n        nama_bank: row.nama_bank,\n        fee : row.jenis === \"CREDIT\" ? row.fee || 0 : 0 ,\n        no_card: row.no_card || \"-\",\n        keterangan: keterangan,\n        kembali: row.nominal_kembali\n      };\n      data.push(hasil);\n      this.setState({\n        masuk: true,\n        kembalian: row.kembali,\n      });\n      setItem(\"trx_pemabayran_ambil_pesanan\", data);\n    } else {\n      let data_pembayaran = getItem(\"trx_pemabayran_ambil_pesanan\");\n      data_pembayaran = data_pembayaran.map((element2) => {\n        if (element2.jenis === row.jenis) {\n          element2.nominal += parseInt(row.cash);\n        }\n        return element2;\n      });\n      setItem(\"trx_pemabayran_ambil_pesanan\", data_pembayaran);\n      this.setState({\n        status: true,\n        kembalian: row.kembalian,\n      });\n      // ToastNotification(\n      //   \"info\",\n      //   \"Pembayaran dengan \" + row.jenis + \" sudah ada\"\n      // );\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <HeadInputPembayaran onSubmit={(data) => this.simpanPembayaran(data)} />\n        <hr />\n        <form\n          onSubmit={this.props.handleSubmit}\n          onKeyPress={(e) => {\n            e.key === \"Enter\" && e.preventDefault();\n          }}\n          autoComplete=\"off\"\n        >\n          <Tabel\n            // handleClick={() => this.simpanpembbayaran()}\n            keyField=\"jenis\"\n            // tambahData={true}\n            // btnText=\"Tambah Pembyaran\"\n            exportCsv={false}\n            data={getItem(\"trx_pemabayran_ambil_pesanan\") || []}\n            columns={this.state.columns}\n            empty={true}\n            pagination=\"off\"\n            textEmpty=\"Data Pembayaran Kosong\"\n          />\n          <div className=\"row\">\n            <div className=\"col-12 text-right\">\n              <button\n                className=\"btn btn-primary\"\n                disabled={this.props.isLoadingPembayran}\n                onClick={() => this.props.simpanPembayaran()}\n                type=\"button\"\n              >\n                {this.props.isLoadingPembayran ? (\n                  <>\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\n                    Diproses\n                  </>\n                ) : (\n                  \"Bayar Sekarang\"\n                )}\n              </button>\n            </div>\n           \n          </div>\n        </form>\n      </>\n    );\n  }\n}\n\nModalPembayaran = reduxForm({\n  form: \"ModalPembayaran\",\n  enableReinitialize: true,\n  validate: ValidasiPembayaran,\n})(ModalPembayaran);\n\nexport default connect(maptostate)(ModalPembayaran);\n","import {\n  React,\n  connect,\n  Link,\n  reduxForm,\n  Panel,\n  PanelHeader,\n  Tabel,\n  formatDate,\n  moment,\n  setItem,\n  ToastNotification,\n  getItem,\n  Swal,\n  showModal,\n  ModalGlobal,\n} from \"../../../components/helpers/library\";\nimport { getData2, postData2, putData2 } from \"../../../config/axios\";\nimport HeadPesanan from \"./HeadPesanan\";\nimport Loading from 'react-fullscreen-loading';\nimport ModalPembayaran from \"./ModalPembayaran\";\n\nclass LihatPesanan extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      datapesanan: [],\n      columns: [\n        {\n          dataField: \"no_pesanan\",\n          text: \"No Pesanan\",\n          footerAttrs: {\n            colSpan: \"3\",\n          },\n          footer: \"Total\",\n        },\n        {\n          dataField: \"tanggal_transaksi\",\n          text: \"Tgl Transaksi\",\n        },\n        {\n          dataField: \"nama_customer\",\n          text: \"Nama Customer\",\n        },\n        {\n          dataField: \"no_hp\",\n          text: \"Nomor HP\",\n        },\n        {\n          dataField: \"total_harga\",\n          text: \"Total Harga\",\n          formatter: (cell) => {\n            return <span>{parseInt(cell).toLocaleString(\"kr-KO\")}</span>;\n          },\n        },\n        {\n          dataField: \"jumlah_bayar\",\n          text: \"Jumlah Pembayaran\",\n          formatter: (cell) => {\n            return <span>{parseInt(cell).toLocaleString(\"kr-KO\")}</span>;\n          },\n        },\n        // {\n        //   dataField: \"sisa_bayar\",\n        //   text: \"Sisa Bayar\",\n        //   formatter: (cell) => {\n        //     return <span>{parseInt(cell).toLocaleString(\"kr-KO\")}</span>;\n        //   },\n        // },\n\n        {\n          dataField: \"action\",\n          text: \"Action\",\n          csvExport: false,\n          headerClasses: \"text-center\",\n          formatter: (rowcontent, row, index) => {\n            return (\n              <div className=\"row text-center\">\n                <div className=\"col-12\">\n                  {/* {row.status_pesanan === \"DONE\" ? \n                  <button\n                  type=\"button\"\n                  \n                  data-tooltip=\"Ambil Pesanan\"\n                  onClick={() => this.ambilpesanan(row)}\n                  className=\"btn btn-success mr-3\"\n                >\n                  <i className=\"fa fa-check\"></i>\n                  </button>\n                  : */}\n                  <button\n                    type=\"button\"\n                    disabled={\n                      row.status_pesanan === \"DONE\" ? true : false\n                    }\n                    data-tooltip={\n                      row.status_pesanan === \"DONE\"\n                        ? \"Tidak Bisa Dibatal\"\n                        : \"Batal Pesanan\"\n                    }\n                    onClick={() => this.batalPesanan(row)}\n                    className=\"btn btn-danger mr-3\"\n                  >\n                    <i className=\"fa fa-window-close\"></i>\n                    </button>\n                  {/* } */}\n                </div>\n              </div>\n            );\n          },\n          footer: \"\",\n        },\n      ],\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  ambilpesanan(row) {\n    let pembyaran = [];\n    row.pembayaran.forEach(element => {\n      let row = {\n        jenis : element.jenis,\n        keterangan : element.keterangan,\n        nominal: element.jumlah_rp,\n        status : \"DONE\"\n      }\n      pembyaran.push(row)\n    });\n    setItem('trx_pemabayran_ambil_pesanan', pembyaran)\n    postData2(\"pesanan/ambil/no\", { no_pesanan: row.no_pesanan }).then((res) => {\n      setItem('data_barang_ambil_pesanan', res.data)\n      this.props.dispatch(showModal());\n    }).catch((err) => {\n      ToastNotification('info', 'Terjadi Kesalahaan Saat Request Data')\n    })\n   \n  }\n\n  // simpanPembayaranAmbilPesanan() {\n  //   this.setState({\n  //     isLoadingPembayran: true,\n  //     onSend: true,\n  //   });\n  //   let harus_bayar = document.getElementById(\"harus_bayar_rp\").value;\n  //   let harus_bayar2 = harus_bayar.replace(\"Rp.\", \"\");\n  //   let harus_bayar3 = harus_bayar2.replaceAll(\".\", \"\");\n  //   let data_pesanan = JSON.parse(\n  //     localStoragedecryp(\"data_barang_ambil_pesanan\")\n  //   );\n  //   let detail_barang = [];\n\n  //   data_pesanan.dataPesanan.forEach((item, index) => {\n  //     let row = {\n  //       no_pesanan: item.no_pesanan,\n  //       kode_barcode: item.kode_barcode,\n  //       berat: data_pesana.berat,\n  //       berat_bandrol: data_pesanan.berat_bandrol,\n  //       ongkos: item.ongkos,\n  //       harga_jual: data_pesanan.harga_jual,\n  //       berat_atribut: data_pesanan.berat_atribut,\n  //       harga_atribut: item.harga_atribut,\n  //     };\n    \n  //     detail_barang.push(row);\n  //   });\n  //   let pembayaran = getItem(\"trx_pemabayran_ambil_pesanan\");\n  //   let data_pembayaran = [];\n  //   let total_pembayarn = 0;\n  //   pembayaran.forEach((element) => {\n  //     let row = {\n  //       bank : element.jenis !== \"CASH\" ? element.nama_bank : \"CASH\", \n  //       jenis: element.jenis,\n  //       keterangan: element.keterangan,\n  //       nominal: element.nominal >= parseInt(getItem('sisa_bayar_penjualan').total_transaksi) ? parseInt(element.nominal) - parseInt(getItem('sisa_bayar_penjualan').sisa_bayar) : parseInt(element.nominal),\n  //     };\n  //     total_pembayarn = element.nominal + total_pembayarn;\n  //     data_pembayaran.push(row);\n  //   });\n\n  //   let sisa = parseInt(harus_bayar3) - parseInt(total_pembayarn);\n\n  //   if (parseInt(sisa) > 0) {\n  //     ToastNotification(\n  //       \"info\",\n  //       \"Pembayaran Masih Kurang Rp.\" + parseInt(sisa).toLocaleString(\"kr-KO\")\n  //     );\n  //     this.setState({\n  //       isLoadingPembayran: false,\n  //       onSend: false,\n  //     });\n  //     return false;\n  //   }\n\n  //   let data_customer = JSON.parse(localStoragedecryp(\"data_customer_tmp\"));\n    \n  //   let datapenjualan = {\n  //     status: \"PENJUALAN\",\n  //     kode_sales: data_customer.kode_sales,\n  //     kode_member:\n  //       data_customer.jenis_pelanggan === \"NONMEMBER\"\n  //         ? data_customer.jenis_pelanggan\n  //         : data_customer.kode_customer,\n  //     nama_customer: data_customer.nama_customer,\n  //     alamat_customer: data_customer.alamat_customer,\n  //     no_hp: data_customer.no_hp,\n  //     detail_barang: detail_barang,\n  //     pembayaran: data_pembayaran,\n  //   };\n   \n  //   console.log(datapenjualan);\n  //   return false\n  //   postData(\"penjualan/simpan\", datapenjualan)\n  //     .then((res) => {\n  //       console.log(res.data);\n  //       localStorageencryp(\"data_barang_penjualan_tmp\", JSON.stringify([]));\n  //       ToastNotification(\"success\", res.data.message);\n  //     })\n  //     .then(() => {\n  //       this.props.dispatch(hideModal());\n  //     })\n  //     .then(() => {\n  //       this.props.dispatch(reset(\"ModalPembayaran\"));\n  //     })\n  //     .then(() => {\n  //       localStorageencryp(\"data_customer_tmp\", JSON.stringify([]));\n  //       localStorageencryp(\"total_dp\", JSON.stringify([]));\n  //       localStorageencryp(\"trx_pemabayran_penjualan\", JSON.stringify([]));\n  //       localStorageencryp(\"filter_titipan\", JSON.stringify([]));\n  //       setItem('sisa_bayar_penjualan',0)\n  //     })\n  //     .then(() => {\n  //       this.setState({\n  //         isLoadingPembayran: false,\n  //         onSend: false,\n  //       });\n\n  //     })\n  //     .catch((err) =>\n  //       {\n  //         this.setState({\n  //           isLoadingPembayran: false,\n  //           onSend: false,\n  //         });\n  //         this.errorhandling(err.response.data || \"Koneksi Bermasalah\")\n  //       }\n  //     );\n  // }\n  batalPesanan(row) {\n    Swal.fire({\n      title: \"Anda Yakin !!\",\n      text: \"Ingin Membatalkan Pesanan Ini ?\",\n      icon: \"warning\",\n      position: \"top-center\",\n      cancelButtonText: \"Tidak\",\n      showCancelButton: true,\n      confirmButtonText: \"OK\",\n      showConfirmButton: true,\n    }).then((result) => {\n      if (result.isConfirmed) {\n        let tanggal = getItem(\"tgl_laporan\");\n        this.setState({\n          isLoading: true,\n        });\n        putData2(\"pesanan/cancel\", { no_pesanan: row.no_pesanan })\n          .then((res) => {\n            this.setState({\n              isLoading: false,\n            });\n            ToastNotification(\"success\", \"Pesanan Berhasil Di Batal\");\n            getData2(\n              \"pesanan/\" + tanggal.tgl_awal + \"/\" + tanggal.tgl_akhir\n            ).then((res) => {\n              // console.log(res.data);\n              let pesanan = [];\n                res.data.forEach((element) => {\n                  let row = {\n                    no_pesanan: element.no_pesanan,\n                    nama_customer: element.nama_customer,\n                    no_hp: element.no_hp,\n                    sisa_bayar: element.sisa_bayar,\n                    jumlah_bayar: element.jumlah_bayar,\n                    total_harga: element.total_harga,\n                    tanggal_transaksi: element.tanggal,\n                    detail_barang: element.detail_barang,\n                    pembayaran: element.pembayaran,\n                    status_pesanan: element.status_pesanan,\n                  };\n                  pesanan.push(row);\n                });\n              this.setState({\n                datapesanan: pesanan,\n                isLoading: false,\n              });\n            });\n          })\n          .catch((error) => {\n            this.setState({\n              isLoading: false,\n            });\n            ToastNotification(\"info\", /conflict/i.test(error.response.data.message || \"Error\") ? \"Terjadi Kesalahan Saat Mengirim Data\" : error.response.data.message);\n          });\n      }\n    });\n  }\n  handleSubmit(data) {\n    this.setState({\n      isLoading: true,\n    });\n    getData2(\"pesanan/\" + data.tgl_awal + \"/\" + data.tgl_akhir)\n      .then((res) => {\n        // console.log(res.data);\n        if (res.data.length === 0) {\n          ToastNotification(\"info\", \"Data Pesanan Tidak Ada\");\n        }\n        // res\n        let pesanan = [];\n        res.data.forEach((element) => {\n          let row = {\n            no_pesanan: element.no_pesanan,\n            nama_customer: element.nama_customer,\n            no_hp: element.no_hp,\n            sisa_bayar: element.sisa_bayar,\n            jumlah_bayar: element.jumlah_bayar,\n            total_harga: element.total_harga,\n            tanggal_transaksi: element.tanggal,\n            detail_barang: element.detail_barang,\n            pembayaran: element.pembayaran,\n            status_pesanan: element.status_pesanan,\n          };\n          pesanan.push(row);\n        });\n\n        let data_post = {\n          tgl_awal: formatDate(\n            moment(new Date(data.tgl_awal)).format(\"YYYY-MM-DD\")\n          ),\n          tgl_akhir: formatDate(\n            moment(new Date(data.tgl_akhir)).format(\"YYYY-MM-DD\")\n          ),\n        };\n        this.setState({\n          isLoading: false,\n          datapesanan: pesanan,\n        });\n        setItem(\"tgl_laporan\", data_post);\n      })\n      .catch((error) => {\n        ToastNotification(\"info\", /conflict/i.test(error.response.data.message || \"Error\") ? \"Terjadi Kesalahan Saat Mengirim Data\" : error.response.data.message);\n        this.setState({\n          isLoading: false,\n        });\n      });\n  }\n\n  render() {\n    const expandRow = {\n      renderer: (row) => (\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              Detail Barang\n              <table>\n                <tr>\n                  <td> Kode Kategori </td>\n                  <td> Perkiraan Berat </td>\n                  <td> Perkiraan Kadar </td>\n                  <td> Harga / Gram </td>\n                  <td> Attribut </td>\n                  <td> Harga Attribut </td>\n                  <td> Kode Barcode </td>\n                  <td> Ongkos </td>\n                  <td> Total </td>\n                  <td> keterangan </td>\n                  <td> Deskripsi </td>\n                  <td> Deskripsi Contoh </td>\n                </tr>\n                {row.detail_barang.map((detail, index) => (\n                  <>\n                    <tr>\n                      <td> {detail.kode_kategori}</td>\n                      <td> {detail.perkiraan_berat.toFixed(3)}</td>\n                      <td> {detail.perkiraan_kadar}</td>\n                      <td> {detail.harga_gram.toLocaleString(\"kr-KO\")}</td>\n                      <td> {detail.attribut}</td>\n                      <td> {detail.harga_atribut.toLocaleString(\"kr-KO\")}</td>\n                      <td> {detail.kode_barcode}</td>\n                      <td> {detail.ongkos.toLocaleString(\"kr-KO\")}</td>\n                      <td> {detail.sub_total.toLocaleString(\"kr-KO\")}</td>\n                      <td> {detail.keterangan}</td>\n                      <td> {detail.deskripsi}</td>\n                      <td> {detail.deskripsi_contoh}</td>\n                    </tr>\n                  </>\n                ))}\n              </table>\n            </div>\n          </div>\n        </div>\n      ),\n      showExpandColumn: true,\n    };\n    return (\n      <div>\n        <ol className=\"breadcrumb float-xl-right\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"#\">Pesanan</Link>\n          </li>\n          <li className=\"breadcrumb-item active\">Lihat Pesanan</li>\n        </ol>\n        <h1 className=\"page-header\">Lihat Pesanan </h1>\n        <Panel>\n          <PanelHeader>Lihat Pesanan</PanelHeader>\n          <br />\n          {/* Lihat Pesanan */}\n          <div className=\"container\">\n            <HeadPesanan\n              isLoading={this.state.isLoading}\n              onSubmit={(data) => this.handleSubmit(data)}\n            />\n            <Tabel\n              keyField=\"no_pesanan\"\n              exportCsv={false}\n              data={this.state.datapesanan}\n              columns={this.state.columns}\n              empty={true}\n              textEmpty=\"Data Barang Kosong\"\n              expandRow={expandRow}\n            />\n          </div>\n          <br />\n          {/* End Tambah Lihat Pesanan  */}\n          <ModalGlobal\n          size=\"l\"\n          title=\"Form Pembayaran\"\n          content={\n              <ModalPembayaran\n                isLoadingPembayranTitipan={this.state.isLoadingPembayranTitipan}\n                isLoadingPembayran={this.state.isLoadingPembayran}\n                bayarTitipan={(data) => this.bayarTitipan(data)}\n                simpanPembayaran={(data) => this.simpanPembayaranAmbilPesanan(data)}\n              />\n          }\n        />\n        </Panel>\n        {this.state.isLoading ? (\n        <Loading \n        loading\n        background=\"rgba(0, 0, 0, 0.35)\"\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\n      ) : null}\n      </div>\n    );\n  }\n}\n\nLihatPesanan = reduxForm({\n  form: \"LihatPesanan\",\n  enableReinitialize: true,\n})(LihatPesanan);\nexport default connect()(LihatPesanan);\n","const ValidasiPembayaran = (value) => {\n    const errors = {};\n    if (!value.jenis) {\n        errors.jenis = \"Jenis Tidak Boleh Kosong\";\n    }\n    // if (!value.cash) {\n    //     errors.cash = \"Nominal Tidak Boleh Kosong\";\n    // }\n\n    return errors;\n}\n\nexport default ValidasiPembayaran;\n\n\n"],"sourceRoot":""}