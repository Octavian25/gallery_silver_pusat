{"version":3,"sources":["pages/Laporan/LaporanPembelian/LaporanPembelianBarangHistory/pdf/ExportTransaksiPembelianHistory.jsx","pages/Laporan/LaporanPembelian/LaporanPembelianBarangHistory/exel/ExportTransaksiPembelianPdfHistory.jsx","pages/Laporan/LaporanPembelian/LaporanPembelianBarangHistory/HeadFormLaporanPembelianBarangHistory.jsx"],"names":["ExportTransaksiPembelianHistory","tableColumn","data","arguments","length","undefined","doc","jsPDF","tableRows","footRows","finalY","setFontSize","text","getUserdata","nama_toko","jml_alamat","alamat_toko","slice","setProperties","title","concat","localStoragedecryp","JSON","parse","tgl_awal","tgl_akhir","total_berat","total_berat_nota","total_harga_nota","total_harga","total_harga_rata","total_barang","content","styles","halign","forEach","item","index","detail","rows","no_faktur_beli","kode_sales","kode_member","nama_customer","nama_barang","kondisi","kode_dept","formatGram","berat_nota","berat","parseInt","harga_nota","toLocaleString","harga","harga_rata","status_valid","parseFloat","push","grand","colSpan","fillColor","textColor","toFixed","printed","user_id","getToday","fontStyle","autoTable","head","body","foot","startY","theme","rowPageBreak","margin","top","bodyStyles","fontSize","headStyles","autoTableEndPosY","pages","internal","getNumberOfPages","pageWidth","pageSize","width","pageHeight","height","j","horizontalPos","verticalPos","setPage","align","string","output","x","window","open","document","write","ExportTransaksiPembelianPdfHistory","props","_this","Object","classCallCheck","this","_super","call","state","barang","react_default","a","createElement","Fragment","react_html_table_to_excel_default","id","className","table","filename","sheet","buttonText","style","display","backgroundColor","color","map","row","textAlign","Component","HeadFormLaporanPembelianBarangHistory","date","Date","type","setStartDate","bind","assertThisInitialized","setLastDate","change","ExportTransaksiPembelian","LaporanTransaksiPembelian","setState","_this2","databarang","element","ongkos","harga_gram","columns","dataField","footerAttrs","footer","cell","num","headerClasses","formatter","rowIndex","colIndex","onSubmit","handleSubmit","autoComplete","Field","name","component","InputDate","label","selected","onChange","placeholder","value","isLoading","tabel","keyField","export","empty","textEmpty","onClick","exportPdf","exel_ExportTransaksiPembelianPdfHistory","loading_default","loading","background","loaderColor","reduxForm","form","enableReinitialize","validate","ValidasiLaporanKeuangan","connect","initialValues","getTglSystem"],"mappings":"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","file":"static/js/90.203a8dff.chunk.js","sourcesContent":["import jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport { formatGram, getToday, getUserdata, localStoragedecryp } from \"../../../../../components/helpers/function\";\n// Date Fns is used to format the dates we receive\n\n// define a generatePDF function that accepts a tickets argument\nconst ExportTransaksiPembelianHistory = (\n  data = \"\",\n  username = \"\",\n  tanggal_dari = \"\",\n  tanggal_sampai = \"\"\n) => {\n  // initialize jsPDF\n  const doc = new jsPDF(\"l\", \"mm\", [297, 210]);\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\n  let tableRows = [];\n  let footRows = [];\n  let tableColumn = []\n  let finalY = 30;\n \n\n\n  doc.setFontSize(15);\n  doc.text(\"LAPORAN TRANSAKSI PEMBELIAN\", 14, 15);\n  doc.setFontSize(20);\n  doc.text(getUserdata().nama_toko, 200, 15);\n  doc.setFontSize(8);\n  let jml_alamat = getUserdata().alamat_toko.length;\n  if (jml_alamat > 20) {\n    doc.text(getUserdata().alamat_toko.slice(0,48), 200, 20);\n  }\n  if (jml_alamat > 50) {\n    doc.text(getUserdata().alamat_toko.slice(48,90), 200, 25);\n  }\n  doc.setFontSize(10);\n  doc.setProperties({\n    title: \"LAPORAN TRANSAKSI PEMBELIAN\",\n  });\n  //row 1\n  doc.text(\n    `PERIODE : ${\n      localStoragedecryp(\"tgl_laporan\").length === 0\n        ? null\n        : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\n          \" s/d \" +\n          JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_akhir\n    }`,\n    14,\n    25\n  );\n  let total_berat = 0;\n  let total_berat_nota = 0;\n  let total_harga_nota = 0;\n  let total_harga = 0;\n  let total_harga_rata = 0;\n  let total_barang = 0;\n  tableColumn = [\n    // [\n    //   {\n    //     content: `No Faktur Group : ${item._id.no_faktur_group} \\n${header_detail.jenis}  (${parseInt(header_detail.jumlah_rp).toLocaleString(\"kr-KO\")})`,\n    //     colSpan: 13,\n    //   },\n    // ],\n    [\n      {\n        content: `NO BELI`,\n      },\n      {\n        content: `KODE SALES`,\n      },\n      {\n        content: `KODE MEMNBER`,\n      },\n      {\n        content: `NAMA MEMBER`,\n      },\n      {\n        content: `NAMA BARANG`,\n      },\n      // {\n      //   content: `NO HP`,\n      // },\n      // {\n      //   content: `ALAMAT CUSTOMER`,\n      // },\n      // {\n      //   content: `KODE GUDANG`,\n      // },\n      {\n        content: `KONDISI`,\n      },\n      {\n        content: `KODE DEPT`,\n      },\n      {\n        content: `BERAT NOTA`,\n        styles: {\n          halign: 'right',\n        },\n      },\n      {\n        content: `BERAT`,\n        styles: {\n          halign: 'right',\n        },\n      },\n      {\n        content: `HARGA NOTA`,\n        styles: {\n          halign: 'right',\n        },\n      },\n      {\n        content: `HARGA BELI`,\n        styles: {\n          halign: 'right',\n        },\n      },\n      {\n        content: `HARGA RATA`,\n        styles: {\n          halign: 'right',\n        },\n      },\n      {\n        content: `STATUS`,\n        styles: {\n          halign: 'left',\n        },\n      },\n    \n    ],\n    ];\n  data.forEach((item, index) => {\n    let tot_berat = 0;\n    let tot_berat_nota = 0;\n    let tot_harga_nota = 0;\n    let tot_harga = 0;\n    let tot_harga_rata = 0;\n  \n    // item._id.pembayaran.forEach((header_detail, index) => {\n    // // console.log(item._id.pembayaran[0].jenis);\n    //   let pembayaran = [\n    //     {\n    //       content: `${header_detail.jenis}  (${parseInt(header_detail.jumlah_rp).toLocaleString(\"kr-KO\")})`,\n    //       colSpan: 13,\n    //     },\n    //   ]\n    //   tableRows.push(pembayaran)\n    // });\n      \n    item.detail.forEach((item, index) => {\n      let rows = [\n        item.no_faktur_beli,\n        item.kode_sales,\n        item.kode_member,\n        item.nama_customer,\n        item.nama_barang,\n        // item.no_hp,\n        // item.alamat_customer,\n        // item.kode_gudang,\n        item.kondisi,\n        item.kode_dept,\n        {\n          content: formatGram(item.berat_nota, 3),\n          styles: {\n            halign: 'right',\n          },\n        },\n        {\n          content: formatGram(item.berat, 3),\n          styles: {\n            halign: 'right',\n    \n          },\n        },\n        {\n          content: parseInt(item.harga_nota).toLocaleString(\"kr-KO\"),\n          styles: {\n            halign: 'right',\n    \n          },\n        },\n        {\n          content: parseInt(item.harga).toLocaleString(\"kr-KO\"),\n          styles: {\n            halign: 'right',\n    \n          },\n        },\n        {\n          content:parseInt(item.harga_rata).toLocaleString(\"kr-KO\"),\n          styles: {\n            halign: 'right',\n    \n          },\n        },\n        (item.status_valid === 'CANC') ? \"PEMBATALAN\" : \"PEMBELIAN\"\n      ];\n      tot_berat = tot_berat + parseFloat(item.berat);\n      tot_berat_nota = tot_berat_nota + parseFloat(item.berat_nota);\n      tot_harga_nota = tot_harga_nota + parseFloat(item.harga_nota);\n      tot_harga = tot_harga + parseFloat(item.harga);\n      tot_harga_rata = tot_harga_rata + parseFloat(item.harga_rata);\n      \n      total_berat = total_berat + parseFloat(item.berat);\n      total_berat_nota = total_berat_nota + parseFloat(item.berat_nota);\n      total_harga_nota = total_harga_nota + parseFloat(item.harga_nota);\n      total_harga = total_harga + parseFloat(item.harga);\n      total_harga_rata = total_harga_rata + parseFloat(item.harga_rata);\n     \n      tableRows.push(rows);\n    });\n    total_barang = total_barang + item.detail.length;\n    // let total = [\n    //   {\n    //     content: `Subtotal : ${item.detail.length} Transaksi`,\n    //     colSpan: 7,\n    //     styles: {\n    //       halign: 'center',\n    //       fillColor: \"#F7F7F6\",\n    //       textColor: \"#000\",\n    //     },\n    //   },\n    //   {\n    //     content:`${tot_berat_nota.toFixed(3)}`,\n    //     styles: {\n    //       halign: 'right',\n    //       fillColor: \"#F7F7F6\",\n    //       textColor: \"#000\",\n    //     },\n    //   },\n    //   {\n    //     content:`${tot_berat.toFixed(3)}`,\n    //     styles: {\n    //       halign: 'right',\n    //       fillColor: \"#F7F7F6\",\n    //       textColor: \"#000\",\n    //     },\n    //   },\n    //   {\n    //     content:`${parseInt(tot_harga_nota).toLocaleString(\"kr-KO\")}`,\n    //     styles: {\n    //       halign: 'right',\n    //       fillColor: \"#F7F7F6\",\n    //       textColor: \"#000\",\n    //     },\n    //   },\n    //   {\n    //     content:`${parseInt(tot_harga).toLocaleString(\"kr-KO\")}`,\n    //     styles: {\n    //       halign: 'right',\n    //       fillColor: \"#F7F7F6\",\n    //       textColor: \"#000\",\n    //     },\n    //   },\n    //   {\n    //     content:`${parseInt(tot_harga_rata).toLocaleString(\"kr-KO\")}`,\n    //     styles: {\n    //       halign: 'right',\n    //       fillColor: \"#F7F7F6\",\n    //       textColor: \"#000\",\n    //     },\n    //   },\n    //   {\n    //     content:``,\n    //     styles: {\n    //       halign: 'right',\n    //       fillColor: \"#F7F7F6\",\n    //       textColor: \"#000\",\n    //     },\n    //   },\n    // ];\n    // tableRows.push(total);\n\n  });\n  let grand = [\n    {\n      content: `Grand Total : ${total_barang} Transaksi`,\n      colSpan: 7,\n      styles: {\n        halign: 'center',\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n      },\n    },\n    {\n      content:`${total_berat_nota.toFixed(3)}`,\n      styles: {\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n        halign: 'right',\n\n      },\n    },\n    {\n      content:`${total_berat.toFixed(3)}`,\n      styles: {\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n        halign: 'right',\n\n      },\n    },\n    {\n      content:`${parseInt(total_harga_nota).toLocaleString(\"kr-KO\")}`,\n      styles: {\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n        halign: 'right',\n\n      },\n    },\n    {\n      content:`${parseInt(total_harga).toLocaleString(\"kr-KO\")}`,\n      styles: {\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n        halign: 'right',\n\n      },\n    },\n    {\n      content:`${parseInt(total_harga_rata).toLocaleString(\"kr-KO\")}`,\n      styles: {\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n        halign: 'right',\n\n      },\n    },\n    {\n      content:``,\n      styles: {\n        fillColor: \"#E8E5E5\",\n        textColor: \"#000\",\n        halign: 'right',\n\n      },\n    },\n  ];\n  tableRows.push(grand);\n  let printed = [\n    {\n      colSpan:9,\n      content: `Printed By ${JSON.parse(localStoragedecryp(\"userdata\")).user_id} / ${getToday()}`,\n      styles: {\n        // lineWidth: 0.1,\n        fontStyle: \"italic\",\n        textColor: \"#000\",\n        // fillColor: \"#E8E5E5\"\n      },\n    },\n  ]\n  tableRows.push(printed);\n  doc.autoTable({\n    head: tableColumn,\n    body: tableRows,\n    foot: footRows,\n    startY:  finalY,\n    theme: \"plain\",\n    rowPageBreak: \"avoid\",\n    // pageBreak: \"avoid\",\n    margin: { top: 10 },\n    bodyStyles: {\n      // lineWidth: 0.02,\n      // lineColor: \"#000\",\n      fontSize: 8,\n    },\n    headStyles: {\n      fontSize: 8,\n      // lineWidth: 0.02,\n      // lineColor: \"#000\",\n      fillColor: \"#E8E5E5\",\n      textColor: \"#000\",\n    },\n \n  });\n  finalY = doc.autoTableEndPosY() + 3;\n  tableRows = [];\n  footRows = [];\n\n  // const date = Date().split(\" \");\n  // we use a date string to generate our filename.\n  // const dateStr = date[2] + date[3] + date[4];\n  // ticket title. and margin-top + margin-left\n  // doc.text(`User                           : ${JSON.parse(localStoragedecryp(\"userdata\")).user_id}`, 14, finalY + 10);\n  // doc.text(`Cetak                        : ${getToday()}`, 14, finalY + 16);\n  const pages = doc.internal.getNumberOfPages();\n  const pageWidth = doc.internal.pageSize.width; //Optional\n  const pageHeight = doc.internal.pageSize.height; //Optional\n  doc.setFontSize(10); //Optional\n  for (let j = 1; j < pages + 1; j++) {\n    let horizontalPos = pageWidth / 2; //Can be fixed number\n    let verticalPos = pageHeight - 10; //Can be fixed number\n    doc.setPage(j);\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\n      align: \"center\",\n    });\n  }\n  // doc.autoPrint();\n  // doc.save(`LAPORAN TRANSAKSI PEMBELIAN.pdf`);\n  var string = doc.output(\"datauristring\");\n  // var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\n  var x = window.open();\n  x.document.open();\n  x.document.write(\n    \"<html><head><title>LAPORAN TRANSAKSI PEMBELIAN</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\n      string +\n      \"></embed></body></html>\"\n  );\n  // x.document.write(embed);\n  // setInterval(() => {\n  //   x.close();\n  // }, 1000);\n};\n\nexport default ExportTransaksiPembelianHistory;\n","import React, { Component } from \"react\";\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\nimport { formatGram, getUserdata } from \"../../../../../components/helpers/function\";\nclass ExportTransaksiPembelianPdfHistory extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    let total_berat = 0;\n    let total_berat_nota = 0;\n    let total_harga_nota = 0;\n    let total_harga = 0;\n    let total_harga_rata = 0;\n    let total_barang = 0;\n\n    this.props.data.forEach((barang, index) => {\n      barang.detail.forEach((item, index) => {\n        total_berat = total_berat + parseFloat(item.berat);\n        total_berat_nota = total_berat_nota + parseFloat(item.berat_nota);\n        total_harga_nota = total_harga_nota + parseFloat(item.harga_nota);\n        total_harga = total_harga + parseFloat(item.harga);\n        total_harga_rata = total_harga_rata + parseFloat(item.harga_rata);\n      });\n      total_barang = total_barang + barang.detail.length;\n    });\n    return (\n      <>\n        <ReactHTMLTableToExcel\n          id=\"test-table-xls-button\"\n          className=\"btn btn-success btn-block\"\n          table=\"table-to-xls\"\n          filename=\"Laporan Transaksi Pembelian\"\n          sheet=\"Laporan Transaksi Pembelian\"\n          buttonText=\"Export Exel\"\n        />\n        <table id=\"table-to-xls\" style={{ display: \"none\" }}>\n          <thead>\n            <tr>\n              <th colSpan=\"12\"> Laporan Transaksi Pembelian </th>\n            </tr>\n            <tr>\n              <th colSpan=\"12\"> Periode </th>\n            </tr>\n            {/* <tr>\n              <th colSpan=\"12\">\n                {\" \"}\n                {localStoragedecryp(\"tgl_laporan\").length === 0\n                  ? null\n                  : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\n                    \" s/d \" +\n                    JSON.parse(localStoragedecryp(\"tgl_laporan\"))\n                      .tgl_akhir}{\" \"}\n              </th>\n            </tr>\n            <tr>\n              <th colSpan=\"12\"></th>\n            </tr> */}\n            <tr>\n              <th colSpan=\"12\"> TOKO :  {getUserdata().nama_toko} </th>\n            </tr>\n           \n            <tr>\n              <th colSpan=\"12\"> ALAMAT :  {getUserdata().alamat_toko} </th>\n            </tr>\n            <tr>\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                }}\n              >\n                NO BELI\n              </td>\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                }}\n              >\n                KODE SALES\n              </td>\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                }}\n              >\n                KODE MEMBER\n              </td>\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                }}\n              >\n                NAMA MEMBER\n              </td>\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                }}\n              >\n                NAMA BARANG\n              </td>\n              {/* <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                }}\n              >\n                NO HP\n              </td>\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                }}\n              >\n                ALAMT CUSTOMER\n              </td>\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                }}\n              >\n                KODE GUDANG\n              </td> */}\n                <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                }}\n              >\n                KONDISI\n              </td>\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                }}\n              >\n                KODE DEPT\n              </td>\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                }}\n              >\n                BERAT NOTA\n              </td>\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                }}\n              >\n                BERAT\n              </td>\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                }}\n              >\n                HARGA NOTA\n              </td>\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                }}\n              >\n                HARGA BELI\n              </td>\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                }}\n              >\n                HARGA RATA\n              </td>\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                }}\n              >\n                STATUS\n              </td>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.data.map((item, index) => (\n              <>\n                {item.detail.map((row, index) => (\n                  <tr>\n                    <td>{row.no_faktur_beli}</td>\n                    <td>{row.kode_sales}</td>\n                    <td>{row.kode_member}</td>\n                    <td>{row.nama_customer}</td>\n                    <td>{row.nama_barang}</td>\n                    {/* <td style={{ whiteSpace: \"nowrap\" }}>{row.no_hp}</td>\n                    <td>{row.alamat_customer}</td>\n                    <td>{row.kode_gudang}</td> */}\n                    <td>{row.kondisi}</td>\n                    <td>{row.kode_dept}</td>\n                    <td style={{textAlign : \"right\" }}>{formatGram(row.berat_nota,3)}</td>\n                    <td style={{textAlign : \"right\" }}>{formatGram(row.berat,3)}</td>\n                    <td style={{textAlign : \"right\" }}>{row.harga_nota.toLocaleString(\"kr-KO\")}</td>\n                    <td style={{textAlign : \"right\" }}>{row.harga.toLocaleString(\"kr-KO\")}</td>\n                    <td style={{textAlign : \"right\" }}>{row.harga_rata.toLocaleString(\"kr-KO\")}</td>\n                    <td>{(row.status_valid === \"CANC\") ? \"PEMBATALAN\" : \"PEMBELIAN\"}</td>\n                  </tr>\n                ))}\n                {/* <tr>\n                  <td\n                    colSpan=\"7\"\n                    style={{\n                      backgroundColor: \"#E8E5E5\",\n                      color: \"#000\",\n\n                      textAlign: \"center\",\n                    }}\n                  >\n                    Subtotal : {item.detail.length} Transaksi\n                  </td>\n                  <td\n                    style={{\n                      backgroundColor: \"#E8E5E5\",\n                      color: \"#000\",\n                  textAlign: \"right\",\n\n                    }}\n                  >\n                    {\" \"}\n                    {formatGram(item.detail\n                      .map((list) => list.berat_nota)\n                      .reduce((a, b) => a + b, 0),3)}{\" \"}\n                  </td>\n                  <td\n                    style={{\n                      backgroundColor: \"#E8E5E5\",\n                      color: \"#000\",\n                  textAlign: \"right\",\n\n                    }}\n                  >\n                    {\" \"}\n                    {formatGram(item.detail\n                      .map((list) => list.berat)\n                      .reduce((a, b) => a + b, 0),3)}{\" \"}\n                  </td>\n                  <td\n                    style={{\n                      backgroundColor: \"#E8E5E5\",\n                      color: \"#000\",\n                  textAlign: \"right\",\n\n                    }}\n                  >\n                    {\" \"}\n                    {item.detail\n                      .map((list) => list.harga_nota)\n                      .reduce((a, b) => a + b, 0).toLocaleString(\"kr-KO\")}{\" \"}\n                  </td>\n                  <td\n                    style={{\n                      backgroundColor: \"#E8E5E5\",\n                      color: \"#000\",\n                  textAlign: \"right\",\n\n                    }}\n                  >\n                    {\" \"}\n                    {item.detail\n                      .map((list) => list.harga)\n                      .reduce((a, b) => a + b, 0).toLocaleString(\"kr-KO\")}{\" \"}\n                  </td>\n                  <td\n                    style={{\n                      backgroundColor: \"#E8E5E5\",\n                      color: \"#000\",\n                  textAlign: \"right\",\n\n                    }}\n                  >\n                    {\" \"}\n                    {item.detail\n                      .map((list) => list.harga_rata)\n                      .reduce((a, b) => a + b, 0).toLocaleString(\"kr-KO\")}{\" \"}\n                  </td>\n                 \n                </tr> */}\n              </>\n            ))}\n          </tbody>\n          <tfoot>\n            <tr>\n              <td\n                colSpan=\"7\"\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n\n                  textAlign: \"center\",\n                }}\n              >\n                Grand Total : {total_barang} Transaksi\n              </td>\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                  textAlign: \"right\",\n                }}\n              >\n                {formatGram(total_berat_nota,3)}\n              </td>\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                  textAlign: \"right\",\n\n                }}\n              >\n                {formatGram(total_berat,3)}\n              </td>\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                  textAlign: \"right\",\n\n                }}\n              >\n                {total_harga_nota.toLocaleString(\"kr-KO\")}\n              </td>\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                  textAlign: \"right\",\n\n                }}\n              >\n                {total_harga.toLocaleString(\"kr-KO\")}\n              </td>\n              <td\n                style={{\n                  backgroundColor: \"#E8E5E5\",\n                  color: \"#000\",\n                  textAlign: \"right\",\n\n                }}\n              >\n                {total_harga_rata.toLocaleString(\"kr-KO\")}\n              </td>\n              \n            </tr>\n          </tfoot>\n        </table>\n      </>\n    );\n  }\n}\nexport default ExportTransaksiPembelianPdfHistory;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport {\n  InputDate, \n} from \"../../../../components/helpers/field\";\nimport { formatGram, getTglSystem } from \"../../../../components/helpers/function\";\nimport Tabel from \"../../../../components/helpers/tabel\";\nimport ValidasiLaporanKeuangan from \"../../../../Validasi/LaporanKeuangan/ValidasiLaporanKeuangan\";\nimport ExportTransaksiPembelian from \"./pdf/ExportTransaksiPembelianHistory\"\nimport Loading from 'react-fullscreen-loading';\nimport ExportTransaksiPembelianPdfHistory from \"./exel/ExportTransaksiPembelianPdfHistory\";\nclass HeadFormLaporanPembelianBarangHistory extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: new Date(),\n      type: \"SEMUA\"\n    };\n    this.setStartDate = this.setStartDate.bind(this);\n    this.setLastDate = this.setLastDate.bind(this);\n  }\n\n  componentDidMount(){\n    this.props.change(\"type\", \"SELISIH\")\n  }\n  exportPdf() {\n    ExportTransaksiPembelian(this.props.LaporanTransaksiPembelian);\n  }\n  setStartDate(date) {\n    this.setState({\n      tgl_awal: new Date(date),\n    });\n  }\n  setLastDate(date) {\n    this.setState({\n      tgl_akhir: new Date(date),\n    });\n  }\n  render() {\n    let databarang = [];\n    let berat = 0;\n    let ongkos = 0;\n    let harga = 0;\n    let harga_nota = 0;\n    let harga_gram = 0;\n    let berat_nota = 0;\n    this.props.LaporanTransaksiPembelian.forEach((element) => {\n      element.detail.forEach((detail) => {\n        databarang.push(detail);\n        berat_nota = berat_nota + detail.berat_nota;\n        berat = berat + detail.berat;\n        ongkos = ongkos + detail.ongkos;\n        harga = harga + detail.harga;\n        harga_nota = harga_nota + detail.harga_nota;\n        harga_gram = harga_gram + detail.harga_gram;\n      });\n    });\n    const columns = [\n      {\n        dataField: \"no_faktur_beli\",\n        text: \"No FB\",\n        footerAttrs: {\n          colSpan: \"5\",\n        },\n        footer: (cell, row, num, index) => {\n          return <div>Total Transaksi : {databarang.length} </div>;\n        },\n      },\n      {\n        dataField: \"kode_sales\",\n        text: \"Kode Sales\",\n      },\n      {\n        dataField: \"kode_member\",\n        text: \"Kode Member\",\n      },\n      {\n        dataField: \"nama_customer\",\n        text: \"Nama Member\",\n      },\n      {\n        dataField: \"nama_barang\",\n        text: \"Nama Barang\",\n      },\n      {\n        dataField: \"kondisi\",\n        text: \"Kondisi\",\n        footer : ''\n      },\n      \n      {\n        dataField: \"berat_nota\",\n        text: \"Berat Nota\",\n        headerClasses: \"text-right\",\n        formatter: (cell) => {\n          return <div className=\"text-right\"> {formatGram(cell, 3)} </div>;\n        },\n      },\n      {\n        dataField: \"berat\",\n        text: \"Berat\",\n        headerClasses: \"text-right\",\n        formatter: (cell) => {\n          return <div className=\"text-right\"> {formatGram(cell, 3)} </div>;\n        },\n      },\n      {\n        dataField: \"harga_nota\",\n        text: \"Harga Nota\",\n        headerClasses: \"text-right\",\n        formatter: (cell) => {\n          return (\n            <div className=\"text-right\">{cell.toLocaleString(\"kr-KO\")}</div>\n          );\n        },\n      },\n      \n      {\n        dataField: \"harga\",\n        text: \"Harga\",\n        headerClasses: \"text-right\",\n        style: (cell, row, rowIndex, colIndex) => {\n          if (row.status_valid === \"CANC\") {\n            return {\n              backgroundColor: '#F6A6AD'\n            };\n          }\n          return {\n            backgroundColor: '#c8e6c9'\n          };\n        },\n        formatter: (cell) => {\n          return (\n            <div className=\"text-right\">{cell.toLocaleString(\"kr-KO\")}</div>\n          );\n        },\n      },\n      {\n        dataField: \"status_valid\",\n        text: \"Status\",\n        headerClasses: \"text-left\",\n        style: (cell, row, rowIndex, colIndex) => {\n          if (row.status_valid === \"CANC\") {\n            return {\n              backgroundColor: '#F6A6AD'\n            };\n          }\n          return {\n            backgroundColor: '#c8e6c9'\n          };\n        },\n        formatter: (cell) => {\n          return (cell === \"CANC\") ? \"BATAL PEMBELIAN\" : \"PEMBELIAN\"\n        },\n      },\n    ];\n    return (\n      <form onSubmit={this.props.handleSubmit} autoComplete=\"off\">\n      <div className=\"row\">\n        <div className=\"col-lg-3\">\n          <Field\n            name=\"tgl_awal\"\n            component={InputDate}\n            label=\"Tanggal Dari\"\n            type=\"text\"\n            selected={this.state.tgl_awal}\n            onChange={(date) => this.setStartDate(date)}\n            placeholder=\"Masukan Tanggal Dari\"\n          />\n        </div>\n\n        <div className=\"col-lg-3\">\n          <Field\n            name=\"tgl_akhir\"\n            component={InputDate}\n            type=\"text\"\n            selected={this.state.tgl_akhir}\n            onChange={(date) => this.setLastDate(date)}\n            label=\"Tanggal Akhir\"\n            placeholder=\"Masukan Tanggal Akhir\"\n          />\n        </div>\n        {/* <div className=\"col-lg-3\">\n            <Field\n              name=\"type\"\n              component={ReanderSelect}\n              onChange={(e) => this.setState({\n                type : e\n              })}\n              // onChange={(e)=>this.props.onChange(e)}  \n              options={[\n                { value: \"SEMUA\", name: \"SEMUA\" },\n                { value: \"SELISIH\", name: \"SELISIH\" },\n              ]}\n              label=\"Type Laporan\"\n              placeholder=\"Pilih Type\"\n            />\n          </div> */}\n        <div className=\"col-lg-3\">\n          <div className=\"text-right\">\n            <label>&nbsp;</label>\n            <button\n              type=\"submit\"\n              value=\"PDF\"\n              name=\"type_btn\"\n              className=\"btn btn-primary btn-block\"\n            >\n              {this.props.isLoading ? (\n                <>\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\n                  Mencari\n                </>\n              ) : (\n                \"Cari Laporan\"\n              )}\n            </button>\n          </div>\n          </div>\n          \n          <div className=\"col-lg-12\">\n            <Tabel\n              keyField=\"kode_barcode\"\n              data={this.props.export ? databarang : []}\n              columns={columns}\n              empty={true}\n              textEmpty=\"Data Laporan Transaksi Pembelian Kosong\"\n            />\n          </div>\n        <div className={this.props.export ? \"col-lg-12\" : \"col-lg-12 d-none\"}>\n          {/* <label htmlFor=\"\">&nbsp;</label> */}\n          <div className=\"row\">\n            <div className=\"col-lg-6\">\n              <button\n                onClick={() => this.exportPdf()}\n                className=\"btn btn-warning btn-block\"\n              >\n                {\" \"}\n                Export PDF{\" \"}\n              </button>\n            </div>\n            <div className=\"col-lg-6\">\n            <ExportTransaksiPembelianPdfHistory data={this.props.LaporanTransaksiPembelian} />\n            </div>\n          </div>\n        </div>\n      </div>\n      {this.props.isLoading ? (\n        <Loading \n        loading\n        background=\"rgba(0, 0, 0, 0.35)\"\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\n      ) : null}\n    </form>\n    );\n  }\n}\n\nHeadFormLaporanPembelianBarangHistory = reduxForm({\n  form: \"HeadFormLaporanPembelianBarangHistory\",\n  enableReinitialize: true,\n  validate: ValidasiLaporanKeuangan,\n})(HeadFormLaporanPembelianBarangHistory);\n// export default connect(null)(HeadFormLaporanPembelianBarangHistory);\nexport default connect((state) => {\n  return {\n    initialValues: {\n      tgl_awal: getTglSystem(),\n      tgl_akhir: getTglSystem(),\n    },\n  };\n})(HeadFormLaporanPembelianBarangHistory);\n"],"sourceRoot":""}