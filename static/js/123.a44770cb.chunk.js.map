{"version":3,"sources":["pages/utility/CetakBarcode/CetakBarcode.jsx"],"names":["CetakBarcode","props","_this","Object","_Users_nagatech_WebstormProjects_gallery_silver_pusat_master_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_super","call","toggle","bind","_Users_nagatech_WebstormProjects_gallery_silver_pusat_master_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__","state","activeTab","loading","isLoading","kode_baki","kode_gudang","databarang","columns","dataField","text","tab","setState","setItem","dispatch","getDataGudang","getDataBaki","data","hasil","key","value","type","postData2","then","ToastNotification","_this2","getData2","concat","res","length","catch","err","JSON","parse","localStorage","getItem","postData","hasil_print","no","map","index","kode_barcode","document","getElementById","TextFilenotapesanan","element","createElement","file","Blob","href","URL","createObjectURL","download","body","appendChild","click","_this3","dataGudang","name","forEach","list","nama_gudang","push","databaki","nama_baki","selectedRow","mode","clickToSelect","selectColumnPosition","onSelect","row","isSelect","rowIndex","e","nama_barang","berat","kode_intern","kode_dept","cek","findIndex","stringify","hasil_cek","splice","onSelectAll","kadar_cetak","react__WEBPACK_IMPORTED_MODULE_5___default","a","className","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","to","_components_panel_panel__WEBPACK_IMPORTED_MODULE_8__","style","display","id","rows","cols","redux_form__WEBPACK_IMPORTED_MODULE_11__","label","options","placeholder","onChange","getDataBakiByGudang","component","ReanderSelect","_components_helpers_field__WEBPACK_IMPORTED_MODULE_15__","htmlFor","onClick","getBarcode","Fragment","print","_components_helpers_tabel__WEBPACK_IMPORTED_MODULE_10__","selectRow","keyField","empty","_components_helpers_library__WEBPACK_IMPORTED_MODULE_17__","background","loaderColor","React","Component","reduxForm","form","enableReinitialize","connect","datamaster","dataGroup","GetDataGroup","dataJenis","getDataJenis"],"mappings":"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","file":"static/js/123.a44770cb.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ToastNotification } from \"../../../components/helpers/notification\";\nimport { Panel, PanelHeader } from \"../../../components/panel/panel\";\nimport { getData2, postData, postData2 } from \"../../../config/axios\";\nimport Tabel from \"../../../components/helpers/tabel\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { connect } from \"react-redux\";\nimport {\n  getDataBaki,\n  getDataBakiByGudang,\n} from \"../../../actions/datamaster_action\";\nimport { getDataGudang } from \"../../../actions/datamaster_action\";\nimport {\n  ReanderSelect,\n  SkeletonLoading,\n} from \"../../../components/helpers/field\";\n// import { getListBarangBarcode } from \"../../../actions/databarang_action\";\nimport { setItem } from \"../../../components/helpers/function\";\nimport { Loading } from \"../../../components/helpers/library\";\n\nclass CetakBarcode extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n\n    this.state = {\n      activeTab: \"1\",\n      loading: false,\n      isLoading: false,\n      kode_baki: \"\",\n      kode_gudang: \"\",\n      databarang: [],\n      columns: [\n        {\n          dataField: \"kode_barcode\",\n          text: \"Kode Barcode \",\n        },\n        {\n          dataField: \"nama_barang\",\n          text: \"Nama Barang \",\n        },\n        {\n          dataField: \"kode_dept\",\n          text: \"Kode Jenis \",\n        },\n        {\n          dataField: \"berat\",\n          text: \"Berat \",\n        },\n        {\n          dataField: \"kode_intern\",\n          text: \"Kode Intern \",\n        },\n      ],\n    };\n  }\n\n  toggle(tab) {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab,\n      });\n    }\n  }\n  componentDidMount() {\n    setItem(\"cetak_barcode_selected\", []);\n    this.props.dispatch(getDataGudang());\n    this.props.dispatch(getDataBaki());\n  }\n  setSystem(data) {\n    let hasil = {\n      key: \"kategori_harga\",\n      value: data,\n      type: \"kategori_harga\",\n    };\n    postData2(\"para-system/\", hasil).then(() => {\n      ToastNotification(\"success\", \"Berhasil Setting System\");\n    });\n  }\n\n  getBarcode() {\n    // this.props.dispatch(getListBarangBarcode(this.state.kode_gudang, this.state.kode_baki))\n    this.setState({\n      isLoading: true,\n    });\n    getData2(\n      `tambah-barang?kode_gudang=${this.state.kode_gudang || \"ALL\"}&kode_toko=${\n        this.state.kode_baki || \"ALL\"\n      }`\n    )\n      .then((res) => {\n        // console.log(res.data);\n        if (res.data.length === 0) {\n          ToastNotification(\"info\", \"Data Yang Anda Cari Tidak Ada\");\n          this.setState({\n            isLoading: false,\n            databarang: [],\n          });\n        } else {\n          ToastNotification(\"success\", \"Data Barang Tersedia\");\n          this.setState({\n            isLoading: false,\n            databarang: res.data,\n          });\n        }\n      })\n      .catch((err) => {\n        // console.log(err);\n        ToastNotification(\"info\", \"Terjadi Kesalahan Saat Request Data\");\n        this.setState({\n          isLoading: false,\n          databarang: [],\n        });\n      });\n  }\n\n  print() {\n    let hasil = JSON.parse(localStorage.getItem(\"cetak_barcode_selected\")) || [];\n    if (hasil.length === 0) {\n      ToastNotification(\"info\", \"Silahkan pilih barcode terlebih dahulu\");\n    } else {\n    postData(\"tmp-barang\", hasil)\n      .then((res) => {\n        // console.log(\"\");\n        ToastNotification(\"success\", \"Data Berhasil Disimpan\");\n      })\n      .catch((err) => {\n        ToastNotification(\"info\", \"Data Gagal Disimpan\");\n      }); \n      // let panjang = hasil.length;\n      let hasil_print = ``;\n\n      // console.log(hasil);\n      let no = 1;\n      hasil.map((data, index) => {\n        if (hasil.length === 1) {\n          hasil_print = hasil_print + data.kode_barcode;\n        } else {\n          if (no === hasil.length) {\n            hasil_print = hasil_print + data.kode_barcode;\n          } else {\n            hasil_print = hasil_print + data.kode_barcode + ',';\n          }\n        }\n\n      \n        no++;\n\n      //   if (index % 2 === 0) {\n      //     hasil_print =\n      //       hasil_print + `\u001bA\u001bCB+19\u001bZ\u0003\u0002\u001bA\u001bCD200,3300\u001bZ\u0003\u0002\u001bA\u001bEX0\u001bAR\u001bA3H001V001\u001bCS2\u001b#E4A\u001bPM0\u001bPO3+00\u001bYE1\u001bIG1\u001bPH0\u001bA101920610\u001bZ\u0003\u0002\u001bA\u001bPS`;\n      //     hasil_print = hasil_print + `\u001b%0\u001bH0470\u001bV005\u001bL0101\u001bP02\u001bS${data.nama_barang}`;\n      //     hasil_print = hasil_print + `\u001b%0\u001bH0490\u001bV0025\u001bBG01045>I${data.kode_barcode}`;\n      //     hasil_print = hasil_print + `\u001b%0\u001bH0490\u001bV0075\u001bL0101\u001bP02\u001bS${data.kode_barcode}`;\n      //     hasil_print = hasil_print + `\u001b%0\u001bH0470\u001bV0100\u001bL0101\u001bP02\u001bS${data.kode_dept}`;\n      //     hasil_print = hasil_print + `\u001b%0\u001bH0470\u001bV0115\u001bL0102\u001bP02\u001bM${data.berat}Gr`;\n      //     hasil_print = hasil_print + `\u001b%0\u001bH0470\u001bV0165\u001bL0101\u001bP02\u001bS${data.kode_intern}`;\n      //   } else {\n      //     hasil_print = hasil_print + `\u001b%0\u001bH0016\u001bV0005\u001bL0101\u001bP02\u001bS${data.nama_barang}`;\n      //     hasil_print = hasil_print + `\u001b%0\u001bH0030\u001bV0025\u001bBG01045>I${data.kode_barcode}`;\n      //     hasil_print = hasil_print + `\u001b%0\u001bH0030\u001bV0075\u001bL0101\u001bP02\u001bS${data.kode_barcode}`;\n      //     hasil_print = hasil_print + `\u001b%0\u001bH0016\u001bV0100\u001bL0101\u001bP02\u001bS${data.kode_dept}`;\n      //     hasil_print = hasil_print + `\u001b%0\u001bH0016\u001bV0115\u001bL0102\u001bP02\u001bM${data.berat}Gr`;\n      //     hasil_print = hasil_print + `\u001b%0\u001bH0016\u001bV0165\u001bL0101\u001bP02\u001bS${data.kode_intern}`;\n      //     hasil_print = hasil_print + `\u0002\u001bA\u001b/\u001bCK1\u001bQ1\u001bCL0\u001bZ\u0003`;\n      //   }\n        return true;\n      });\n      // if (panjang % 2 === 1) {\n      //   hasil_print = hasil_print + `\u0002\u001bA\u001b/\u001bCK1\u001bQ1\u001bCL0\u001bZ\u0003`;\n      // }\n      // console.log(hasil_print);\n      document.getElementById(\"barcode\").value = hasil_print;\n        this.TextFilenotapesanan();\n    }\n  }\n  TextFilenotapesanan() {\n    const element = document.createElement(\"a\");\n    const file = new Blob([document.getElementById(\"barcode\").value], {\n      type: \"text/plain;charset=utf-8\",\n    });\n    element.href = URL.createObjectURL(file);\n    element.download = \"autoprint_barcode.txt\";\n    document.body.appendChild(element);\n    element.click();\n  }\n\n  render() {\n    let dataGudang = [\n      {\n        value: \"ALL\",\n        name: \"SEMUA\",\n      },\n    ];\n    this.props.dataGudang.forEach((list) => {\n      let data = {\n        value: list.kode_gudang,\n        name: list.kode_gudang + \" - \" + list.nama_gudang,\n      };\n      dataGudang.push(data);\n    });\n    let databaki = [\n      {\n        value: \"ALL\",\n        name: \"SEMUA\",\n      },\n    ];\n    this.props.databaki.forEach((list) => {\n      let data = {\n        value: list.kode_baki,\n        name: list.kode_baki + \" - \" + list.nama_baki,\n      };\n      databaki.push(data);\n    });\n    const selectedRow = {\n      mode: \"checkbox\",\n      clickToSelect: true,\n      selectColumnPosition: \"left\",\n      onSelect: (row, isSelect, rowIndex, e) => {\n        // console.log(isSelect);\n        if (isSelect === true) {\n          let hasil = {\n            kode_barcode: row.kode_barcode,\n            nama_barang: row.nama_barang,\n            berat: row.berat,\n            kode_intern: row.kode_intern,\n            kode_dept: row.kode_dept,\n            // kadar_cetak : row.kadar_cetak,\n          };\n          let cek =\n            JSON.parse(localStorage.getItem(\"cetak_barcode_selected\")) || [];\n          let hasil_cek = cek.findIndex(\n            (hasil) => hasil.kode_barcode === row.kode_barcode\n          );\n          if (hasil_cek === -1) {\n            cek.push(hasil);\n            localStorage.setItem(\"cetak_barcode_selected\", JSON.stringify(cek));\n          }\n        } else {\n          // console.log();\n          if (localStorage.getItem(\"cetak_barcode_selected\") === null) {\n          } else {\n            let cek =\n              JSON.parse(localStorage.getItem(\"cetak_barcode_selected\")) || [];\n            let hasil_cek = cek.findIndex(\n              (hasil) => hasil.kode_barcode === row.kode_barcode\n            );\n            let data = JSON.parse(\n              localStorage.getItem(\"cetak_barcode_selected\")\n            );\n            data.splice(hasil_cek, 1);\n            localStorage.setItem(\n              \"cetak_barcode_selected\",\n              JSON.stringify(data)\n            );\n          }\n        }\n      },\n      onSelectAll: (isSelect, data, e) => {\n        data.forEach((list, index) => {\n          if (isSelect === true) {\n            let hasil = {\n              kode_barcode: list.kode_barcode,\n              nama_barang: list.nama_barang,\n              berat: list.berat,\n              kode_intern: list.kode_intern,\n              kode_dept: list.kode_dept,\n              kadar_cetak: list.kadar_cetak,\n            };\n            let cek =\n              JSON.parse(localStorage.getItem(\"cetak_barcode_selected\")) || [];\n            let hasil_cek = cek.findIndex(\n              (hasil) => hasil.kode_barcode === list.kode_barcode\n            );\n            if (hasil_cek === -1) {\n              cek.push(hasil);\n              localStorage.setItem(\n                \"cetak_barcode_selected\",\n                JSON.stringify(cek)\n              );\n            }\n          } else {\n            if (localStorage.getItem(\"cetak_barcode_selected\") === null) {\n            } else {\n              let cek =\n                JSON.parse(localStorage.getItem(\"cetak_barcode_selected\")) ||\n                [];\n              let hasil_cek = cek.findIndex(\n                (hasil) => hasil.kode_barcode === list.kode_barcode\n              );\n              let data = JSON.parse(\n                localStorage.getItem(\"cetak_barcode_selected\")\n              );\n              data.splice(hasil_cek, 1);\n              localStorage.setItem(\n                \"cetak_barcode_selected\",\n                JSON.stringify(data)\n              );\n            }\n          }\n        });\n      },\n    };\n    return (\n      <div>\n        <ol className=\"breadcrumb float-xl-right\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"#\">Dashboard</Link>\n          </li>\n          <li className=\"breadcrumb-item\">Cetak Barcode</li>\n        </ol>\n        <h1 className=\"page-header\">Cetak Barcode</h1>\n        <Panel>\n          <PanelHeader>Cetak Barcode</PanelHeader>\n          <br />\n          {/* Blank Page */}\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"d-none\">\n                <textarea\n                  style={{ display: \"none\" }}\n                  id=\"barcode\"\n                  rows=\"100\"\n                  cols=\"100\"\n                />\n              </div>\n              <div className=\"col-3\">\n                {this.state.loading === false ? (\n                  <Field\n                    label=\"Gudang\"\n                    name=\"kode_gudang\"\n                    options={dataGudang}\n                    placeholder={\"Silahkan Pilih Kode Baki\"}\n                    onChange={(e) => {\n                      if (e !== \"ALL\") {\n                        this.props.dispatch(getDataBakiByGudang(e));\n                      } else {\n                        this.props.dispatch(getDataBaki());\n                      }\n                      this.setState({\n                        kode_gudang: e,\n                      });\n                    }}\n                    component={ReanderSelect}\n                  />\n                ) : (\n                  <SkeletonLoading label=\"Kode Baki\" />\n                )}\n              </div>\n              <div className=\"col-3\">\n                {this.state.loading === false ? (\n                  <Field\n                    label=\"Kode Baki\"\n                    name=\"kode_baki\"\n                    options={databaki}\n                    onChange={(e) => {\n                      this.setState({\n                        kode_baki: e,\n                      });\n                    }}\n                    placeholder={\"Silahkan Pilih Kode Baki\"}\n                    component={ReanderSelect}\n                  />\n                ) : (\n                  <SkeletonLoading label=\"Kode Baki\" />\n                )}\n              </div>\n              <div className=\"col-lg-6\">\n                <div className=\"row\">\n                  <div className=\"col-lg-6\">\n                    <label htmlFor=\"\">&nbsp;</label>\n                    <button\n                      className=\"btn btn-outline-secondary btn-block\"\n                      onClick={(data) => this.getBarcode(data)}\n                    >\n                      {this.state.isLoading ? (\n                        <>\n                          <i className=\"fas fa-spinner fa-spin\"></i> &nbsp;\n                          Sedang Mencari\n                        </>\n                      ) : (\n                        \"Cari Data\"\n                      )}\n                    </button>\n                  </div>\n                  <div className=\"col-lg-6\">\n                    <label htmlFor=\"\">&nbsp;</label>\n                    <button\n                      className=\"btn btn-primary btn-block\"\n                      onClick={() => this.print()}\n                    >\n                      Print Barcode\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <Tabel\n              selectRow={selectedRow}\n              keyField=\"kode_barcode\"\n              columns={this.state.columns}\n              data={this.state.databarang || []}\n              empty={true}\n            />\n          </div>\n          <br />\n        </Panel>\n        {/* End Tambah Blank Page  */}\n        {this.state.isLoading ? (\n        <Loading \n        loading\n        background=\"rgba(0, 0, 0, 0.35)\"\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\n      ) : null}\n      </div>\n    );\n  }\n}\n\nCetakBarcode = reduxForm({\n  form: \"CetakBarcode\",\n  enableReinitialize: true,\n})(CetakBarcode);\nexport default connect((state) => {\n  return {\n    databaki: state.datamaster.getDataBaki,\n    dataGroup: state.datamaster.GetDataGroup,\n    dataJenis: state.datamaster.getDataJenis,\n    dataGudang: state.datamaster.getDataGudang,\n    // barangBarcode : state.databarang.barangBarcode\n  };\n})(CetakBarcode);\n"],"sourceRoot":""}