{"version":3,"sources":["pages/Hutang/ValidasiHutang/HeadValidasi.jsx","pages/Hutang/ValidasiHutang/FormValidasiHutang.jsx"],"names":["HeadValidasi","props","_this","Object","classCallCheck","this","_super","call","state","isLoading","DataValidasi","kode_sales","dispatch","getDataSales","getDetaValidasi","e","_this2","setState","getData","then","res","change","data","nama_sales","catch","err","ToastNotification","_this3","hasil","postData","hutang","length","getDataValidasiHutang","selectRow","mode","clickToSelect","selectColumnPosition","onSelect","row","isSelect","rowIndex","no_faktur_hutang","cek","JSON","parse","localStorage","getItem","findIndex","push","setItem","stringify","splice","onSelectAll","forEach","list","index","react_default","a","createElement","onSubmit","handleSubmit","autoComplete","onKeyPress","key","preventDefault","className","tabel","keyField","columns","getValidasiHutang","empty","disabled","type","Fragment","isLoadingBatal","onClick","btnClear","loading_default","loading","background","loaderColor","Component","reduxForm","form","enableReinitialize","connect","DataSales","datamaster","FormValidasiHutang","dataField","text","formatter","cell","parseFloat","toLocaleString","bind","assertThisInitialized","datahutang","feedback","notahutang","jml_alamat","n_alamat_customer","concat","tgl_system","nama_customer","no_hp","slice","detail_barang","detail","nama_barang","kondisi","kategori","jumlah","berat","toFixed","bunga","jumlah_hutang","document","getElementById","value","join","setTimeout","element","file","Blob","href","URL","createObjectURL","download","body","appendChild","click","removeItem","reset","_this4","react_router_dom","to","panel","style","display","id","rows","cols","ValidasiHutang_HeadValidasi","clearHutang","React"],"mappings":"8PAiBMA,oDACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAI,EAAAC,KAAAF,KAAMJ,IACDO,MAAQ,CACXC,WAAW,EACXC,aAAc,GACdC,YAAY,GALGT,kEAUjBG,KAAKJ,MAAMW,SAASC,gBACpBR,KAAKS,uDAEMC,GAAG,IAAAC,EAAAX,KACdA,KAAKY,SAAS,CACZN,WAAYI,IAEdG,YAAQ,4BACLC,KAAK,SAACC,GACLJ,EAAKf,MAAMoB,OAAO,aAAcD,EAAIE,KAAKC,cAE1CC,MAAM,SAACC,GACNC,YAAkB,OAAQ,6EAGd,IAAAC,EAAAtB,KAChBA,KAAKY,SAAS,CACZR,WAAW,IAEb,IAAImB,EAAQ,CACVjB,WAAY,OAEd,IAAyB,IAArBiB,EAAMjB,WAQR,OAPAN,KAAKY,SAAS,CACZR,WAAW,IAEbiB,YAAkB,OAAQ,6BAC1BrB,KAAKY,SAAS,CACZR,WAAW,KAEN,EAEToB,YAAS,sBAAuBD,GAC7BT,KAAK,SAACC,GAE6B,IAA9BA,EAAIE,KAAK,GAAGQ,OAAOC,QACrBL,YAAkB,OAAQ,2BAC1BC,EAAKV,SAAS,CACZR,WAAW,MAGbiB,YAAkB,UAAW,0BAC7BC,EAAKV,SAAS,CACZR,WAAW,IAEbkB,EAAK1B,MAAMW,SAASoB,YAAsBZ,EAAIE,KAAK,GAAGQ,YAGzDN,MAAM,SAACC,GACNC,YAAkB,OAAQ,kCAC1BC,EAAKV,SAAS,CACZR,WAAW,EACXC,aAAc,wCAMpB,IAAMuB,EAAY,CAChBC,KAAM,WACNC,eAAe,EACfC,qBAAsB,OACtBC,SAAU,SAACC,EAAKC,EAAUC,EAAUzB,GAElC,IAAiB,IAAbwB,EAAmB,CACrB,IAAIX,EAAQ,CACVa,iBAAkBH,EAAIG,kBAEpBC,EAAMC,KAAKC,MAAMC,aAAaC,QAAQ,oBAAsB,IAI7C,IAHHJ,EAAIK,UAClB,SAACnB,GAAD,OAAWA,EAAMa,mBAAqBH,EAAIG,qBAG1CC,EAAIM,KAAKpB,GACTiB,aAAaI,QAAQ,iBAAkBN,KAAKO,UAAUR,UAIxD,GAA+C,OAA3CG,aAAaC,QAAQ,uBAClB,CACL,IAAIxB,EAAOqB,KAAKC,MAAMC,aAAaC,QAAQ,mBAC3CxB,EAAK6B,OAAOb,EAAIG,iBAAkB,GAClCI,aAAaI,QAAQ,iBAAkBN,KAAKO,UAAU5B,MAI5D8B,YAAa,SAACb,EAAUjB,EAAMP,GAC5BO,EAAK+B,QAAQ,SAACC,EAAMC,GAClB,IAAiB,IAAbhB,EAAmB,CACrB,IAAIX,EAAQ,CACVa,iBAAkBa,EAAKb,kBAErBC,EAAMC,KAAKC,MAAMC,aAAaC,QAAQ,oBAAsB,IAI7C,IAHHJ,EAAIK,UAClB,SAACnB,GAAD,OAAWA,EAAMa,mBAAqBa,EAAKb,qBAG3CC,EAAIM,KAAKpB,GACTiB,aAAaI,QAAQ,iBAAkBN,KAAKO,UAAUR,UAGxD,GAA+C,OAA3CG,aAAaC,QAAQ,uBAClB,CACL,IAAIxB,EAAOqB,KAAKC,MAAMC,aAAaC,QAAQ,mBAC3CxB,EAAK6B,OAAOG,EAAKb,iBAAkB,GACnCI,aAAaI,QAAQ,iBAAkBN,KAAKO,UAAU5B,SAsDhE,OACEkC,EAAAC,EAAAC,cAAA,QAAMC,SAAUtD,KAAKJ,MAAM2D,aAAcC,aAAa,MACtDC,WAAY,SAAC/C,GACD,UAAVA,EAAEgD,KAAmBhD,EAAEiD,mBAGvBR,EAAAC,EAAAC,cAAA,OAAKO,UAAU,OA4CbT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,UACbT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEjC,UAAWA,EAEXkC,SAAS,mBACTC,QAAS/D,KAAKJ,MAAMmE,QACpB9C,KAAMjB,KAAKJ,MAAMoE,mBAAqB,GACtCC,OAAO,KAGXd,EAAAC,EAAAC,cAAA,OAAKO,UAAU,SACbT,EAAAC,EAAAC,cAAA,UACEO,UAAU,4BACVM,SAAUlE,KAAKJ,MAAMQ,UACrB+D,KAAK,UAEJnE,KAAKJ,MAAMQ,UACV+C,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgB,SAAA,KACEjB,EAAAC,EAAAC,cAAA,KAAGO,UAAU,2BADf,kBAIA,aAINT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,SACbT,EAAAC,EAAAC,cAAA,UACEO,UAAU,4BACVM,SAAUlE,KAAKJ,MAAMyE,eACrBC,QAAStE,KAAKJ,MAAM2E,SACpBJ,KAAK,UAEJnE,KAAKJ,MAAMyE,eACVlB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgB,SAAA,KACEjB,EAAAC,EAAAC,cAAA,KAAGO,UAAU,2BADf,eAIA,WAKP5D,KAAKJ,MAAMQ,WAAaJ,KAAKJ,MAAMyE,gBAAkBrE,KAAKG,MAAMC,UACjE+C,EAAAC,EAAAC,cAACmB,EAAApB,EAAD,CACAqB,SAAO,EACPC,WAAW,sBACVC,YAAY,0BACX,aA3QiBC,aAiR3BjF,EAAekF,YAAU,CACvBC,KAAM,qBACNC,oBAAoB,GAFPF,CAGZlF,GACYqF,kBA3RI,SAAC7E,GAClB,MAAO,CACL8E,UAAW9E,EAAM+E,WAAW1E,aAC5BwD,kBAAmB7D,EAAMsB,OAAOE,wBAwRrBqD,CAAoBrF,GC5R7BwF,oDACJ,SAAAA,EAAYvF,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmF,IACjBtF,EAAAI,EAAAC,KAAAF,KAAMJ,IACDO,MAAQ,CACXC,WAAW,EACXiE,gBAAgB,EAEhBN,QAAS,CACP,CACEqB,UAAW,mBACXC,KAAM,qBAcR,CACED,UAAW,gBACXC,KAAM,kBAER,CACED,UAAW,gBACXC,KAAM,iBACNC,UAAW,SAACC,GACV,OAAOpC,EAAAC,EAAAC,cAAA,YAAOmC,WAAWD,GAAME,eAAe,YAGlD,CACEL,UAAW,QACXC,KAAM,UAER,CACED,UAAW,kBACXC,KAAM,aAiBZxF,EAAK0D,aAAe1D,EAAK0D,aAAamC,KAAlB5F,OAAA6F,EAAA,EAAA7F,CAAAD,IAzDHA,2DA4DNoB,GAAM,IAAAN,EAAAX,KACjB,GAC6C,OAA3CwC,aAAaC,QAAQ,mBACyC,IAA9DH,KAAKC,MAAMC,aAAaC,QAAQ,mBAAmBf,OAEnDL,YAAkB,OAAQ,kCAC1BrB,KAAKY,SAAS,CACZR,WAAW,QAER,CACL,IAGIqB,EAAS,CACXA,OAJgBa,KAAKC,MACrBC,aAAaC,QAAQ,mBAAqB,KAK5CzC,KAAKY,SAAS,CACZR,WAAW,IAGboB,YAAS,yBAA0BC,GAChCX,KAAK,SAACC,GACLJ,EAAKC,SAAS,CACZR,WAAW,IAGvB,IADA,IAAIwF,EAAa,GACR1C,EAAQ,EAAGA,EAAQ,EAAGA,IAAS,CACxC,IAAI2C,EAAW,GACf9E,EAAIE,KAAK6E,WAAW9C,QAAQ,SAACf,EAAKiB,GAClC,IAAI6C,EAAa9D,EAAI+D,kBAAkBtE,OACvCmE,GAAQ,6CACRA,GAAQ,6CACRA,GAAQ,gEAAAI,OACahE,EAAIiE,WADjB,yBAAAD,OAEahE,EAAI3B,WAFjB,yBAAA2F,OAGahE,EAAIkE,cAHjB,yBAAAF,OAIahE,EAAImE,MAJjB,yBAAAH,OAKahE,EAAI+D,kBAAkBK,MAAM,EAAE,IAL3C,yBAAAJ,OAMahE,EAAIG,iBAAiBqD,eAAe,SANjD,MAQLM,EAAW,KACdF,GAAQ,sBAAAI,OAA0BhE,EAAI+D,kBAAkBK,MAAM,EAAE,IAAxD,OAGLN,EAAW,KACdF,GAAQ,sBAAAI,OAA0BhE,EAAI+D,kBAAkBK,MAAM,GAAG,IAAzD,OAGRR,GAAQ,6CACRA,GAAQ,eACRA,GAAQ,6CACR5D,EAAIqE,cAActD,QAAQ,SAACuD,EAAQrD,GACnC2C,GAAQ,sBAAAI,OAA0BM,EAAOC,YAAjC,MACRX,GAAQ,sBAAAI,OAA0BM,EAAOE,QAAjC,MACRZ,GAAQ,sBAAAI,OAA0BM,EAAOG,SAAjC,MACRb,GAAQ,sBAAAI,OAA0BM,EAAOI,OAAjC,MACRd,GAAQ,sBAAAI,OAA0BM,EAAOK,MAAMC,QAAQ,GAA/C,MACRhB,GAAQ,+CAERA,GAAQ,sBAAAI,OAA0BhE,EAAI2E,MAAMC,QAAQ,GAA5C,MACRhB,GAAQ,sBAAAI,OAA0BhE,EAAI6E,MAAMD,QAAQ,GAA5C,MACRhB,GAAQ,sBAAAI,OAA0BhE,EAAI8E,cAActB,eAAe,SAA3D,MACRI,GAAQ,6CACRA,GAAQ,6CACRA,GAAQ,6CACRA,GAAQ,6CACRA,GAAQ,6CACRA,GAAQ,6CACRA,GAAQ,6CACRA,GAAQ,6CACRA,GAAQ,+CAEND,EAAWjD,KAAKkD,GAIRmB,SAASC,eAAe,WAAWC,MAAQtB,EAAWuB,KAAK,IAC3DC,WAAW,WACT,IAAMC,EAAUL,SAAS3D,cAAc,KACjCiE,EAAO,IAAIC,KAAK,CAACP,SAASC,eAAe,WAAWC,OAAQ,CAChE/C,KAAM,6BAERkD,EAAQG,KAAOC,IAAIC,gBAAgBJ,GACnCD,EAAQM,SAAW,uBACnBX,SAASY,KAAKC,YAAYR,GAC1BA,EAAQS,SACP,KACHzG,YAAkB,UAAW,+BAC7BmB,aAAauF,WAAW,kBACxBpH,EAAKf,MAAMW,SAASyH,YAAM,uBAC1BrH,EAAKf,MAAMW,SAASoB,YAAsB,OAE3CR,MAAM,SAACC,GACNT,EAAKC,SAAS,CACZR,WAAW,IAEbiB,YAAkB,OAAQ,0EAKpB,IAAAC,EAAAtB,KACZA,KAAKY,SAAS,CACZyD,gBAAgB,IAElB+C,WAAW,WACT9F,EAAKV,SAAS,CACZyD,gBAAgB,IAElB7B,aAAauF,WAAW,kBACxBzG,EAAK1B,MAAMW,SAASyH,YAAM,uBAC1B1G,EAAK1B,MAAMW,SAASoB,YAAsB,MACzC,sCA8EI,IAAAsG,EAAAjI,KACP,OACEmD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIO,UAAU,6BACZT,EAAAC,EAAAC,cAAA,MAAIO,UAAU,mBACZT,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,CAAMC,GAAG,KAAT,UAEFhF,EAAAC,EAAAC,cAAA,MAAIO,UAAU,0BAAd,oBAEFT,EAAAC,EAAAC,cAAA,MAAIO,UAAU,eAAd,oBACAT,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,KACAjF,EAAAC,EAAAC,cAAA,YACIgF,MAAO,CAAEC,QAAS,QAClBC,GAAG,UACHC,KAAK,MACLC,KAAK,QAEPtF,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,wBAEAjF,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,OAAKO,UAAU,aACbT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,OACbT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,UACbT,EAAAC,EAAAC,cAACqF,EAAD,CACE3E,QAAS/D,KAAKG,MAAM4D,QACpB3D,UAAWJ,KAAKG,MAAMC,UACtBiE,eAAgBrE,KAAKG,MAAMkE,eAC3BE,SAAU,kBAAI0D,EAAKU,eACnBrF,SAAU,SAACrC,GAAD,OAAUgH,EAAK1E,aAAatC,OAG1CkC,EAAAC,EAAAC,cAAA,OAAKO,UAAU,aAGnBT,EAAAC,EAAAC,cAAA,oBA9RuBuF,IAAMhE,WAsSvCO,EAAqBN,YAAU,CAC7BC,KAAM,qBACNC,oBAAoB,GAFDF,CAGlBM,GACYH,wBAAUG","file":"static/js/66.f99d9417.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\n// import { ReanderField, ReanderSelect } from \"../../../components/helpers/field\";\nimport { getDataSales } from \"../../../actions/datamaster_action\";\nimport { getData, postData } from \"../../../config/axios\";\nimport { ToastNotification } from \"../../../components/helpers/notification\";\nimport Tabel from \"../../../components/helpers/tabel\";\nimport { getDataValidasiHutang } from \"../../../actions/hutang_action\";\nimport Loading from 'react-fullscreen-loading';\n\nconst maptostate = (state) => {\n  return {\n    DataSales: state.datamaster.getDataSales,\n    getValidasiHutang: state.hutang.getDataValidasiHutang,\n  };\n};\nclass HeadValidasi extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      DataValidasi: [],\n      kode_sales: false,\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(getDataSales());\n    this.getDetaValidasi()\n  }\n  getDataSales(e) {\n    this.setState({\n      kode_sales: e,\n    });\n    getData(\"sales/get/by-kode-sales/\")\n      .then((res) => {\n        this.props.change(\"nama_sales\", res.data.nama_sales);\n      })\n      .catch((err) => {\n        ToastNotification(\"info\", \"Gagal Mengambil Data Keserver\");\n      });\n  }\n  getDetaValidasi() {\n    this.setState({\n      isLoading: true,\n    });\n    let hasil = {\n      kode_sales: \"all\",\n    };\n    if (hasil.kode_sales === false) {\n      this.setState({\n        isLoading: false,\n      });\n      ToastNotification(\"info\", \"Kode Sales Harus Di pilih\");\n      this.setState({\n        isLoading: false,\n      });\n      return false;\n    }\n    postData(\"validasi/get/hutang\", hasil)\n      .then((res) => {\n        //   console.log(res.data[0].hutang);\n        if (res.data[0].hutang.length === 0) {\n          ToastNotification(\"info\", \"Belum Ada Data Validasi\");\n          this.setState({\n            isLoading: false,\n          });\n        } else {\n          ToastNotification(\"success\", \"Data Validasi Tersedia\");\n          this.setState({\n            isLoading: false,\n          });\n          this.props.dispatch(getDataValidasiHutang(res.data[0].hutang));\n        }\n      })\n      .catch((err) => {\n        ToastNotification(\"info\", \"Terjadi Kesalahan Saat Request\");\n        this.setState({\n          isLoading: false,\n          DataValidasi: [],\n        });\n      });\n  }\n\n  render() {\n    const selectRow = {\n      mode: \"checkbox\",\n      clickToSelect: true,\n      selectColumnPosition: \"left\",\n      onSelect: (row, isSelect, rowIndex, e) => {\n        // console.log(isSelect);\n        if (isSelect === true) {\n          let hasil = {\n            no_faktur_hutang: row.no_faktur_hutang,\n          };\n          let cek = JSON.parse(localStorage.getItem(\"validas_hutang\")) || [];\n          let hasil_cek = cek.findIndex(\n            (hasil) => hasil.no_faktur_hutang === row.no_faktur_hutang\n          );\n          if (hasil_cek === -1) {\n            cek.push(hasil);\n            localStorage.setItem(\"validas_hutang\", JSON.stringify(cek));\n          }\n        } else {\n          // console.log();\n          if (localStorage.getItem(\"validas_hutang\") === null) {\n          } else {\n            let data = JSON.parse(localStorage.getItem(\"validas_hutang\"));\n            data.splice(row.no_faktur_hutang, 1);\n            localStorage.setItem(\"validas_hutang\", JSON.stringify(data));\n          }\n        }\n      },\n      onSelectAll: (isSelect, data, e) => {\n        data.forEach((list, index) => {\n          if (isSelect === true) {\n            let hasil = {\n              no_faktur_hutang: list.no_faktur_hutang,\n            };\n            let cek = JSON.parse(localStorage.getItem(\"validas_hutang\")) || [];\n            let hasil_cek = cek.findIndex(\n              (hasil) => hasil.no_faktur_hutang === list.no_faktur_hutang\n            );\n            if (hasil_cek === -1) {\n              cek.push(hasil);\n              localStorage.setItem(\"validas_hutang\", JSON.stringify(cek));\n            }\n          } else {\n            if (localStorage.getItem(\"validas_hutang\") === null) {\n            } else {\n              let data = JSON.parse(localStorage.getItem(\"validas_hutang\"));\n              data.splice(list.no_faktur_hutang, 1);\n              localStorage.setItem(\"validas_hutang\", JSON.stringify(data));\n            }\n          }\n        });\n      },\n    };\n    // const expandRow = {\n    //   showExpandColumn: true,\n    //   renderer: (row) => (\n    //     <div className=\"row container\">\n    //       <div className=\"col-6\">\n    //         Nama Customer : {row.nama_customer}\n    //         <br />\n    //         No Hp : {row.no_hp}\n    //         <br />\n    //         Alamat Customer : {row.alamat_customer}\n    //         <br />\n    //         Berat Emas : {row.berat_emas}\n    //         <br />\n    //         Berat Bruto : {row.berat_bruto}\n    //         <br />\n    //         Total Bayar : {row.total_bayar}\n    //         <br />\n    //       </div>\n    //       <div className=\"col-6\">\n    //         <table>\n    //           <thead>\n    //             <tr>\n    //               <td>Nama Barang</td>\n    //               <td>Kondisi</td>\n    //               <td>Kategori</td>\n    //               <td>Jumlah</td>\n    //               <td>Berat</td>\n    //             </tr>\n    //           </thead>\n    //           <tbody>\n    //             <>\n    //               {row.detail_barang.map((detail, index) => (\n    //                 <tr>\n    //                   <td> {detail.nama_barang} </td>\n    //                   <td> {detail.kondisi} </td>\n    //                   <td> {detail.kategori} </td>\n    //                   <td> {detail.jumlah} </td>\n    //                   <td> {detail.berat} </td>\n    //                 </tr>\n    //               ))}\n    //             </>\n    //           </tbody>\n    //         </table>\n    //       </div>\n    //     </div>\n    //   ),\n    // };\n    \n    return (\n      <form onSubmit={this.props.handleSubmit} autoComplete=\"off\"\n      onKeyPress={(e) => {\n        e.key === \"Enter\" && e.preventDefault();\n      }}\n      >\n        <div className=\"row\">\n          {/* <div className=\"col-4\">\n            <Field\n              name=\"kode_sales\"\n              onChange={(e) => this.getDataSales(e)}\n              label=\"Pilih Kode Sales\"\n              placeholder=\"Masukan Kode Sales\"\n              options={this.props.DataSales.map((list) => {\n                let data = {\n                  value: list.kode_sales,\n                  name: list.nama_sales,\n                };\n                return data;\n              })}\n              component={ReanderSelect}\n            />\n          </div>\n          <div className=\"col-4\">\n            <Field\n              name=\"nama_sales\"\n              component={ReanderField}\n              type=\"text\"\n              label=\"Nama Sales\"\n              placeholder=\"Masukan Nama Sales\"\n              readOnly={true}\n            />\n          </div>\n          <div className=\"col-4\">\n            <label>&nbsp;</label>\n            <button\n              onClick={() => this.getDetaValidasi()}\n              className=\"btn btn-primary btn-block\"\n              disabled={this.state.isLoading}\n              type=\"button\"\n            >\n              {this.state.isLoading ? (\n                <>\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Cari Data\n                </>\n              ) : (\n                \"Cari Data\"\n              )}\n            </button>\n          </div> */}\n          <div className=\"col-12\">\n            <Tabel\n              selectRow={selectRow}\n              //   expandRow={expandRow}\n              keyField=\"no_faktur_hutang\"\n              columns={this.props.columns}\n              data={this.props.getValidasiHutang || []}\n              empty={true}\n            />\n          </div>\n          <div className=\"col-6\">\n            <button\n              className=\"btn btn-primary btn-block\"\n              disabled={this.props.isLoading}\n              type=\"submit\"\n            >\n              {this.props.isLoading ? (\n                <>\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Validasi\n                </>\n              ) : (\n                \"Validasi\"\n              )}\n            </button>\n          </div>\n          <div className=\"col-6\">\n            <button\n              className=\"btn btn-warning btn-block\"\n              disabled={this.props.isLoadingBatal}\n              onClick={this.props.btnClear}\n              type=\"button\"\n            >\n              {this.props.isLoadingBatal ? (\n                <>\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Batal\n                </>\n              ) : (\n                \"Batal\"\n              )}\n            </button>\n          </div>\n        </div>\n        {this.props.isLoading || this.props.isLoadingBatal || this.state.isLoading ? (\n        <Loading \n        loading\n        background=\"rgba(0, 0, 0, 0.35)\"\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\n      ) : null}\n      </form>\n    );\n  }\n}\n\nHeadValidasi = reduxForm({\n  form: \"HeadValidasiHutang\",\n  enableReinitialize: true,\n})(HeadValidasi);\nexport default connect(maptostate)(HeadValidasi);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { reduxForm, reset } from \"redux-form\";\nimport { getDataValidasiHutang } from \"../../../actions/hutang_action.jsx\";\nimport { ToastNotification } from \"../../../components/helpers/notification.jsx\";\nimport { Panel, PanelHeader } from \"../../../components/panel/panel.jsx\";\nimport { postData } from \"../../../config/axios.jsx\";\nimport HeadValidasi from \"./HeadValidasi.jsx\";\n\nclass FormValidasiHutang extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      isLoadingBatal: false,\n      //   DataValidasi: [],\n      columns: [\n        {\n          dataField: \"no_faktur_hutang\",\n          text: \"No Faktur Hutang \",\n        },\n        // {\n        //   dataField: \"tgl_system\",\n        //   text: \"Tanggal System \",\n        // },\n        // {\n        //   dataField: \"tgl_lunas\",\n        //   text: \"Tgl Lunas \",\n        // },\n        // {\n        //   dataField: \"tgl_tempo\",\n        //   text: \"Tgl Jth Tempo \",\n        // },\n        {\n          dataField: \"nama_customer\",\n          text: \"Nama Customer \",\n        },\n        {\n          dataField: \"jumlah_hutang\",\n          text: \"Jumlah Hutang \",\n          formatter: (cell) => {\n            return <span>{parseFloat(cell).toLocaleString(\"kr-KO\")}</span>;\n          },\n        },\n        {\n          dataField: \"no_hp\",\n          text: \"No Hp \",\n        },\n        {\n          dataField: \"alamat_customer\",\n          text: \"Alamat \",\n        },\n\n        // {\n        //   dataField: \"lama_pinjam\",\n        //   text: \"Lama Pinjam \",\n        // },\n        // {\n        //   dataField: \"bunga\",\n        //   text: \"Bunga \",\n        // },\n        // {\n        //   dataField: \"total_hutang\",\n        //   text: \"Total Hutang \",\n        // },\n      ],\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(data) {\n    if (\n      localStorage.getItem(\"validas_hutang\") === null ||\n      JSON.parse(localStorage.getItem(\"validas_hutang\")).length === 0\n    ) {\n      ToastNotification(\"info\", \"No Faktur Hutang Belum Dipilih\");\n      this.setState({\n        isLoading: false,\n      });\n    } else {\n      let data_hutang = JSON.parse(\n        localStorage.getItem(\"validas_hutang\") || []\n      );\n      let hutang = {\n        hutang: data_hutang,\n      };\n      this.setState({\n        isLoading: true,\n      });\n      // console.log(hutang);\n      postData(\"validasi/simpan/hutang\", hutang)\n        .then((res) => {\n          this.setState({\n            isLoading: false,\n          });\nlet datahutang = [];\nfor (let index = 0; index < 2; index++) {\nlet feedback = '';\nres.data.notahutang.forEach((row, index) => {\nlet jml_alamat = row.n_alamat_customer.length;\nfeedback += `========================================\\n`\nfeedback += `              NOTA HUTANG               \\n`\nfeedback += `========================================\nTanggal          : ${row.tgl_system}\nKode Sales       : ${row.kode_sales}\nNama Customer    : ${row.nama_customer}\nNo Hp            : ${row.no_hp}\nAlamat Customer  : ${row.n_alamat_customer.slice(0,20)}\nNo Faktur Hutang : ${row.no_faktur_hutang.toLocaleString(\"kr-KO\")}\n`\nif(jml_alamat>20){\nfeedback += `                   ${row.n_alamat_customer.slice(0,20)}\n`;\n}\nif(jml_alamat>40){\nfeedback += `                   ${row.n_alamat_customer.slice(40,20)}\n`;\n}\nfeedback += `========================================\\n`\nfeedback += `Keterangan\\n`\nfeedback += `========================================\\n`\nrow.detail_barang.forEach((detail, index) => {\nfeedback += `Nama Barang      : ${detail.nama_barang}\\n`\nfeedback += `Kondisi          : ${detail.kondisi}\\n`\nfeedback += `Kategori         : ${detail.kategori}\\n`\nfeedback += `Jumlah           : ${detail.jumlah}\\n`\nfeedback += `Berat            : ${detail.berat.toFixed(3)}\\n`\nfeedback += `========================================\\n`\n})\nfeedback += `Berat            : ${row.berat.toFixed(3)}\\n`\nfeedback += `Bunga            : ${row.bunga.toFixed(3)}\\n`\nfeedback += `Jumlah Hutang    : ${row.jumlah_hutang.toLocaleString(\"kr-KO\")}\\n`\nfeedback += `========================================\\n`\nfeedback += `                               TTD      \\n`\nfeedback += `                                        \\n`\nfeedback += `                                        \\n`\nfeedback += `                                        \\n`\nfeedback += `                         (             )\\n`\nfeedback += `                                        \\n`\nfeedback += `                                        \\n`\nfeedback += `                                        \\n`\n})\n  datahutang.push(feedback);\n}          \n  \n    \n          document.getElementById(\"myInput\").value = datahutang.join('');\n          setTimeout(() => {\n            const element = document.createElement(\"a\");\n            const file = new Blob([document.getElementById(\"myInput\").value], {\n              type: \"text/plain;charset=utf-8\",\n            });\n            element.href = URL.createObjectURL(file);\n            element.download = \"autoprint_hutang.txt\";\n            document.body.appendChild(element);\n            element.click();\n          }, 300);\n          ToastNotification(\"success\", \"Hutang Berhasil Di Validasi\");\n          localStorage.removeItem(\"validas_hutang\");\n          this.props.dispatch(reset(\"HeadValidasiHutang\"));\n          this.props.dispatch(getDataValidasiHutang([]));\n        })\n        .catch((err) => {\n          this.setState({\n            isLoading: false,\n          });\n          ToastNotification(\"info\", \"Gagal Mengambil Data Keserver\");\n        });\n    }\n    //   console.log();\n  }\n  clearHutang() {\n    this.setState({\n      isLoadingBatal: true,\n    });\n    setTimeout(() => {\n      this.setState({\n        isLoadingBatal: false,\n      });\n      localStorage.removeItem(\"validas_hutang\");\n      this.props.dispatch(reset(\"HeadValidasiHutang\"));\n      this.props.dispatch(getDataValidasiHutang([]));\n    }, 1000);\n  }\n//   Reprint(id) {\n//     let hasil = {\n//       hutang:\n//       [\n//         {\n//           no_faktur_hutang: \"dc35cabd-269e-4dfb-b761-384c871335dd\"\n//         },\n//         {\n//           no_faktur_hutang: \"543f65c0-66bf-4db2-98a9-13c081d2495e\"\n//         }\n//       ]\n//     }\n//     postData('validasi/simpan/hutang', hasil).then((res) => {\n//   console.log(res.data.notahutang);\n// let feedback = '';\n// res.data.notahutang.forEach((row, index) => {\n//   let jml_alamat = row.n_alamat_customer.length;\n// feedback += `========================================\n// Tanggal          : ${row.tgl_system}\n// Kode Sales       : ${row.kode_sales}\n// Nama Customer    : ${row.nama_customer}\n// No Hp            : ${row.no_hp}\n// Alamat Customer  : ${row.n_alamat_customer.split(0,20)}\n// No Faktur Hutang : ${row.no_faktur_hutang.toLocaleString(\"kr-KO\")}\n// `\n// if(jml_alamat>20){\n// feedback += `                   ${row.n_alamat_customer.split(0,20)}\n// `;\n// }\n// if(jml_alamat>40){\n// feedback += `                   ${row.n_alamat_customer.split(40,20)}\n// `;\n// }\n// feedback += `========================================\\n`\n// feedback += `Keterangan\\n`\n// feedback += `========================================\\n`\n// row.detail_barang.forEach((detail, index) => {\n// feedback += `Nama Barang      : ${detail.nama_barang}\\n`\n// feedback += `Kondisi          : ${detail.kondisi}\\n`\n// feedback += `Kategori         : ${detail.kategori}\\n`\n// feedback += `Jumlah           : ${detail.jumlah}\\n`\n// feedback += `Berat            : ${detail.berat.toFixed(3)}\\n`\n// feedback += `========================================\\n`\n// })\n// feedback += `Berat            : ${row.berat.toFixed(3)}\\n`\n// feedback += `Bunga            : ${row.bunga.toFixed(3)}\\n`\n// feedback += `Jumlah Hutang    : ${row.jumlah_hutang.toLocaleString(\"kr-KO\")}\\n`\n// feedback += `========================================\\n`\n// feedback += `\n\n\n\n\n\n\n// `\n// })\n    \n//           document.getElementById(\"myInput\").value = feedback;\n    \n//         }).then(() => {\n//           // console.log('masuk');\n//           // const element = document.createElement(\"a\");\n//           // const file = new Blob([document.getElementById(\"myInput\").value], {\n//           //   type: \"text/plain;charset=utf-8\",\n//           // });\n//           // element.href = URL.createObjectURL(file);\n//           // element.download = \"autoprint_service.txt\";\n//           // document.body.appendChild(element);\n//           // element.click();\n//         })\n          \n//           .catch((err) => {\n          \n//         })\n//       }\n  render() {\n    return (\n      <div>\n        <ol className=\"breadcrumb float-xl-right\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"#\">Kasir</Link>\n          </li>\n          <li className=\"breadcrumb-item active\">Validasi Hutang</li>\n        </ol>\n        <h1 className=\"page-header\">Validasi Hutang </h1>\n        <Panel>\n        <textarea\n            style={{ display: \"none\" }}\n            id=\"myInput\"\n            rows=\"100\"\n            cols=\"100\"\n          />\n          <PanelHeader>Validasi Hutang</PanelHeader>\n          {/* <button onClick={()=>this.Reprint()}> PRINT </button> */}\n          <br />\n          {/* Validasi Hutang */}\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <HeadValidasi\n                  columns={this.state.columns}\n                  isLoading={this.state.isLoading}\n                  isLoadingBatal={this.state.isLoadingBatal}\n                  btnClear={()=>this.clearHutang()}\n                  onSubmit={(data) => this.handleSubmit(data)}\n                />\n              </div>\n              <div className=\"col-12\"></div>\n            </div>\n          </div>\n          <br />\n          {/* End Tambah Validasi Hutang  */}\n        </Panel>\n      </div>\n    );\n  }\n}\n\nFormValidasiHutang = reduxForm({\n  form: \"FormValidasiHutang\",\n  enableReinitialize: true,\n})(FormValidasiHutang);\nexport default connect()(FormValidasiHutang);\n"],"sourceRoot":""}