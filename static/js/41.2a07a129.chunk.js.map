{"version":3,"sources":["Validasi/ValidasiMasterKategori.jsx","pages/DataMaster/DataKategori/FormModalDataKategori.jsx","../node_modules/reactstrap/es/ModalFooter.js"],"names":["ValidasiMasterKategori","value","event","errors","kode","nama_kategori","harga_pergram","presentase","kadar","FormModalKategori","state","_this2","this","react_default","a","createElement","Modal","backdrop","keyboard","isOpen","props","toggle","dispatch","hideModal","ModalHeader","title","onSubmit","handleSubmit","autoComplete","ModalBody","Field","name","component","ReanderField","type","label","placeholder","readOnly","isEdit","normalize","Gramasi","NumberOnly","ModalFooter","className","onClick","disabled","isLoading","submitting","Fragment","loading_default","loading","background","loaderColor","Component","reduxForm","form","enableReinitialize","validate","connect","datamaster","ShowtModalKategori","initialValues","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","propTypes","tag","string","cssModule","object","Tag","attributes","Object","classes","defaultProps","__webpack_exports__"],"mappings":"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","file":"static/js/41.2a07a129.chunk.js","sourcesContent":["const ValidasiMasterKategori = (value,event) => {\n    const errors = {};\n    // console.log(event.charCode==13);\n    if (!value.kode) {\n        errors.kode = \"Kode Tidak Boleh Kosong\";\n    }\n    if (!value.nama_kategori) {\n        errors.nama_kategori = \"Nama Kategori Tidak Boleh Kosong\";\n    }\n    \n    if (!value.harga_pergram) {\n        errors.harga_pergram = \"Harga / Gram Tidak Boleh Kosong\";\n    }\n    if (!value.presentase) {\n        errors.presentase = \"Presentase Tidak Boleh Kosong\";\n    }\n    if (!value.kadar) {\n        errors.kadar = \"Kadar Tidak Boleh Kosong\";\n    }\n\n    return errors;\n}\n\nexport default ValidasiMasterKategori;","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { hideModal } from \"../../../actions/datamaster_action\";\nimport { ReanderField } from \"../../../components/helpers/field\";\nimport { Gramasi, NumberOnly } from \"../../../Validasi/normalize.jsx\";\nimport ValidasiMasterKategori from \"../../../Validasi/ValidasiMasterKategori.jsx\";\nimport Loading from 'react-fullscreen-loading';\n\nconst maptostate = (state) => {\n  if (state.datamaster.ShowtModalKategori !== null) {\n    return {\n      initialValues: {\n        kode: state.datamaster.ShowtModalKategori.kode,\n        nama_kategori: state.datamaster.ShowtModalKategori.nama_kategori,\n        harga_pergram: state.datamaster.ShowtModalKategori.harga_pergram,\n        presentase: state.datamaster.ShowtModalKategori.presentase,\n        kadar: state.datamaster.ShowtModalKategori.kadar,\n      },\n    };\n  }\n};\nclass FormModalKategori extends Component {\n  state = {};\n  render() {\n    return (\n      <Modal\n        backdrop=\"static\"\n        keyboard={false}\n        isOpen={this.props.isOpen}\n        toggle={() => this.props.dispatch(hideModal())}\n      >\n        <ModalHeader> {this.props.title} </ModalHeader>\n        <form onSubmit={this.props.handleSubmit} autoComplete=\"off\">\n          <ModalBody>\n            <Field\n              name=\"kode\"\n              component={ReanderField}\n              type=\"text\"\n              label=\"Kode\"\n              placeholder=\"Masukan Kode\"\n              readOnly={this.props.isEdit}\n            />\n            <Field\n              name=\"nama_kategori\"\n              component={ReanderField}\n              type=\"text\"\n              label=\"Nama Kategori\"\n              placeholder=\"Masukan Nama Kategori\"\n            />\n            <Field\n              name=\"harga_pergram\"\n              component={ReanderField}\n              type=\"text\"\n              label=\"Harga / Gram\"\n              placeholder=\"Masukan Harga / Gram\"\n              normalize={Gramasi}\n            />\n            <Field\n              name=\"presentase\"\n              component={ReanderField}\n              type=\"text\"\n              label=\"Presentase\"\n              placeholder=\"Masukan Presentase\"\n              normalize={NumberOnly}\n            />\n            <Field\n              name=\"kadar\"\n              component={ReanderField}\n              type=\"text\"\n              label=\"Kadar\"\n              placeholder=\"Masukan Kadar\"\n            />\n          </ModalBody>\n          <ModalFooter>\n            <button\n              className=\"btn btn-white\"\n              onClick={() => this.props.dispatch(hideModal())}\n              type=\"button\"\n              disabled={this.props.isLoading}\n            >\n              Batal\n            </button>\n            <button\n              className=\"btn btn-primary\"\n              disabled={this.props.submitting}\n              type=\"submit\"\n            >\n              {this.props.isLoading ? (\n                <>\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\n                  Menyimpan\n                </>\n              ) : (\n                \"Simpan Data\"\n              )}\n            </button>\n          </ModalFooter>\n          {this.props.isLoading ? (\n        <Loading \n        loading\n        background=\"rgba(0, 0, 0, 0.35)\"\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\n      ) : null}\n        </form>\n      </Modal>\n    );\n  }\n}\n\nFormModalKategori = reduxForm({\n  form: \"ModalKategori\",\n  enableReinitialize: true,\n  validate: ValidasiMasterKategori,\n})(FormModalKategori);\nexport default connect(maptostate, null)(FormModalKategori);\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar ModalFooter = function ModalFooter(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'modal-footer'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nModalFooter.propTypes = propTypes;\nModalFooter.defaultProps = defaultProps;\nexport default ModalFooter;"],"sourceRoot":""}